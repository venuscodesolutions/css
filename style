/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;

@layer theme {

    :root,
    :host {
        --font-sans:
            ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
            "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono:
            ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
            "Liberation Mono", "Courier New", monospace;
        --color-red-50: oklch(97.1% 0.013 17.38);
        --color-red-100: oklch(93.6% 0.032 17.717);
        --color-red-400: oklch(70.4% 0.191 22.216);
        --color-red-500: oklch(63.7% 0.237 25.331);
        --color-red-600: oklch(57.7% 0.245 27.325);
        --color-red-700: oklch(50.5% 0.213 27.518);
        --color-red-800: oklch(44.4% 0.177 26.899);
        --color-red-900: oklch(39.6% 0.141 25.723);
        --color-red-950: oklch(25.8% 0.092 26.042);
        --color-orange-400: oklch(75% 0.183 55.934);
        --color-amber-500: oklch(76.9% 0.188 70.08);
        --color-yellow-50: oklch(98.7% 0.026 102.212);
        --color-yellow-100: oklch(97.3% 0.071 103.193);
        --color-yellow-200: oklch(94.5% 0.129 101.54);
        --color-yellow-400: oklch(85.2% 0.199 91.936);
        --color-yellow-500: oklch(79.5% 0.184 86.047);
        --color-yellow-600: oklch(68.1% 0.162 75.834);
        --color-yellow-700: oklch(55.4% 0.135 66.442);
        --color-yellow-800: oklch(47.6% 0.114 61.907);
        --color-yellow-900: oklch(42.1% 0.095 57.708);
        --color-yellow-950: oklch(28.6% 0.066 53.813);
        --color-green-50: oklch(98.2% 0.018 155.826);
        --color-green-100: oklch(96.2% 0.044 156.743);
        --color-green-200: oklch(92.5% 0.084 155.995);
        --color-green-400: oklch(79.2% 0.209 151.711);
        --color-green-500: oklch(72.3% 0.219 149.579);
        --color-green-600: oklch(62.7% 0.194 149.214);
        --color-green-700: oklch(52.7% 0.154 150.069);
        --color-green-800: oklch(44.8% 0.119 151.328);
        --color-green-900: oklch(39.3% 0.095 152.535);
        --color-green-950: oklch(26.6% 0.065 152.934);
        --color-emerald-500: oklch(69.6% 0.17 162.48);
        --color-emerald-900: oklch(37.8% 0.077 168.94);
        --color-teal-600: oklch(60% 0.118 184.704);
        --color-cyan-400: oklch(78.9% 0.154 211.53);
        --color-sky-500: oklch(68.5% 0.169 237.323);
        --color-sky-900: oklch(39.1% 0.09 240.876);
        --color-blue-50: oklch(97% 0.014 254.604);
        --color-blue-100: oklch(93.2% 0.032 255.585);
        --color-blue-200: oklch(88.2% 0.059 254.128);
        --color-blue-300: oklch(80.9% 0.105 251.813);
        --color-blue-400: oklch(70.7% 0.165 254.624);
        --color-blue-500: oklch(62.3% 0.214 259.815);
        --color-blue-600: oklch(54.6% 0.245 262.881);
        --color-blue-700: oklch(48.8% 0.243 264.376);
        --color-blue-800: oklch(42.4% 0.199 265.638);
        --color-blue-900: oklch(37.9% 0.146 265.522);
        --color-blue-950: oklch(28.2% 0.091 267.935);
        --color-indigo-400: oklch(67.3% 0.182 276.935);
        --color-indigo-500: oklch(58.5% 0.233 277.117);
        --color-violet-50: oklch(96.9% 0.016 293.756);
        --color-violet-100: oklch(94.3% 0.029 294.588);
        --color-violet-200: oklch(89.4% 0.057 293.283);
        --color-violet-400: oklch(70.2% 0.183 293.541);
        --color-violet-500: oklch(60.6% 0.25 292.717);
        --color-violet-600: oklch(54.1% 0.281 293.009);
        --color-violet-700: oklch(49.1% 0.27 292.581);
        --color-violet-800: oklch(43.2% 0.232 292.759);
        --color-violet-900: oklch(38% 0.189 293.745);
        --color-violet-950: oklch(28.3% 0.141 291.089);
        --color-purple-400: oklch(71.4% 0.203 305.504);
        --color-purple-500: oklch(62.7% 0.265 303.9);
        --color-purple-900: oklch(38.1% 0.176 304.987);
        --color-fuchsia-400: oklch(74% 0.238 322.16);
        --color-fuchsia-600: oklch(59.1% 0.293 322.896);
        --color-fuchsia-700: oklch(51.8% 0.253 323.949);
        --color-pink-400: oklch(71.8% 0.202 349.761);
        --color-pink-500: oklch(65.6% 0.241 354.308);
        --color-rose-400: oklch(71.2% 0.194 13.428);
        --color-slate-100: oklch(96.8% 0.007 247.896);
        --color-slate-300: oklch(86.9% 0.022 252.894);
        --color-slate-600: oklch(44.6% 0.043 257.281);
        --color-slate-700: oklch(37.2% 0.044 257.287);
        --color-slate-800: oklch(27.9% 0.041 260.031);
        --color-slate-900: oklch(20.8% 0.042 265.755);
        --color-gray-50: oklch(98.5% 0.002 247.839);
        --color-gray-100: oklch(96.7% 0.003 264.542);
        --color-gray-200: oklch(92.8% 0.006 264.531);
        --color-gray-300: oklch(87.2% 0.01 258.338);
        --color-gray-400: oklch(70.7% 0.022 261.325);
        --color-gray-500: oklch(55.1% 0.027 264.364);
        --color-gray-600: oklch(44.6% 0.03 256.802);
        --color-gray-700: oklch(37.3% 0.034 259.733);
        --color-gray-800: oklch(27.8% 0.033 256.848);
        --color-gray-900: oklch(21% 0.034 264.665);
        --color-zinc-50: oklch(98.5% 0 0);
        --color-zinc-100: oklch(96.7% 0.001 286.375);
        --color-zinc-200: oklch(92% 0.004 286.32);
        --color-zinc-300: oklch(87.1% 0.006 286.286);
        --color-zinc-400: oklch(70.5% 0.015 286.067);
        --color-zinc-500: oklch(55.2% 0.016 285.938);
        --color-zinc-600: oklch(44.2% 0.017 285.786);
        --color-zinc-700: oklch(37% 0.013 285.805);
        --color-zinc-800: oklch(27.4% 0.006 286.033);
        --color-zinc-900: oklch(21% 0.006 285.885);
        --color-zinc-950: oklch(14.1% 0.005 285.823);
        --color-neutral-200: oklch(92.2% 0 0);
        --color-neutral-700: oklch(37.1% 0 0);
        --color-neutral-900: oklch(20.5% 0 0);
        --color-neutral-950: oklch(14.5% 0 0);
        --color-black: #000;
        --color-white: #fff;
        --spacing: 0.25rem;
        --breakpoint-sm: 40rem;
        --breakpoint-md: 48rem;
        --breakpoint-lg: 64rem;
        --breakpoint-xl: 80rem;
        --breakpoint-2xl: 96rem;
        --container-sm: 24rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-2xl: 42rem;
        --container-3xl: 48rem;
        --container-5xl: 64rem;
        --text-xs: 0.75rem;
        --text-xs--line-height: calc(1 / 0.75);
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --font-weight-light: 300;
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-tighter: -0.05em;
        --tracking-tight: -0.025em;
        --tracking-widest: 0.1em;
        --leading-tight: 1.25;
        --leading-relaxed: 1.625;
        --leading-loose: 2;
        --radius-sm: calc(var(--radius) - 4px);
        --radius-md: calc(var(--radius) - 2px);
        --radius-lg: var(--radius);
        --radius-xl: calc(var(--radius) + 4px);
        --radius-2xl: 1rem;
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
        --animate-spin: spin 1s linear infinite;
        --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        --blur-xs: 4px;
        --blur-sm: 8px;
        --blur-md: 12px;
        --aspect-video: 16 / 9;
        --default-transition-duration: 150ms;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
        --color-background: var(--background);
        --color-popover: var(--popover);
        --color-muted-foreground: var(--muted-foreground);
        --color-accent: var(--accent);
        --color-primary: var(--primary);
        --color-primary-foreground: var(--primary-foreground);
        --color-secondary-foreground: var(--secondary-foreground);
        --color-destructive: var(--destructive);
        --color-mono: var(--mono);
        --color-border: var(--border);
        --color-input: var(--input);
        --text-2sm: 0.8125rem;
        --text-2sm--line-height: calc(1.075 / 0.8125);
        --text-2xs: 0.6875rem;
        --text-2xs--line-height: calc(0.825 / 0.6875);
    }
}

@layer base {

    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }

    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family,
                ui-sans-serif,
                system-ui,
                sans-serif,
                "Apple Color Emoji",
                "Segoe UI Emoji",
                "Segoe UI Symbol",
                "Noto Color Emoji"
            );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b,
    strong {
        font-weight: bolder;
    }

    code,
    kbd,
    samp,
    pre {
        font-family: var(--default-mono-font-family,
                ui-monospace,
                SFMono-Regular,
                Menlo,
                Monaco,
                Consolas,
                "Liberation Mono",
                "Courier New",
                monospace);
        font-feature-settings: var(--default-mono-font-feature-settings,
                normal);
        font-variation-settings: var(--default-mono-font-variation-settings,
                normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol,
    ul,
    menu {
        list-style: none;
    }

    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }

    img,
    video {
        max-width: 100%;
        height: auto;
    }

    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
    }

    @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button,
    input:where([type="button"], [type="reset"], [type="submit"]),
    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
}

@layer utilities {
    .\@container {
        container-type: inline-size;
    }

    .pointer-events-none {
        pointer-events: none;
    }

    .collapse {
        visibility: collapse;
    }

    .invisible {
        visibility: hidden;
    }

    .visible {
        visibility: visible;
    }

    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .static {
        position: static;
    }

    .sticky {
        position: sticky;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .inset-5 {
        inset: calc(var(--spacing) * 5);
    }

    .inset-x-0 {
        inset-inline: calc(var(--spacing) * 0);
    }

    .inset-x-10 {
        inset-inline: calc(var(--spacing) * 10);
    }

    .inset-y-0 {
        inset-block: calc(var(--spacing) * 0);
    }

    .-start-\[3px\] {
        inset-inline-start: calc(3px * -1);
    }

    .start-\(--sidebar-width\) {
        inset-inline-start: var(--sidebar-width);
    }

    .start-0 {
        inset-inline-start: calc(var(--spacing) * 0);
    }

    .start-1\.5 {
        inset-inline-start: calc(var(--spacing) * 1.5);
    }

    .start-2 {
        inset-inline-start: calc(var(--spacing) * 2);
    }

    .start-2\.5 {
        inset-inline-start: calc(var(--spacing) * 2.5);
    }

    .start-2\/4 {
        inset-inline-start: calc(2 / 4 * 100%);
    }

    .start-3\.5 {
        inset-inline-start: calc(var(--spacing) * 3.5);
    }

    .start-\[calc\(var\(--sidebar-width\)\)\] {
        inset-inline-start: calc(var(--sidebar-width));
    }

    .start-auto {
        inset-inline-start: auto;
    }

    .start-full {
        inset-inline-start: 100%;
    }

    .start-px {
        inset-inline-start: 1px;
    }

    .-end-0\.5 {
        inset-inline-end: calc(var(--spacing) * -0.5);
    }

    .-end-1 {
        inset-inline-end: calc(var(--spacing) * -1);
    }

    .-end-1\.5 {
        inset-inline-end: calc(var(--spacing) * -1.5);
    }

    .-end-2 {
        inset-inline-end: calc(var(--spacing) * -2);
    }

    .end-0 {
        inset-inline-end: calc(var(--spacing) * 0);
    }

    .end-0\.5 {
        inset-inline-end: calc(var(--spacing) * 0.5);
    }

    .end-2 {
        inset-inline-end: calc(var(--spacing) * 2);
    }

    .end-3 {
        inset-inline-end: calc(var(--spacing) * 3);
    }

    .end-3\.5 {
        inset-inline-end: calc(var(--spacing) * 3.5);
    }

    .end-5 {
        inset-inline-end: calc(var(--spacing) * 5);
    }

    .end-7 {
        inset-inline-end: calc(var(--spacing) * 7);
    }

    .-top-0\.5 {
        top: calc(var(--spacing) * -0.5);
    }

    .-top-1\.5 {
        top: calc(var(--spacing) * -1.5);
    }

    .-top-2 {
        top: calc(var(--spacing) * -2);
    }

    .-top-12 {
        top: calc(var(--spacing) * -12);
    }

    .-top-16 {
        top: calc(var(--spacing) * -16);
    }

    .top-\(--header-height\) {
        top: var(--header-height);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-0\.5 {
        top: calc(var(--spacing) * 0.5);
    }

    .top-1 {
        top: calc(var(--spacing) * 1);
    }

    .top-1\/2 {
        top: calc(1 / 2 * 100%);
    }

    .top-2 {
        top: calc(var(--spacing) * 2);
    }

    .top-2\.5 {
        top: calc(var(--spacing) * 2.5);
    }

    .top-2\/4 {
        top: calc(2 / 4 * 100%);
    }

    .top-3 {
        top: calc(var(--spacing) * 3);
    }

    .top-4 {
        top: calc(var(--spacing) * 4);
    }

    .top-5 {
        top: calc(var(--spacing) * 5);
    }

    .top-9 {
        top: calc(var(--spacing) * 9);
    }

    .top-16 {
        top: calc(var(--spacing) * 16);
    }

    .top-\[0\.3rem\] {
        top: 0.3rem;
    }

    .top-\[1px\] {
        top: 1px;
    }

    .top-\[15\%\] {
        top: 15%;
    }

    .top-\[50\%\] {
        top: 50%;
    }

    .top-\[60\%\] {
        top: 60%;
    }

    .top-\[66px\] {
        top: 66px;
    }

    .top-\[100px\] {
        top: 100px;
    }

    .top-\[var\(--header-height\)\] {
        top: var(--header-height);
    }

    .top-full {
        top: 100%;
    }

    .-right-12 {
        right: calc(var(--spacing) * -12);
    }

    .right-0 {
        right: calc(var(--spacing) * 0);
    }

    .right-2 {
        right: calc(var(--spacing) * 2);
    }

    .right-4 {
        right: calc(var(--spacing) * 4);
    }

    .right-\[0\.3rem\] {
        right: 0.3rem;
    }

    .-bottom-1\.5 {
        bottom: calc(var(--spacing) * -1.5);
    }

    .-bottom-2 {
        bottom: calc(var(--spacing) * -2);
    }

    .-bottom-12 {
        bottom: calc(var(--spacing) * -12);
    }

    .-bottom-px {
        bottom: -1px;
    }

    .bottom-0 {
        bottom: calc(var(--spacing) * 0);
    }

    .bottom-2\.5 {
        bottom: calc(var(--spacing) * 2.5);
    }

    .bottom-5 {
        bottom: calc(var(--spacing) * 5);
    }

    .-left-12 {
        left: calc(var(--spacing) * -12);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .left-1\/2 {
        left: calc(1 / 2 * 100%);
    }

    .left-2 {
        left: calc(var(--spacing) * 2);
    }

    .left-3 {
        left: calc(var(--spacing) * 3);
    }

    .left-6 {
        left: calc(var(--spacing) * 6);
    }

    .left-7 {
        left: calc(var(--spacing) * 7);
    }

    .left-10 {
        left: calc(var(--spacing) * 10);
    }

    .left-\[50\%\] {
        left: 50%;
    }

    .left-auto {
        left: auto;
    }

    .isolate {
        isolation: isolate;
    }

    .z-1 {
        z-index: 1;
    }

    .z-5 {
        z-index: 5;
    }

    .z-10 {
        z-index: 10;
    }

    .z-20 {
        z-index: 20;
    }

    .z-30 {
        z-index: 30;
    }

    .z-50 {
        z-index: 50;
    }

    .z-\[1\] {
        z-index: 1;
    }

    .z-\[10\] {
        z-index: 10;
    }

    .order-1 {
        order: 1;
    }

    .order-2 {
        order: 2;
    }

    .col-span-1 {
        grid-column: span 1 / span 1;
    }

    .col-span-2 {
        grid-column: span 2 / span 2;
    }

    .container {
        width: 100%;

        @media (width >=40rem) {
            max-width: 40rem;
        }

        @media (width >=48rem) {
            max-width: 48rem;
        }

        @media (width >=64rem) {
            max-width: 64rem;
        }

        @media (width >=80rem) {
            max-width: 80rem;
        }

        @media (width >=96rem) {
            max-width: 96rem;
        }
    }

    .m-0 {
        margin: calc(var(--spacing) * 0);
    }

    .m-0\.5 {
        margin: calc(var(--spacing) * 0.5);
    }

    .m-2 {
        margin: calc(var(--spacing) * 2);
    }

    .m-2\.5 {
        margin: calc(var(--spacing) * 2.5);
    }

    .m-3\.5 {
        margin: calc(var(--spacing) * 3.5);
    }

    .m-4 {
        margin: calc(var(--spacing) * 4);
    }

    .m-5 {
        margin: calc(var(--spacing) * 5);
    }

    .m-\[15px\] {
        margin: 15px;
    }

    .container-fluid {
        margin-inline: auto;
        width: 100%;
        padding-inline: calc(var(--spacing) * 4);

        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 5);
        }
    }

    .container {
        margin-inline: auto;
        max-width: none;
        padding-inline: calc(var(--spacing) * 4);

        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 5);
        }

        @media (width >=80rem) {
            max-width: var(--breakpoint-xl);
        }
    }

    .-mx-1 {
        margin-inline: calc(var(--spacing) * -1);
    }

    .-mx-1\.5 {
        margin-inline: calc(var(--spacing) * -1.5);
    }

    .-mx-2 {
        margin-inline: calc(var(--spacing) * -2);
    }

    .mx-0\.5 {
        margin-inline: calc(var(--spacing) * 0.5);
    }

    .mx-1 {
        margin-inline: calc(var(--spacing) * 1);
    }

    .mx-1\.5 {
        margin-inline: calc(var(--spacing) * 1.5);
    }

    .mx-2 {
        margin-inline: calc(var(--spacing) * 2);
    }

    .mx-3\.5 {
        margin-inline: calc(var(--spacing) * 3.5);
    }

    .mx-4 {
        margin-inline: calc(var(--spacing) * 4);
    }

    .mx-5 {
        margin-inline: calc(var(--spacing) * 5);
    }

    .mx-10 {
        margin-inline: calc(var(--spacing) * 10);
    }

    .mx-\[2px\] {
        margin-inline: 2px;
    }

    .mx-auto {
        margin-inline: auto;
    }

    .my-0\.5 {
        margin-block: calc(var(--spacing) * 0.5);
    }

    .my-1 {
        margin-block: calc(var(--spacing) * 1);
    }

    .my-1\.5 {
        margin-block: calc(var(--spacing) * 1.5);
    }

    .my-2 {
        margin-block: calc(var(--spacing) * 2);
    }

    .my-2\.5 {
        margin-block: calc(var(--spacing) * 2.5);
    }

    .my-3\.5 {
        margin-block: calc(var(--spacing) * 3.5);
    }

    .my-4 {
        margin-block: calc(var(--spacing) * 4);
    }

    .my-5 {
        margin-block: calc(var(--spacing) * 5);
    }

    .my-6 {
        margin-block: calc(var(--spacing) * 6);
    }

    .my-auto {
        margin-block: auto;
    }

    .-ms-0\.5 {
        margin-inline-start: calc(var(--spacing) * -0.5);
    }

    .-ms-1 {
        margin-inline-start: calc(var(--spacing) * -1);
    }

    .-ms-1\.5 {
        margin-inline-start: calc(var(--spacing) * -1.5);
    }

    .-ms-2 {
        margin-inline-start: calc(var(--spacing) * -2);
    }

    .-ms-2\.5 {
        margin-inline-start: calc(var(--spacing) * -2.5);
    }

    .-ms-3\.5 {
        margin-inline-start: calc(var(--spacing) * -3.5);
    }

    .ms-0\.25 {
        margin-inline-start: calc(var(--spacing) * 0.25);
    }

    .ms-1 {
        margin-inline-start: calc(var(--spacing) * 1);
    }

    .ms-2 {
        margin-inline-start: calc(var(--spacing) * 2);
    }

    .ms-2\.5 {
        margin-inline-start: calc(var(--spacing) * 2.5);
    }

    .ms-4 {
        margin-inline-start: calc(var(--spacing) * 4);
    }

    .ms-5\.5 {
        margin-inline-start: calc(var(--spacing) * 5.5);
    }

    .ms-7\.5 {
        margin-inline-start: calc(var(--spacing) * 7.5);
    }

    .ms-auto {
        margin-inline-start: auto;
    }

    .-me-0\.5 {
        margin-inline-end: calc(var(--spacing) * -0.5);
    }

    .-me-1 {
        margin-inline-end: calc(var(--spacing) * -1);
    }

    .-me-1\.5 {
        margin-inline-end: calc(var(--spacing) * -1.5);
    }

    .-me-2 {
        margin-inline-end: calc(var(--spacing) * -2);
    }

    .me-0\.5 {
        margin-inline-end: calc(var(--spacing) * 0.5);
    }

    .me-1 {
        margin-inline-end: calc(var(--spacing) * 1);
    }

    .me-1\.5 {
        margin-inline-end: calc(var(--spacing) * 1.5);
    }

    .me-1\.25 {
        margin-inline-end: calc(var(--spacing) * 1.25);
    }

    .me-2 {
        margin-inline-end: calc(var(--spacing) * 2);
    }

    .me-2\.5 {
        margin-inline-end: calc(var(--spacing) * 2.5);
    }

    .me-3 {
        margin-inline-end: calc(var(--spacing) * 3);
    }

    .me-5 {
        margin-inline-end: calc(var(--spacing) * 5);
    }

    .me-\[-10px\] {
        margin-inline-end: -10px;
    }

    .-mt-0\.5 {
        margin-top: calc(var(--spacing) * -0.5);
    }

    .-mt-4 {
        margin-top: calc(var(--spacing) * -4);
    }

    .-mt-7\.5 {
        margin-top: calc(var(--spacing) * -7.5);
    }

    .-mt-8 {
        margin-top: calc(var(--spacing) * -8);
    }

    .-mt-px {
        margin-top: -1px;
    }

    .mt-\(--header-height\) {
        margin-top: var(--header-height);
    }

    .mt-0 {
        margin-top: calc(var(--spacing) * 0);
    }

    .mt-0\.5 {
        margin-top: calc(var(--spacing) * 0.5);
    }

    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }

    .mt-1\.5 {
        margin-top: calc(var(--spacing) * 1.5);
    }

    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }

    .mt-2\.5 {
        margin-top: calc(var(--spacing) * 2.5);
    }

    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }

    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }

    .mt-5 {
        margin-top: calc(var(--spacing) * 5);
    }

    .mt-6 {
        margin-top: calc(var(--spacing) * 6);
    }

    .mt-8 {
        margin-top: calc(var(--spacing) * 8);
    }

    .mt-12 {
        margin-top: calc(var(--spacing) * 12);
    }

    .mt-24 {
        margin-top: calc(var(--spacing) * 24);
    }

    .mt-\[2px\] {
        margin-top: 2px;
    }

    .mt-auto {
        margin-top: auto;
    }

    .mt-px {
        margin-top: 1px;
    }

    .mr-1 {
        margin-right: calc(var(--spacing) * 1);
    }

    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }

    .mr-3 {
        margin-right: calc(var(--spacing) * 3);
    }

    .mr-4 {
        margin-right: calc(var(--spacing) * 4);
    }

    .mr-5 {
        margin-right: calc(var(--spacing) * 5);
    }

    .mr-10 {
        margin-right: calc(var(--spacing) * 10);
    }

    .mr-auto {
        margin-right: auto;
    }

    .-mb-\[1px\] {
        margin-bottom: calc(1px * -1);
    }

    .mb-0 {
        margin-bottom: calc(var(--spacing) * 0);
    }

    .mb-0\.5 {
        margin-bottom: calc(var(--spacing) * 0.5);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-1\.5 {
        margin-bottom: calc(var(--spacing) * 1.5);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-2\.5 {
        margin-bottom: calc(var(--spacing) * 2.5);
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-3\.5 {
        margin-bottom: calc(var(--spacing) * 3.5);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-4\.5 {
        margin-bottom: calc(var(--spacing) * 4.5);
    }

    .mb-5 {
        margin-bottom: calc(var(--spacing) * 5);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .mb-7 {
        margin-bottom: calc(var(--spacing) * 7);
    }

    .mb-7\.5 {
        margin-bottom: calc(var(--spacing) * 7.5);
    }

    .mb-9 {
        margin-bottom: calc(var(--spacing) * 9);
    }

    .mb-10 {
        margin-bottom: calc(var(--spacing) * 10);
    }

    .mb-12 {
        margin-bottom: calc(var(--spacing) * 12);
    }

    .mb-14 {
        margin-bottom: calc(var(--spacing) * 14);
    }

    .mb-px {
        margin-bottom: 1px;
    }

    .-ml-1 {
        margin-left: calc(var(--spacing) * -1);
    }

    .-ml-4 {
        margin-left: calc(var(--spacing) * -4);
    }

    .ml-1 {
        margin-left: calc(var(--spacing) * 1);
    }

    .ml-2 {
        margin-left: calc(var(--spacing) * 2);
    }

    .ml-4 {
        margin-left: calc(var(--spacing) * 4);
    }

    .ml-6 {
        margin-left: calc(var(--spacing) * 6);
    }

    .ml-auto {
        margin-left: auto;
    }

    .box-content {
        box-sizing: content-box;
    }

    .block {
        display: block;
    }

    .contents {
        display: contents;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .inline {
        display: inline;
    }

    .inline-block {
        display: inline-block;
    }

    .inline-flex {
        display: inline-flex;
    }

    .table {
        display: table;
    }

    .table-caption {
        display: table-caption;
    }

    .table-cell {
        display: table-cell;
    }

    .table-row {
        display: table-row;
    }

    .aspect-square {
        aspect-ratio: 1 / 1;
    }

    .aspect-video {
        aspect-ratio: var(--aspect-video);
    }

    .size-1 {
        width: calc(var(--spacing) * 1);
        height: calc(var(--spacing) * 1);
    }

    .size-1\.5 {
        width: calc(var(--spacing) * 1.5);
        height: calc(var(--spacing) * 1.5);
    }

    .size-2 {
        width: calc(var(--spacing) * 2);
        height: calc(var(--spacing) * 2);
    }

    .size-2\.5 {
        width: calc(var(--spacing) * 2.5);
        height: calc(var(--spacing) * 2.5);
    }

    .size-3 {
        width: calc(var(--spacing) * 3);
        height: calc(var(--spacing) * 3);
    }

    .size-3\.5 {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
    }

    .size-3\.5\! {
        width: calc(var(--spacing) * 3.5) !important;
        height: calc(var(--spacing) * 3.5) !important;
    }

    .size-3\.25\! {
        width: calc(var(--spacing) * 3.25) !important;
        height: calc(var(--spacing) * 3.25) !important;
    }

    .size-4 {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .size-4\! {
        width: calc(var(--spacing) * 4) !important;
        height: calc(var(--spacing) * 4) !important;
    }

    .size-4\.5 {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);
    }

    .size-4\.5\! {
        width: calc(var(--spacing) * 4.5) !important;
        height: calc(var(--spacing) * 4.5) !important;
    }

    .size-5 {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
    }

    .size-5\! {
        width: calc(var(--spacing) * 5) !important;
        height: calc(var(--spacing) * 5) !important;
    }

    .size-5\.5 {
        width: calc(var(--spacing) * 5.5);
        height: calc(var(--spacing) * 5.5);
    }

    .size-6 {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
    }

    .size-7 {
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
    }

    .size-7\.5 {
        width: calc(var(--spacing) * 7.5);
        height: calc(var(--spacing) * 7.5);
    }

    .size-8 {
        width: calc(var(--spacing) * 8);
        height: calc(var(--spacing) * 8);
    }

    .size-8\.5 {
        width: calc(var(--spacing) * 8.5);
        height: calc(var(--spacing) * 8.5);
    }

    .size-9 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }

    .size-10 {
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
    }

    .size-11 {
        width: calc(var(--spacing) * 11);
        height: calc(var(--spacing) * 11);
    }

    .size-12 {
        width: calc(var(--spacing) * 12);
        height: calc(var(--spacing) * 12);
    }

    .size-14 {
        width: calc(var(--spacing) * 14);
        height: calc(var(--spacing) * 14);
    }

    .size-16 {
        width: calc(var(--spacing) * 16);
        height: calc(var(--spacing) * 16);
    }

    .size-\[0\.7rem\]\! {
        width: 0.7rem !important;
        height: 0.7rem !important;
    }

    .size-\[5px\] {
        width: 5px;
        height: 5px;
    }

    .size-\[30px\] {
        width: 30px;
        height: 30px;
    }

    .size-\[34px\] {
        width: 34px;
        height: 34px;
    }

    .size-\[50px\] {
        width: 50px;
        height: 50px;
    }

    .size-full {
        width: 100%;
        height: 100%;
    }

    .h-\(--content-header-height\) {
        height: var(--content-header-height);
    }

    .h-\(--header-height\) {
        height: var(--header-height);
    }

    .h-\(--header-height-mobile\) {
        height: var(--header-height-mobile);
    }

    .h-\(--navbar-height\) {
        height: var(--navbar-height);
    }

    .h-\(--sidebar-footer-collapsed-height\) {
        height: var(--sidebar-footer-collapsed-height);
    }

    .h-\(--sidebar-footer-height\) {
        height: var(--sidebar-footer-height);
    }

    .h-\(--sidebar-header-height\) {
        height: var(--sidebar-header-height);
    }

    .h-0 {
        height: calc(var(--spacing) * 0);
    }

    .h-0\.5 {
        height: calc(var(--spacing) * 0.5);
    }

    .h-1 {
        height: calc(var(--spacing) * 1);
    }

    .h-1\.5 {
        height: calc(var(--spacing) * 1.5);
    }

    .h-2 {
        height: calc(var(--spacing) * 2);
    }

    .h-2\.5 {
        height: calc(var(--spacing) * 2.5);
    }

    .h-3 {
        height: calc(var(--spacing) * 3);
    }

    .h-3\.5 {
        height: calc(var(--spacing) * 3.5);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-4\! {
        height: calc(var(--spacing) * 4) !important;
    }

    .h-4\.5 {
        height: calc(var(--spacing) * 4.5);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-7 {
        height: calc(var(--spacing) * 7);
    }

    .h-8 {
        height: calc(var(--spacing) * 8);
    }

    .h-8\.5 {
        height: calc(var(--spacing) * 8.5);
    }

    .h-9 {
        height: calc(var(--spacing) * 9);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-11 {
        height: calc(var(--spacing) * 11);
    }

    .h-12 {
        height: calc(var(--spacing) * 12);
    }

    .h-14 {
        height: calc(var(--spacing) * 14);
    }

    .h-16 {
        height: calc(var(--spacing) * 16);
    }

    .h-24 {
        height: calc(var(--spacing) * 24);
    }

    .h-40 {
        height: calc(var(--spacing) * 40);
    }

    .h-44 {
        height: calc(var(--spacing) * 44);
    }

    .h-56 {
        height: calc(var(--spacing) * 56);
    }

    .h-64 {
        height: calc(var(--spacing) * 64);
    }

    .h-96 {
        height: calc(var(--spacing) * 96);
    }

    .h-\[1\.2rem\] {
        height: 1.2rem;
    }

    .h-\[22px\] {
        height: 22px;
    }

    .h-\[25px\] {
        height: 25px;
    }

    .h-\[30px\] {
        height: 30px;
    }

    .h-\[34px\] {
        height: 34px;
    }

    .h-\[42px\] {
        height: 42px;
    }

    .h-\[46px\] {
        height: 46px;
    }

    .h-\[50px\] {
        height: 50px;
    }

    .h-\[54px\] {
        height: 54px;
    }

    .h-\[60px\] {
        height: 60px;
    }

    .h-\[62px\] {
        height: 62px;
    }

    .h-\[70px\] {
        height: 70px;
    }

    .h-\[95\%\] {
        height: 95%;
    }

    .h-\[96\%\] {
        height: 96%;
    }

    .h-\[120px\] {
        height: 120px;
    }

    .h-\[240px\] {
        height: 240px;
    }

    .h-\[480px\] {
        height: 480px;
    }

    .h-\[500px\] {
        height: 500px;
    }

    .h-\[calc\(100\%-4px\)\] {
        height: calc(100% - 4px);
    }

    .h-\[calc\(100vh-\(var\(--header-height\)\)-\(var\(--content-header-height\)\)-\(var\(--sidebar-footer-height\)\)\)\] {
        height: calc(100vh - (var(--header-height)) - (var(--content-header-height)) - (var(--sidebar-footer-height)));
    }

    .h-\[calc\(100vh-1rem\)\] {
        height: calc(100vh - 1rem);
    }

    .h-\[calc\(100vh-3\.5rem\)\] {
        height: calc(100vh - 3.5rem);
    }

    .h-\[calc\(100vh-4rem\)\] {
        height: calc(100vh - 4rem);
    }

    .h-\[calc\(100vh-5\.5rem\)\] {
        height: calc(100vh - 5.5rem);
    }

    .h-\[calc\(100vh-5rem\)\] {
        height: calc(100vh - 5rem);
    }

    .h-\[calc\(100vh-6\.5rem\)\] {
        height: calc(100vh - 6.5rem);
    }

    .h-\[calc\(100vh-8rem\)\] {
        height: calc(100vh - 8rem);
    }

    .h-\[calc\(100vh-10\.5rem\)\] {
        height: calc(100vh - 10.5rem);
    }

    .h-\[calc\(100vh-10rem\)\] {
        height: calc(100vh - 10rem);
    }

    .h-\[calc\(100vh-11rem\)\] {
        height: calc(100vh - 11rem);
    }

    .h-\[calc\(100vh-12rem\)\] {
        height: calc(100vh - 12rem);
    }

    .h-\[calc\(100vh-20rem\)\] {
        height: calc(100vh - 20rem);
    }

    .h-\[calc\(100vh-135px\)\] {
        height: calc(100vh - 135px);
    }

    .h-\[calc\(100vh-175px\)\] {
        height: calc(100vh - 175px);
    }

    .h-\[calc\(100vh-300px\)\] {
        height: calc(100vh - 300px);
    }

    .h-\[var\(--header-height\)\] {
        height: var(--header-height);
    }

    .h-\[var\(--radix-navigation-menu-viewport-height\)\] {
        height: var(--radix-navigation-menu-viewport-height);
    }

    .h-\[var\(--radix-select-trigger-height\)\] {
        height: var(--radix-select-trigger-height);
    }

    .h-auto {
        height: auto;
    }

    .h-full {
        height: 100%;
    }

    .h-px {
        height: 1px;
    }

    .h-screen {
        height: 100vh;
    }

    .max-h-\(--radix-context-menu-content-available-height\) {
        max-height: var(--radix-context-menu-content-available-height);
    }

    .max-h-5 {
        max-height: calc(var(--spacing) * 5);
    }

    .max-h-20 {
        max-height: calc(var(--spacing) * 20);
    }

    .max-h-44 {
        max-height: calc(var(--spacing) * 44);
    }

    .max-h-96 {
        max-height: calc(var(--spacing) * 96);
    }

    .max-h-\[25px\] {
        max-height: 25px;
    }

    .max-h-\[50vh\] {
        max-height: 50vh;
    }

    .max-h-\[55px\] {
        max-height: 55px;
    }

    .max-h-\[60svh\] {
        max-height: 60svh;
    }

    .max-h-\[95\%\] {
        max-height: 95%;
    }

    .max-h-\[113px\] {
        max-height: 113px;
    }

    .max-h-\[140px\] {
        max-height: 140px;
    }

    .max-h-\[150px\] {
        max-height: 150px;
    }

    .max-h-\[250px\] {
        max-height: 250px;
    }

    .max-h-\[300px\] {
        max-height: 300px;
    }

    .max-h-\[400px\] {
        max-height: 400px;
    }

    .max-h-\[650px\] {
        max-height: 650px;
    }

    .max-h-\[calc\(100dvh-10px\)\)\] {
        max-height: calc(100dvh - 10px);
    }

    .max-h-\[calc\(100vh-2rem\)\] {
        max-height: calc(100vh - 2rem);
    }

    .max-h-\[calc\(100vh-3rem\)\] {
        max-height: calc(100vh - 3rem);
    }

    .max-h-\[calc\(100vh-5rem\)\] {
        max-height: calc(100vh - 5rem);
    }

    .max-h-\[calc\(100vh-11\.5rem\)\] {
        max-height: calc(100vh - 11.5rem);
    }

    .max-h-\[calc\(100vh-13rem\)\] {
        max-height: calc(100vh - 13rem);
    }

    .min-h-\(--sidebar-header-height\) {
        min-height: var(--sidebar-header-height);
    }

    .min-h-\(--toolbar-height\) {
        min-height: var(--toolbar-height);
    }

    .min-h-7 {
        min-height: calc(var(--spacing) * 7);
    }

    .min-h-8\.5 {
        min-height: calc(var(--spacing) * 8.5);
    }

    .min-h-10 {
        min-height: calc(var(--spacing) * 10);
    }

    .min-h-14 {
        min-height: calc(var(--spacing) * 14);
    }

    .min-h-\[22px\] {
        min-height: 22px;
    }

    .min-h-\[24px\] {
        min-height: 24px;
    }

    .min-h-\[25px\] {
        min-height: 25px;
    }

    .min-h-\[30px\] {
        min-height: 30px;
    }

    .min-h-\[34px\] {
        min-height: 34px;
    }

    .min-h-\[42px\] {
        min-height: 42px;
    }

    .min-h-\[350px\] {
        min-height: 350px;
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .w-\(--radix-dropdown-menu-trigger-width\) {
        width: var(--radix-dropdown-menu-trigger-width);
    }

    .w-\(--radix-popper-anchor-width\) {
        width: var(--radix-popper-anchor-width);
    }

    .w-\(--sidebar-collapsed-width\) {
        width: var(--sidebar-collapsed-width);
    }

    .w-\(--sidebar-default-width\) {
        width: var(--sidebar-default-width);
    }

    .w-\(--sidebar-right-width\) {
        width: var(--sidebar-right-width);
    }

    .w-\(--sidebar-width\) {
        width: var(--sidebar-width);
    }

    .w-0 {
        width: calc(var(--spacing) * 0);
    }

    .w-0\.5 {
        width: calc(var(--spacing) * 0.5);
    }

    .w-1 {
        width: calc(var(--spacing) * 1);
    }

    .w-1\.5 {
        width: calc(var(--spacing) * 1.5);
    }

    .w-1\/2 {
        width: calc(1 / 2 * 100%);
    }

    .w-2 {
        width: calc(var(--spacing) * 2);
    }

    .w-2\.5 {
        width: calc(var(--spacing) * 2.5);
    }

    .w-3 {
        width: calc(var(--spacing) * 3);
    }

    .w-3\.5 {
        width: calc(var(--spacing) * 3.5);
    }

    .w-3\/4 {
        width: calc(3 / 4 * 100%);
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-4\! {
        width: calc(var(--spacing) * 4) !important;
    }

    .w-4\.5 {
        width: calc(var(--spacing) * 4.5);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-7 {
        width: calc(var(--spacing) * 7);
    }

    .w-8 {
        width: calc(var(--spacing) * 8);
    }

    .w-8\.5 {
        width: calc(var(--spacing) * 8.5);
    }

    .w-9 {
        width: calc(var(--spacing) * 9);
    }

    .w-10 {
        width: calc(var(--spacing) * 10);
    }

    .w-11 {
        width: calc(var(--spacing) * 11);
    }

    .w-12 {
        width: calc(var(--spacing) * 12);
    }

    .w-14 {
        width: calc(var(--spacing) * 14);
    }

    .w-16 {
        width: calc(var(--spacing) * 16);
    }

    .w-20 {
        width: calc(var(--spacing) * 20);
    }

    .w-24 {
        width: calc(var(--spacing) * 24);
    }

    .w-28 {
        width: calc(var(--spacing) * 28);
    }

    .w-32 {
        width: calc(var(--spacing) * 32);
    }

    .w-36 {
        width: calc(var(--spacing) * 36);
    }

    .w-40 {
        width: calc(var(--spacing) * 40);
    }

    .w-44 {
        width: calc(var(--spacing) * 44);
    }

    .w-48 {
        width: calc(var(--spacing) * 48);
    }

    .w-56 {
        width: calc(var(--spacing) * 56);
    }

    .w-60 {
        width: calc(var(--spacing) * 60);
    }

    .w-64 {
        width: calc(var(--spacing) * 64);
    }

    .w-72 {
        width: calc(var(--spacing) * 72);
    }

    .w-80 {
        width: calc(var(--spacing) * 80);
    }

    .w-\[1\.2rem\] {
        width: 1.2rem;
    }

    .w-\[1ch\] {
        width: 1ch;
    }

    .w-\[2px\] {
        width: 2px;
    }

    .w-\[6px\] {
        width: 6px;
    }

    .w-\[20\%\] {
        width: 20%;
    }

    .w-\[20px\] {
        width: 20px;
    }

    .w-\[26px\] {
        width: 26px;
    }

    .w-\[40\%\] {
        width: 40%;
    }

    .w-\[50px\] {
        width: 50px;
    }

    .w-\[60px\] {
        width: 60px;
    }

    .w-\[62px\] {
        width: 62px;
    }

    .w-\[70px\] {
        width: 70px;
    }

    .w-\[100px\] {
        width: 100px;
    }

    .w-\[120px\] {
        width: 120px;
    }

    .w-\[125px\] {
        width: 125px;
    }

    .w-\[150px\] {
        width: 150px;
    }

    .w-\[170px\] {
        width: 170px;
    }

    .w-\[175px\] {
        width: 175px;
    }

    .w-\[180px\] {
        width: 180px;
    }

    .w-\[182px\] {
        width: 182px;
    }

    .w-\[190px\] {
        width: 190px;
    }

    .w-\[192px\] {
        width: 192px;
    }

    .w-\[200px\] {
        width: 200px;
    }

    .w-\[210px\] {
        width: 210px;
    }

    .w-\[220px\] {
        width: 220px;
    }

    .w-\[225px\] {
        width: 225px;
    }

    .w-\[230px\] {
        width: 230px;
    }

    .w-\[240px\] {
        width: 240px;
    }

    .w-\[250px\] {
        width: 250px;
    }

    .w-\[275px\] {
        width: 275px;
    }

    .w-\[280px\] {
        width: 280px;
    }

    .w-\[285px\] {
        width: 285px;
    }

    .w-\[300px\] {
        width: 300px;
    }

    .w-\[320px\] {
        width: 320px;
    }

    .w-\[325px\] {
        width: 325px;
    }

    .w-\[450px\] {
        width: 450px;
    }

    .w-\[unset\] {
        width: unset;
    }

    .w-\[var\(--sidebar-width\)\] {
        width: var(--sidebar-width);
    }

    .w-auto {
        width: auto;
    }

    .w-fit {
        width: fit-content;
    }

    .w-full {
        width: 100%;
    }

    .w-max {
        width: max-content;
    }

    .w-px {
        width: 1px;
    }

    .w-screen {
        width: 100vw;
    }

    .max-w-2xl {
        max-width: var(--container-2xl);
    }

    .max-w-3xl {
        max-width: var(--container-3xl);
    }

    .max-w-5xl {
        max-width: var(--container-5xl);
    }

    .max-w-24 {
        max-width: calc(var(--spacing) * 24);
    }

    .max-w-\[90\%\] {
        max-width: 90%;
    }

    .max-w-\[125px\] {
        max-width: 125px;
    }

    .max-w-\[175px\] {
        max-width: 175px;
    }

    .max-w-\[198px\] {
        max-width: 198px;
    }

    .max-w-\[200px\] {
        max-width: 200px;
    }

    .max-w-\[220px\] {
        max-width: 220px;
    }

    .max-w-\[250px\] {
        max-width: 250px;
    }

    .max-w-\[280px\] {
        max-width: 280px;
    }

    .max-w-\[320px\] {
        max-width: 320px;
    }

    .max-w-\[500px\] {
        max-width: 500px;
    }

    .max-w-\[600px\] {
        max-width: 600px;
    }

    .max-w-full {
        max-width: 100%;
    }

    .max-w-lg {
        max-width: var(--container-lg);
    }

    .max-w-max {
        max-width: max-content;
    }

    .max-w-none {
        max-width: none;
    }

    .min-w-0 {
        min-width: calc(var(--spacing) * 0);
    }

    .min-w-4 {
        min-width: calc(var(--spacing) * 4);
    }

    .min-w-5 {
        min-width: calc(var(--spacing) * 5);
    }

    .min-w-6 {
        min-width: calc(var(--spacing) * 6);
    }

    .min-w-7 {
        min-width: calc(var(--spacing) * 7);
    }

    .min-w-8\.5 {
        min-width: calc(var(--spacing) * 8.5);
    }

    .min-w-10 {
        min-width: calc(var(--spacing) * 10);
    }

    .min-w-12 {
        min-width: calc(var(--spacing) * 12);
    }

    .min-w-16 {
        min-width: calc(var(--spacing) * 16);
    }

    .min-w-20 {
        min-width: calc(var(--spacing) * 20);
    }

    .min-w-24 {
        min-width: calc(var(--spacing) * 24);
    }

    .min-w-32 {
        min-width: calc(var(--spacing) * 32);
    }

    .min-w-64 {
        min-width: calc(var(--spacing) * 64);
    }

    .min-w-\[8rem\] {
        min-width: 8rem;
    }

    .min-w-\[12rem\] {
        min-width: 12rem;
    }

    .min-w-\[16px\] {
        min-width: 16px;
    }

    .min-w-\[18px\] {
        min-width: 18px;
    }

    .min-w-\[50px\] {
        min-width: 50px;
    }

    .min-w-\[120px\] {
        min-width: 120px;
    }

    .min-w-\[150px\] {
        min-width: 150px;
    }

    .min-w-\[160px\] {
        min-width: 160px;
    }

    .min-w-\[175px\] {
        min-width: 175px;
    }

    .min-w-\[198px\] {
        min-width: 198px;
    }

    .min-w-\[200px\] {
        min-width: 200px;
    }

    .min-w-\[250px\] {
        min-width: 250px;
    }

    .min-w-\[750px\] {
        min-width: 750px;
    }

    .min-w-\[var\(--radix-select-trigger-width\)\] {
        min-width: var(--radix-select-trigger-width);
    }

    .min-w-full {
        min-width: 100%;
    }

    .flex-1 {
        flex: 1;
    }

    .flex-shrink {
        flex-shrink: 1;
    }

    .flex-shrink-0 {
        flex-shrink: 0;
    }

    .shrink-0 {
        flex-shrink: 0;
    }

    .flex-grow {
        flex-grow: 1;
    }

    .grow {
        flex-grow: 1;
    }

    .grow-0 {
        flex-grow: 0;
    }

    .basis-1\/2 {
        flex-basis: calc(1 / 2 * 100%);
    }

    .basis-1\/4 {
        flex-basis: calc(1 / 4 * 100%);
    }

    .basis-full {
        flex-basis: 100%;
    }

    .table-auto {
        table-layout: auto;
    }

    .table-fixed {
        table-layout: fixed;
    }

    .caption-bottom {
        caption-side: bottom;
    }

    .border-collapse {
        border-collapse: collapse;
    }

    .border-separate {
        border-collapse: separate;
    }

    .border-spacing-0 {
        --tw-border-spacing-x: calc(var(--spacing) * 0);
        --tw-border-spacing-y: calc(var(--spacing) * 0);
        border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
    }

    .origin-\(--radix-context-menu-content-transform-origin\) {
        transform-origin: var(--radix-context-menu-content-transform-origin);
    }

    .origin-\(--radix-hover-card-content-transform-origin\) {
        transform-origin: var(--radix-hover-card-content-transform-origin);
    }

    .-translate-x-1\/2 {
        --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-x-2\/4 {
        --tw-translate-x: calc(calc(2 / 4 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-x-full {
        --tw-translate-x: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-1\/2 {
        --tw-translate-x: calc(1 / 2 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-\[-50\%\] {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-full {
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-2\/4 {
        --tw-translate-y: calc(calc(2 / 4 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-0 {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-1\/2 {
        --tw-translate-y: calc(1 / 2 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-2 {
        --tw-translate-y: calc(var(--spacing) * 2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-\[-50\%\] {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .scale-0 {
        --tw-scale-x: 0%;
        --tw-scale-y: 0%;
        --tw-scale-z: 0%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }

    .scale-100 {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }

    .-rotate-90 {
        rotate: calc(90deg * -1);
    }

    .-rotate-180 {
        rotate: calc(180deg * -1);
    }

    .rotate-0 {
        rotate: 0deg;
    }

    .rotate-45 {
        rotate: 45deg;
    }

    .rotate-90 {
        rotate: 90deg;
    }

    .transform {
        transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .transform-gpu {
        transform: translateZ(0) var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .animate-pulse {
        animation: var(--animate-pulse);
    }

    .animate-spin {
        animation: var(--animate-spin);
    }

    .\!cursor-grab {
        cursor: grab !important;
    }

    .\!cursor-grabbing {
        cursor: grabbing !important;
    }

    .cursor-col-resize {
        cursor: col-resize;
    }

    .cursor-default {
        cursor: default;
    }

    .cursor-not-allowed {
        cursor: not-allowed;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .touch-none {
        touch-action: none;
    }

    .resize {
        resize: both;
    }

    .scroll-m-15 {
        scroll-margin: calc(var(--spacing) * 15);
    }

    .scroll-m-20 {
        scroll-margin: calc(var(--spacing) * 20);
    }

    .list-outside {
        list-style-position: outside;
    }

    .list-decimal {
        list-style-type: decimal;
    }

    .list-disc {
        list-style-type: disc;
    }

    .list-none {
        list-style-type: none;
    }

    .grid-flow-row {
        grid-auto-flow: row;
    }

    .auto-rows-fr {
        grid-auto-rows: minmax(0, 1fr);
    }

    .auto-rows-max {
        grid-auto-rows: max-content;
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-col-reverse {
        flex-direction: column-reverse;
    }

    .flex-row {
        flex-direction: row;
    }

    .flex-row-reverse {
        flex-direction: row-reverse;
    }

    .flex-nowrap {
        flex-wrap: nowrap;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .place-content-between {
        place-content: space-between;
    }

    .place-content-center {
        place-content: center;
    }

    .place-items-center {
        place-items: center;
    }

    .content-between {
        align-content: space-between;
    }

    .items-center {
        align-items: center;
    }

    .items-end {
        align-items: flex-end;
    }

    .items-start {
        align-items: flex-start;
    }

    .items-stretch {
        align-items: stretch;
    }

    .justify-around {
        justify-content: space-around;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .justify-end {
        justify-content: flex-end;
    }

    .justify-start {
        justify-content: flex-start;
    }

    .\[gap\:var\(--gap\)\] {
        gap: var(--gap);
    }

    .gap-\(--sidebar-space-x\) {
        gap: var(--sidebar-space-x);
    }

    .gap-0 {
        gap: calc(var(--spacing) * 0);
    }

    .gap-0\.5 {
        gap: calc(var(--spacing) * 0.5);
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-1\.5 {
        gap: calc(var(--spacing) * 1.5);
    }

    .gap-1\.25 {
        gap: calc(var(--spacing) * 1.25);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-2\.5 {
        gap: calc(var(--spacing) * 2.5);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-3\.5 {
        gap: calc(var(--spacing) * 3.5);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .gap-5 {
        gap: calc(var(--spacing) * 5);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    .gap-7 {
        gap: calc(var(--spacing) * 7);
    }

    .gap-7\.5 {
        gap: calc(var(--spacing) * 7.5);
    }

    .gap-8 {
        gap: calc(var(--spacing) * 8);
    }

    .gap-9 {
        gap: calc(var(--spacing) * 9);
    }

    .gap-10 {
        gap: calc(var(--spacing) * 10);
    }

    .gap-\[5px\] {
        gap: 5px;
    }

    .gap-\[10px\] {
        gap: 10px;
    }

    .gap-\[14px\] {
        gap: 14px;
    }

    .gap-px {
        gap: 1px;
    }

    .space-y-0 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-0\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-1 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-1\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-2 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-2\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-3 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-3\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-4 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-6 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-7\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 7.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 7.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .gap-x-4 {
        column-gap: calc(var(--spacing) * 4);
    }

    .gap-x-6 {
        column-gap: calc(var(--spacing) * 6);
    }

    .-space-x-2 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .-space-x-2\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * -2.5) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * -2.5) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-0 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-1 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-2 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-2\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .space-x-4 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .divide-y {
        :where(& > :not(:last-child)) {
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(1px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        }
    }

    .divide-border {
        :where(& > :not(:last-child)) {
            border-color: var(--border);
        }
    }

    .justify-self-end {
        justify-self: flex-end;
    }

    .truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .overflow-auto {
        overflow: auto;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-x-auto {
        overflow-x: auto;
    }

    .overflow-x-hidden {
        overflow-x: hidden;
    }

    .overflow-y-auto {
        overflow-y: auto;
    }

    .rounded {
        border-radius: 0.25rem;
    }

    .rounded-2xl {
        border-radius: var(--radius-2xl);
    }

    .rounded-\[0\.5rem\] {
        border-radius: 0.5rem;
    }

    .rounded-\[2px\] {
        border-radius: 2px;
    }

    .rounded-\[6px\] {
        border-radius: 6px;
    }

    .rounded-\[9px\] {
        border-radius: 9px;
    }

    .rounded-\[60px\] {
        border-radius: 60px;
    }

    .rounded-\[inherit\] {
        border-radius: inherit;
    }

    .rounded-full {
        border-radius: calc(infinity * 1px);
    }

    .rounded-lg {
        border-radius: var(--radius);
    }

    .rounded-md {
        border-radius: calc(var(--radius) - 2px);
    }

    .rounded-none {
        border-radius: 0;
    }

    .rounded-sm {
        border-radius: calc(var(--radius) - 4px);
    }

    .rounded-xl {
        border-radius: calc(var(--radius) + 4px);
    }

    .rounded-s {
        border-start-start-radius: 0.25rem;
        border-end-start-radius: 0.25rem;
    }

    .rounded-e {
        border-start-end-radius: 0.25rem;
        border-end-end-radius: 0.25rem;
    }

    .rounded-t {
        border-top-left-radius: 0.25rem;
        border-top-right-radius: 0.25rem;
    }

    .rounded-t-\[10px\] {
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }

    .rounded-t-lg {
        border-top-left-radius: var(--radius);
        border-top-right-radius: var(--radius);
    }

    .rounded-t-xl {
        border-top-left-radius: calc(var(--radius) + 4px);
        border-top-right-radius: calc(var(--radius) + 4px);
    }

    .rounded-b {
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
    }

    .rounded-b-xl {
        border-bottom-right-radius: calc(var(--radius) + 4px);
        border-bottom-left-radius: calc(var(--radius) + 4px);
    }

    .rounded-br-xl {
        border-bottom-right-radius: calc(var(--radius) + 4px);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-0 {
        border-style: var(--tw-border-style);
        border-width: 0px;
    }

    .border-1 {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }

    .border-\[0\.5px\] {
        border-style: var(--tw-border-style);
        border-width: 0.5px;
    }

    .border-\[1\.5px\] {
        border-style: var(--tw-border-style);
        border-width: 1.5px;
    }

    .border-\[2px\] {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }

    .border-x {
        border-inline-style: var(--tw-border-style);
        border-inline-width: 1px;
    }

    .border-y {
        border-block-style: var(--tw-border-style);
        border-block-width: 1px;
    }

    .border-s {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 1px;
    }

    .border-e {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-r {
        border-right-style: var(--tw-border-style);
        border-right-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-b-2 {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
    }

    .border-l {
        border-left-style: var(--tw-border-style);
        border-left-width: 1px;
    }

    .border-l-2 {
        border-left-style: var(--tw-border-style);
        border-left-width: 2px;
    }

    .border-l-4 {
        border-left-style: var(--tw-border-style);
        border-left-width: 4px;
    }

    .border-dashed {
        --tw-border-style: dashed;
        border-style: dashed;
    }

    .border-none {
        --tw-border-style: none;
        border-style: none;
    }

    .border-\(--color-border\) {
        border-color: var(--color-border);
    }

    .border-\[rgba\(255\,255\,255\,0\.3\)\] {
        border-color: rgba(255, 255, 255, 0.3);
    }

    .border-\[rgba\(255\,255\,255\,0\.30\)\] {
        border-color: rgba(255, 255, 255, 0.3);
    }

    .border-\[var\(--color-destructive-alpha\,var\(--color-red-100\)\)\] {
        border-color: var(--color-destructive-alpha, var(--color-red-100));
    }

    .border-\[var\(--color-destructive-soft\,var\(--color-red-100\)\)\] {
        border-color: var(--color-destructive-soft, var(--color-red-100));
    }

    .border-\[var\(--color-info-alpha\,var\(--color-violet-100\)\)\] {
        border-color: var(--color-info-alpha, var(--color-violet-100));
    }

    .border-\[var\(--color-info-soft\,var\(--color-violet-100\)\)\] {
        border-color: var(--color-info-soft, var(--color-violet-100));
    }

    .border-\[var\(--color-primary-alpha\,var\(--color-blue-100\)\)\] {
        border-color: var(--color-primary-alpha, var(--color-blue-100));
    }

    .border-\[var\(--color-primary-soft\,var\(--color-blue-100\)\)\] {
        border-color: var(--color-primary-soft, var(--color-blue-100));
    }

    .border-\[var\(--color-success-alpha\,var\(--color-green-100\)\)\] {
        border-color: var(--color-success-alpha, var(--color-green-100));
    }

    .border-\[var\(--color-success-alpha\,var\(--color-green-200\)\)\] {
        border-color: var(--color-success-alpha, var(--color-green-200));
    }

    .border-\[var\(--color-success-soft\,var\(--color-green-200\)\)\] {
        border-color: var(--color-success-soft, var(--color-green-200));
    }

    .border-\[var\(--color-warning-alpha\,var\(--color-yellow-100\)\)\] {
        border-color: var(--color-warning-alpha, var(--color-yellow-100));
    }

    .border-\[var\(--color-warning-alpha\,var\(--color-yellow-200\)\)\] {
        border-color: var(--color-warning-alpha, var(--color-yellow-200));
    }

    .border-\[var\(--color-warning-soft\,var\(--color-yellow-200\)\)\] {
        border-color: var(--color-warning-soft, var(--color-yellow-200));
    }

    .border-accent {
        border-color: var(--accent);
    }

    .border-background {
        border-color: var(--background);
    }

    .border-black\/10\! {
        border-color: color-mix(in srgb, #000 10%, transparent) !important;

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab,
                    var(--color-black) 10%,
                    transparent) !important;
        }
    }

    .border-blue-500 {
        border-color: var(--color-blue-500);
    }

    .border-border {
        border-color: var(--border);
    }

    .border-border\/40 {
        border-color: var(--border);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--border) 40%, transparent);
        }
    }

    .border-border\/50 {
        border-color: var(--border);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--border) 50%, transparent);
        }
    }

    .border-border\/60 {
        border-color: var(--border);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--border) 60%, transparent);
        }
    }

    .border-border\/90 {
        border-color: var(--border);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--border) 90%, transparent);
        }
    }

    .border-gray-200 {
        border-color: var(--color-gray-200);
    }

    .border-gray-300 {
        border-color: var(--color-gray-300);
    }

    .border-gray-500 {
        border-color: var(--color-gray-500);
    }

    .border-gray-700 {
        border-color: var(--color-gray-700);
    }

    .border-green-200 {
        border-color: var(--color-green-200);
    }

    .border-green-500 {
        border-color: var(--color-green-500);
    }

    .border-input {
        border-color: var(--input);
    }

    .border-mono\/25 {
        border-color: var(--mono);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--mono) 25%, transparent);
        }
    }

    .border-mono\/30 {
        border-color: var(--mono);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--mono) 30%, transparent);
        }
    }

    .border-primary {
        border-color: var(--primary);
    }

    .border-primary\/10 {
        border-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--primary) 10%, transparent);
        }
    }

    .border-secondary {
        border-color: var(--secondary);
    }

    .border-slate-700\/50 {
        border-color: color-mix(in srgb,
                oklch(37.2% 0.044 257.287) 50%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab,
                    var(--color-slate-700) 50%,
                    transparent);
        }
    }

    .border-transparent {
        border-color: transparent;
    }

    .border-white {
        border-color: var(--color-white);
    }

    .border-white\/10 {
        border-color: color-mix(in srgb, #fff 10%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab,
                    var(--color-white) 10%,
                    transparent);
        }
    }

    .border-zinc-950 {
        border-color: var(--color-zinc-950);
    }

    .border-s-input {
        border-inline-start-color: var(--input);
    }

    .border-e-border {
        border-inline-end-color: var(--border);
    }

    .border-t-border {
        border-top-color: var(--border);
    }

    .border-t-transparent {
        border-top-color: transparent;
    }

    .border-b-border {
        border-bottom-color: var(--border);
    }

    .border-b-input {
        border-bottom-color: var(--input);
    }

    .border-b-primary\/10 {
        border-bottom-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            border-bottom-color: color-mix(in oklab,
                    var(--primary) 10%,
                    transparent);
        }
    }

    .border-b-transparent {
        border-bottom-color: transparent;
    }

    .border-l-transparent {
        border-left-color: transparent;
    }

    .bg-\(--color-bg\) {
        background-color: var(--color-bg);
    }

    .bg-\(--header-bg\) {
        background-color: var(--header-bg);
    }

    .bg-\(--page-bg\) {
        background-color: var(--page-bg);
    }

    .bg-\[\#0B5C22\] {
        background-color: #0b5c22;
    }

    .bg-\[\#72A301\] {
        background-color: #72a301;
    }

    .bg-\[\#00998F\] {
        background-color: #00998f;
    }

    .bg-\[\#4921EA\] {
        background-color: #4921ea;
    }

    .bg-\[\#007421\] {
        background-color: #007421;
    }

    .bg-\[currentColor\] {
        background-color: currentColor;
    }

    .bg-\[var\(--color-destructive-soft\,var\(--color-red-50\)\)\] {
        background-color: var(--color-destructive-soft, var(--color-red-50));
    }

    .bg-\[var\(--color-info\,var\(--color-violet-600\)\)\] {
        background-color: var(--color-info, var(--color-violet-600));
    }

    .bg-\[var\(--color-info-accent\,var\(--color-violet-500\)\)\] {
        background-color: var(--color-info-accent, var(--color-violet-500));
    }

    .bg-\[var\(--color-info-soft\,var\(--color-violet-50\)\)\] {
        background-color: var(--color-info-soft, var(--color-violet-50));
    }

    .bg-\[var\(--color-info-soft\,var\(--color-violet-100\)\)\] {
        background-color: var(--color-info-soft, var(--color-violet-100));
    }

    .bg-\[var\(--color-primary-soft\,var\(--color-blue-50\)\)\] {
        background-color: var(--color-primary-soft, var(--color-blue-50));
    }

    .bg-\[var\(--color-success\,var\(--color-green-500\)\)\] {
        background-color: var(--color-success, var(--color-green-500));
    }

    .bg-\[var\(--color-success-accent\,var\(--color-green-500\)\)\] {
        background-color: var(--color-success-accent, var(--color-green-500));
    }

    .bg-\[var\(--color-success-soft\,var\(--color-green-50\)\)\] {
        background-color: var(--color-success-soft, var(--color-green-50));
    }

    .bg-\[var\(--color-success-soft\,var\(--color-green-100\)\)\] {
        background-color: var(--color-success-soft, var(--color-green-100));
    }

    .bg-\[var\(--color-warning\,var\(--color-yellow-500\)\)\] {
        background-color: var(--color-warning, var(--color-yellow-500));
    }

    .bg-\[var\(--color-warning-accent\,var\(--color-yellow-500\)\)\] {
        background-color: var(--color-warning-accent, var(--color-yellow-500));
    }

    .bg-\[var\(--color-warning-soft\,var\(--color-yellow-50\)\)\] {
        background-color: var(--color-warning-soft, var(--color-yellow-50));
    }

    .bg-\[var\(--color-warning-soft\,var\(--color-yellow-100\)\)\] {
        background-color: var(--color-warning-soft, var(--color-yellow-100));
    }

    .bg-\[var\(--page-bg\)\] {
        background-color: var(--page-bg);
    }

    .bg-accent {
        background-color: var(--accent);
    }

    .bg-accent\/30 {
        background-color: var(--accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--accent) 30%,
                    transparent);
        }
    }

    .bg-accent\/50 {
        background-color: var(--accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--accent) 50%,
                    transparent);
        }
    }

    .bg-accent\/60 {
        background-color: var(--accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--accent) 60%,
                    transparent);
        }
    }

    .bg-accent\/70 {
        background-color: var(--accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--accent) 70%,
                    transparent);
        }
    }

    .bg-background {
        background-color: var(--background);
    }

    .bg-background\! {
        background-color: var(--background) !important;
    }

    .bg-background\/70 {
        background-color: var(--background);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--background) 70%,
                    transparent);
        }
    }

    .bg-background\/80 {
        background-color: var(--background);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--background) 80%,
                    transparent);
        }
    }

    .bg-background\/90 {
        background-color: var(--background);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--background) 90%,
                    transparent);
        }
    }

    .bg-background\/95 {
        background-color: var(--background);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--background) 95%,
                    transparent);
        }
    }

    .bg-black {
        background-color: var(--color-black);
    }

    .bg-black\/25 {
        background-color: color-mix(in srgb, #000 25%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-black) 25%,
                    transparent);
        }
    }

    .bg-black\/30 {
        background-color: color-mix(in srgb, #000 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-black) 30%,
                    transparent);
        }
    }

    .bg-black\/80 {
        background-color: color-mix(in srgb, #000 80%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-black) 80%,
                    transparent);
        }
    }

    .bg-blue-50 {
        background-color: var(--color-blue-50);
    }

    .bg-blue-100 {
        background-color: var(--color-blue-100);
    }

    .bg-blue-400 {
        background-color: var(--color-blue-400);
    }

    .bg-blue-400\/20 {
        background-color: color-mix(in srgb,
                oklch(70.7% 0.165 254.624) 20%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-blue-400) 20%,
                    transparent);
        }
    }

    .bg-blue-500 {
        background-color: var(--color-blue-500);
    }

    .bg-blue-600 {
        background-color: var(--color-blue-600);
    }

    .bg-border {
        background-color: var(--border);
    }

    .bg-card {
        background-color: var(--card);
    }

    .bg-cyan-400 {
        background-color: var(--color-cyan-400);
    }

    .bg-cyan-400\/20 {
        background-color: color-mix(in srgb,
                oklch(78.9% 0.154 211.53) 20%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-cyan-400) 20%,
                    transparent);
        }
    }

    .bg-destructive {
        background-color: var(--destructive);
    }

    .bg-destructive\/10 {
        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--destructive) 10%,
                    transparent);
        }
    }

    .bg-emerald-500 {
        background-color: var(--color-emerald-500);
    }

    .bg-foreground {
        background-color: var(--foreground);
    }

    .bg-fuchsia-400 {
        background-color: var(--color-fuchsia-400);
    }

    .bg-fuchsia-400\/20 {
        background-color: color-mix(in srgb,
                oklch(74% 0.238 322.16) 20%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-fuchsia-400) 20%,
                    transparent);
        }
    }

    .bg-fuchsia-600 {
        background-color: var(--color-fuchsia-600);
    }

    .bg-gray-50 {
        background-color: var(--color-gray-50);
    }

    .bg-gray-100 {
        background-color: var(--color-gray-100);
    }

    .bg-green-50 {
        background-color: var(--color-green-50);
    }

    .bg-green-400 {
        background-color: var(--color-green-400);
    }

    .bg-green-500 {
        background-color: var(--color-green-500);
    }

    .bg-green-600 {
        background-color: var(--color-green-600);
    }

    .bg-indigo-400 {
        background-color: var(--color-indigo-400);
    }

    .bg-indigo-400\/20 {
        background-color: color-mix(in srgb,
                oklch(67.3% 0.182 276.935) 20%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-indigo-400) 20%,
                    transparent);
        }
    }

    .bg-indigo-500 {
        background-color: var(--color-indigo-500);
    }

    .bg-input {
        background-color: var(--input);
    }

    .bg-mono {
        background-color: var(--mono);
    }

    .bg-mono\/30 {
        background-color: var(--mono);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--mono) 30%, transparent);
        }
    }

    .bg-muted {
        background-color: var(--muted);
    }

    .bg-muted\! {
        background-color: var(--muted) !important;
    }

    .bg-muted\/25 {
        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--muted) 25%,
                    transparent);
        }
    }

    .bg-muted\/40 {
        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--muted) 40%,
                    transparent);
        }
    }

    .bg-muted\/50 {
        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--muted) 50%,
                    transparent);
        }
    }

    .bg-muted\/60 {
        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--muted) 60%,
                    transparent);
        }
    }

    .bg-muted\/70 {
        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--muted) 70%,
                    transparent);
        }
    }

    .bg-muted\/80 {
        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--muted) 80%,
                    transparent);
        }
    }

    .bg-neutral-950 {
        background-color: var(--color-neutral-950);
    }

    .bg-neutral-950\! {
        background-color: var(--color-neutral-950) !important;
    }

    .bg-orange-400 {
        background-color: var(--color-orange-400);
    }

    .bg-pink-400 {
        background-color: var(--color-pink-400);
    }

    .bg-pink-500 {
        background-color: var(--color-pink-500);
    }

    .bg-popover {
        background-color: var(--popover);
    }

    .bg-primary {
        background-color: var(--primary);
    }

    .bg-primary-foreground {
        background-color: var(--primary-foreground);
    }

    .bg-primary\/10 {
        background-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--primary) 10%,
                    transparent);
        }
    }

    .bg-purple-400 {
        background-color: var(--color-purple-400);
    }

    .bg-purple-400\/20 {
        background-color: color-mix(in srgb,
                oklch(71.4% 0.203 305.504) 20%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-purple-400) 20%,
                    transparent);
        }
    }

    .bg-red-400 {
        background-color: var(--color-red-400);
    }

    .bg-rose-400 {
        background-color: var(--color-rose-400);
    }

    .bg-secondary {
        background-color: var(--secondary);
    }

    .bg-slate-900 {
        background-color: var(--color-slate-900);
    }

    .bg-teal-600 {
        background-color: var(--color-teal-600);
    }

    .bg-transparent {
        background-color: transparent;
    }

    .bg-transparent\! {
        background-color: transparent !important;
    }

    .bg-violet-400 {
        background-color: var(--color-violet-400);
    }

    .bg-violet-400\/20 {
        background-color: color-mix(in srgb,
                oklch(70.2% 0.183 293.541) 20%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-violet-400) 20%,
                    transparent);
        }
    }

    .bg-violet-500 {
        background-color: var(--color-violet-500);
    }

    .bg-white {
        background-color: var(--color-white);
    }

    .bg-white\/60 {
        background-color: color-mix(in srgb, #fff 60%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-white) 60%,
                    transparent);
        }
    }

    .bg-white\/70 {
        background-color: color-mix(in srgb, #fff 70%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-white) 70%,
                    transparent);
        }
    }

    .bg-yellow-400 {
        background-color: var(--color-yellow-400);
    }

    .bg-yellow-400\/10 {
        background-color: color-mix(in srgb,
                oklch(85.2% 0.199 91.936) 10%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-yellow-400) 10%,
                    transparent);
        }
    }

    .bg-yellow-600 {
        background-color: var(--color-yellow-600);
    }

    .bg-zinc-600 {
        background-color: var(--color-zinc-600);
    }

    .bg-zinc-950 {
        background-color: var(--color-zinc-950);
    }

    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-\[radial-gradient\(97\.49\%_97\.49\%_at_50\%_2\.51\%\,rgba\(255\,255\,255\,0\.5\)_0\%\,rgba\(255\,255\,255\,0\)_100\%\)\] {
        background-image: radial-gradient(97.49% 97.49% at 50% 2.51%,
                rgba(255, 255, 255, 0.5) 0%,
                rgba(255, 255, 255, 0) 100%);
    }

    .from-blue-800 {
        --tw-gradient-from: var(--color-blue-800);
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-fuchsia-400 {
        --tw-gradient-from: var(--color-fuchsia-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-slate-900 {
        --tw-gradient-from: var(--color-slate-900);
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-transparent {
        --tw-gradient-from: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-white\/5 {
        --tw-gradient-from: color-mix(in srgb, #fff 5%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab,
                    var(--color-white) 5%,
                    transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-0\% {
        --tw-gradient-from-position: 0%;
    }

    .via-emerald-500 {
        --tw-gradient-via: var(--color-emerald-500);
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .via-purple-900 {
        --tw-gradient-via: var(--color-purple-900);
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .via-sky-500 {
        --tw-gradient-via: var(--color-sky-500);
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .via-transparent {
        --tw-gradient-via: transparent;
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .via-violet-500 {
        --tw-gradient-via: var(--color-violet-500);
        --tw-gradient-via-stops:
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .via-50\% {
        --tw-gradient-via-position: 50%;
    }

    .to-blue-600 {
        --tw-gradient-to: var(--color-blue-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-fuchsia-600 {
        --tw-gradient-to: var(--color-fuchsia-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-slate-900 {
        --tw-gradient-to: var(--color-slate-900);
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-100\% {
        --tw-gradient-to-position: 100%;
    }

    .bg-\[length\:250\%_100\%\,auto\] {
        background-size:
            250% 100%,
            auto;
    }

    .bg-\[length\:300\%_300\%\] {
        background-size: 300% 300%;
    }

    .bg-\[length\:600px\] {
        background-size: 600px;
    }

    .bg-cover {
        background-size: cover;
    }

    .bg-clip-text {
        background-clip: text;
    }

    .bg-center {
        background-position: center;
    }

    .\[background-repeat\:no-repeat\,padding-box\] {
        background-repeat: no-repeat, padding-box;
    }

    .bg-no-repeat {
        background-repeat: no-repeat;
    }

    .fill-border {
        fill: var(--border);
    }

    .fill-current {
        fill: currentcolor;
    }

    .fill-muted-foreground {
        fill: var(--muted-foreground);
    }

    .fill-muted\/30 {
        fill: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {
            fill: color-mix(in oklab, var(--muted) 30%, transparent);
        }
    }

    .fill-primary {
        fill: var(--primary);
    }

    .fill-primary\/5 {
        fill: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            fill: color-mix(in oklab, var(--primary) 5%, transparent);
        }
    }

    .fill-yellow-400 {
        fill: var(--color-yellow-400);
    }

    .stroke-border {
        stroke: var(--border);
    }

    .stroke-primary {
        stroke: var(--primary);
    }

    .stroke-primary\/10 {
        stroke: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            stroke: color-mix(in oklab, var(--primary) 10%, transparent);
        }
    }

    .p-0 {
        padding: calc(var(--spacing) * 0);
    }

    .p-0\.5 {
        padding: calc(var(--spacing) * 0.5);
    }

    .p-1 {
        padding: calc(var(--spacing) * 1);
    }

    .p-1\.5 {
        padding: calc(var(--spacing) * 1.5);
    }

    .p-2 {
        padding: calc(var(--spacing) * 2);
    }

    .p-2\.5 {
        padding: calc(var(--spacing) * 2.5);
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-3\.5 {
        padding: calc(var(--spacing) * 3.5);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-5 {
        padding: calc(var(--spacing) * 5);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .p-7 {
        padding: calc(var(--spacing) * 7);
    }

    .p-7\.5 {
        padding: calc(var(--spacing) * 7.5);
    }

    .p-8 {
        padding: calc(var(--spacing) * 8);
    }

    .p-10 {
        padding: calc(var(--spacing) * 10);
    }

    .p-\[1px\] {
        padding: 1px;
    }

    .p-\[5px\] {
        padding: 5px;
    }

    .p-\[6px\] {
        padding: 6px;
    }

    .px-\(--sidebar-space-x\) {
        padding-inline: var(--sidebar-space-x);
    }

    .px-0 {
        padding-inline: calc(var(--spacing) * 0);
    }

    .px-0\.5 {
        padding-inline: calc(var(--spacing) * 0.5);
    }

    .px-1 {
        padding-inline: calc(var(--spacing) * 1);
    }

    .px-1\.5 {
        padding-inline: calc(var(--spacing) * 1.5);
    }

    .px-1\.25 {
        padding-inline: calc(var(--spacing) * 1.25);
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-2\.5 {
        padding-inline: calc(var(--spacing) * 2.5);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-3\.5 {
        padding-inline: calc(var(--spacing) * 3.5);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-5 {
        padding-inline: calc(var(--spacing) * 5);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .px-6\.5 {
        padding-inline: calc(var(--spacing) * 6.5);
    }

    .px-7 {
        padding-inline: calc(var(--spacing) * 7);
    }

    .px-8 {
        padding-inline: calc(var(--spacing) * 8);
    }

    .px-9 {
        padding-inline: calc(var(--spacing) * 9);
    }

    .px-10 {
        padding-inline: calc(var(--spacing) * 10);
    }

    .px-\[0\.3rem\] {
        padding-inline: 0.3rem;
    }

    .px-\[0\.5rem\] {
        padding-inline: 0.5rem;
    }

    .px-\[0\.25rem\] {
        padding-inline: 0.25rem;
    }

    .px-\[0\.45rem\] {
        padding-inline: 0.45rem;
    }

    .px-\[0\.325rem\] {
        padding-inline: 0.325rem;
    }

    .py-0 {
        padding-block: calc(var(--spacing) * 0);
    }

    .py-0\.5 {
        padding-block: calc(var(--spacing) * 0.5);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-2\.5 {
        padding-block: calc(var(--spacing) * 2.5);
    }

    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }

    .py-3\.5 {
        padding-block: calc(var(--spacing) * 3.5);
    }

    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }

    .py-4\.5 {
        padding-block: calc(var(--spacing) * 4.5);
    }

    .py-5 {
        padding-block: calc(var(--spacing) * 5);
    }

    .py-6 {
        padding-block: calc(var(--spacing) * 6);
    }

    .py-7 {
        padding-block: calc(var(--spacing) * 7);
    }

    .py-7\.5 {
        padding-block: calc(var(--spacing) * 7.5);
    }

    .py-8 {
        padding-block: calc(var(--spacing) * 8);
    }

    .py-9 {
        padding-block: calc(var(--spacing) * 9);
    }

    .py-10 {
        padding-block: calc(var(--spacing) * 10);
    }

    .py-12 {
        padding-block: calc(var(--spacing) * 12);
    }

    .py-\[0\.2rem\] {
        padding-block: 0.2rem;
    }

    .py-\[6px\] {
        padding-block: 6px;
    }

    .py-\[8px\] {
        padding-block: 8px;
    }

    .py-px {
        padding-block: 1px;
    }

    .ps-\(--tree-padding\) {
        padding-inline-start: var(--tree-padding);
    }

    .ps-0 {
        padding-inline-start: calc(var(--spacing) * 0);
    }

    .ps-1\.5 {
        padding-inline-start: calc(var(--spacing) * 1.5);
    }

    .ps-2 {
        padding-inline-start: calc(var(--spacing) * 2);
    }

    .ps-2\.5 {
        padding-inline-start: calc(var(--spacing) * 2.5);
    }

    .ps-3 {
        padding-inline-start: calc(var(--spacing) * 3);
    }

    .ps-3\.5 {
        padding-inline-start: calc(var(--spacing) * 3.5);
    }

    .ps-4 {
        padding-inline-start: calc(var(--spacing) * 4);
    }

    .ps-5 {
        padding-inline-start: calc(var(--spacing) * 5);
    }

    .ps-6 {
        padding-inline-start: calc(var(--spacing) * 6);
    }

    .ps-7 {
        padding-inline-start: calc(var(--spacing) * 7);
    }

    .ps-8 {
        padding-inline-start: calc(var(--spacing) * 8);
    }

    .ps-12 {
        padding-inline-start: calc(var(--spacing) * 12);
    }

    .ps-\[10px\] {
        padding-inline-start: 10px;
    }

    .ps-\[14\.5px\] {
        padding-inline-start: 14.5px;
    }

    .ps-\[22px\] {
        padding-inline-start: 22px;
    }

    .ps-px {
        padding-inline-start: 1px;
    }

    .pe-1 {
        padding-inline-end: calc(var(--spacing) * 1);
    }

    .pe-2 {
        padding-inline-end: calc(var(--spacing) * 2);
    }

    .pe-2\.5 {
        padding-inline-end: calc(var(--spacing) * 2.5);
    }

    .pe-3 {
        padding-inline-end: calc(var(--spacing) * 3);
    }

    .pe-3\.5 {
        padding-inline-end: calc(var(--spacing) * 3.5);
    }

    .pe-5 {
        padding-inline-end: calc(var(--spacing) * 5);
    }

    .pe-6 {
        padding-inline-end: calc(var(--spacing) * 6);
    }

    .pe-8 {
        padding-inline-end: calc(var(--spacing) * 8);
    }

    .pe-10 {
        padding-inline-end: calc(var(--spacing) * 10);
    }

    .pe-24 {
        padding-inline-end: calc(var(--spacing) * 24);
    }

    .pe-\[10px\] {
        padding-inline-end: 10px;
    }

    .pe-\[var\(--removed-body-scroll-bar-size\,0px\)\] {
        padding-inline-end: var(--removed-body-scroll-bar-size, 0px);
    }

    .pt-\(--header-height\) {
        padding-top: var(--header-height);
    }

    .pt-\(--header-height-mobile\) {
        padding-top: var(--header-height-mobile);
    }

    .pt-0 {
        padding-top: calc(var(--spacing) * 0);
    }

    .pt-0\.5 {
        padding-top: calc(var(--spacing) * 0.5);
    }

    .pt-1 {
        padding-top: calc(var(--spacing) * 1);
    }

    .pt-1\.5 {
        padding-top: calc(var(--spacing) * 1.5);
    }

    .pt-2 {
        padding-top: calc(var(--spacing) * 2);
    }

    .pt-2\.5 {
        padding-top: calc(var(--spacing) * 2.5);
    }

    .pt-2\.25 {
        padding-top: calc(var(--spacing) * 2.25);
    }

    .pt-3 {
        padding-top: calc(var(--spacing) * 3);
    }

    .pt-3\.5 {
        padding-top: calc(var(--spacing) * 3.5);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pt-5 {
        padding-top: calc(var(--spacing) * 5);
    }

    .pt-6 {
        padding-top: calc(var(--spacing) * 6);
    }

    .pt-7 {
        padding-top: calc(var(--spacing) * 7);
    }

    .pt-8 {
        padding-top: calc(var(--spacing) * 8);
    }

    .pt-10 {
        padding-top: calc(var(--spacing) * 10);
    }

    .pt-16 {
        padding-top: calc(var(--spacing) * 16);
    }

    .pr-2 {
        padding-right: calc(var(--spacing) * 2);
    }

    .pr-2\.5 {
        padding-right: calc(var(--spacing) * 2.5);
    }

    .pr-6 {
        padding-right: calc(var(--spacing) * 6);
    }

    .pb-0 {
        padding-bottom: calc(var(--spacing) * 0);
    }

    .pb-1\.5 {
        padding-bottom: calc(var(--spacing) * 1.5);
    }

    .pb-2 {
        padding-bottom: calc(var(--spacing) * 2);
    }

    .pb-2\.5 {
        padding-bottom: calc(var(--spacing) * 2.5);
    }

    .pb-3 {
        padding-bottom: calc(var(--spacing) * 3);
    }

    .pb-3\.5 {
        padding-bottom: calc(var(--spacing) * 3.5);
    }

    .pb-4 {
        padding-bottom: calc(var(--spacing) * 4);
    }

    .pb-5 {
        padding-bottom: calc(var(--spacing) * 5);
    }

    .pb-6 {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .pb-7 {
        padding-bottom: calc(var(--spacing) * 7);
    }

    .pb-7\.5 {
        padding-bottom: calc(var(--spacing) * 7.5);
    }

    .pb-10 {
        padding-bottom: calc(var(--spacing) * 10);
    }

    .pb-12 {
        padding-bottom: calc(var(--spacing) * 12);
    }

    .pb-20 {
        padding-bottom: calc(var(--spacing) * 20);
    }

    .pb-px {
        padding-bottom: 1px;
    }

    .pl-2 {
        padding-left: calc(var(--spacing) * 2);
    }

    .pl-2\.5 {
        padding-left: calc(var(--spacing) * 2.5);
    }

    .pl-4 {
        padding-left: calc(var(--spacing) * 4);
    }

    .pl-6 {
        padding-left: calc(var(--spacing) * 6);
    }

    .pl-8 {
        padding-left: calc(var(--spacing) * 8);
    }

    .pl-10 {
        padding-left: calc(var(--spacing) * 10);
    }

    .text-center {
        text-align: center;
    }

    .text-end {
        text-align: end;
    }

    .text-left {
        text-align: left;
    }

    .text-right {
        text-align: right;
    }

    .text-start {
        text-align: start;
    }

    .align-\[inherit\] {
        vertical-align: inherit;
    }

    .align-middle {
        vertical-align: middle;
    }

    .font-mono {
        font-family: var(--font-mono);
    }

    .text-2sm {
        font-size: var(--text-2sm);
        line-height: var(--tw-leading, var(--text-2sm--line-height));
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-2xs {
        font-size: var(--text-2xs);
        line-height: var(--tw-leading, var(--text-2xs--line-height));
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-base\! {
        font-size: var(--text-base) !important;
        line-height: var(--tw-leading,
                var(--text-base--line-height)) !important;
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .text-xs\! {
        font-size: var(--text-xs) !important;
        line-height: var(--tw-leading, var(--text-xs--line-height)) !important;
    }

    .text-\[0\.65rem\] {
        font-size: 0.65rem;
    }

    .text-\[0\.75rem\] {
        font-size: 0.75rem;
    }

    .text-\[0\.625rem\] {
        font-size: 0.625rem;
    }

    .text-\[0\.6875rem\] {
        font-size: 0.6875rem;
    }

    .text-\[0\.8125rem\] {
        font-size: 0.8125rem;
    }

    .text-\[10px\] {
        font-size: 10px;
    }

    .text-\[11px\] {
        font-size: 11px;
    }

    .text-\[12px\] {
        font-size: 12px;
    }

    .text-\[13px\] {
        font-size: 13px;
    }

    .leading-\(--text-sm--line-height\) {
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);
    }

    .leading-4 {
        --tw-leading: calc(var(--spacing) * 4);
        line-height: calc(var(--spacing) * 4);
    }

    .leading-5 {
        --tw-leading: calc(var(--spacing) * 5);
        line-height: calc(var(--spacing) * 5);
    }

    .leading-5\.5 {
        --tw-leading: calc(var(--spacing) * 5.5);
        line-height: calc(var(--spacing) * 5.5);
    }

    .leading-6 {
        --tw-leading: calc(var(--spacing) * 6);
        line-height: calc(var(--spacing) * 6);
    }

    .leading-7 {
        --tw-leading: calc(var(--spacing) * 7);
        line-height: calc(var(--spacing) * 7);
    }

    .leading-\[0\.5rem\] {
        --tw-leading: 0.5rem;
        line-height: 0.5rem;
    }

    .leading-\[0\.75rem\] {
        --tw-leading: 0.75rem;
        line-height: 0.75rem;
    }

    .leading-\[12px\] {
        --tw-leading: 12px;
        line-height: 12px;
    }

    .leading-\[14px\] {
        --tw-leading: 14px;
        line-height: 14px;
    }

    .leading-\[22px\] {
        --tw-leading: 22px;
        line-height: 22px;
    }

    .leading-\[calc\(1\.125\/0\.8125\)\] {
        --tw-leading: calc(1.125 / 0.8125);
        line-height: calc(1.125 / 0.8125);
    }

    .leading-loose {
        --tw-leading: var(--leading-loose);
        line-height: var(--leading-loose);
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }

    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight);
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-light {
        --tw-font-weight: var(--font-weight-light);
        font-weight: var(--font-weight-light);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-normal {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }

    .tracking-tighter {
        --tw-tracking: var(--tracking-tighter);
        letter-spacing: var(--tracking-tighter);
    }

    .tracking-widest {
        --tw-tracking: var(--tracking-widest);
        letter-spacing: var(--tracking-widest);
    }

    .text-balance {
        text-wrap: balance;
    }

    .text-nowrap {
        text-wrap: nowrap;
    }

    .break-words {
        overflow-wrap: break-word;
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .whitespace-pre {
        white-space: pre;
    }

    .whitespace-pre-wrap {
        white-space: pre-wrap;
    }

    .text-\[\#676A72\] {
        color: #676a72;
    }

    .text-\[var\(--color-destructive-accent\,var\(--color-red-700\)\)\] {
        color: var(--color-destructive-accent, var(--color-red-700));
    }

    .text-\[var\(--color-info\,var\(--color-violet-600\)\)\] {
        color: var(--color-info, var(--color-violet-600));
    }

    .text-\[var\(--color-info-accent\,var\(--color-violet-500\)\)\] {
        color: var(--color-info-accent, var(--color-violet-500));
    }

    .text-\[var\(--color-info-accent\,var\(--color-violet-700\)\)\] {
        color: var(--color-info-accent, var(--color-violet-700));
    }

    .text-\[var\(--color-info-foreground\,var\(--color-white\)\)\] {
        color: var(--color-info-foreground, var(--color-white));
    }

    .text-\[var\(--color-primary-accent\,var\(--color-blue-700\)\)\] {
        color: var(--color-primary-accent, var(--color-blue-700));
    }

    .text-\[var\(--color-success\,var\(--color-green-500\)\)\] {
        color: var(--color-success, var(--color-green-500));
    }

    .text-\[var\(--color-success-accent\,var\(--color-green-500\)\)\] {
        color: var(--color-success-accent, var(--color-green-500));
    }

    .text-\[var\(--color-success-accent\,var\(--color-green-700\)\)\] {
        color: var(--color-success-accent, var(--color-green-700));
    }

    .text-\[var\(--color-success-accent\,var\(--color-green-800\)\)\] {
        color: var(--color-success-accent, var(--color-green-800));
    }

    .text-\[var\(--color-success-foreground\,var\(--color-white\)\)\] {
        color: var(--color-success-foreground, var(--color-white));
    }

    .text-\[var\(--color-warning\,var\(--color-yellow-500\)\)\] {
        color: var(--color-warning, var(--color-yellow-500));
    }

    .text-\[var\(--color-warning-accent\,var\(--color-yellow-500\)\)\] {
        color: var(--color-warning-accent, var(--color-yellow-500));
    }

    .text-\[var\(--color-warning-accent\,var\(--color-yellow-700\)\)\] {
        color: var(--color-warning-accent, var(--color-yellow-700));
    }

    .text-\[var\(--color-warning-foreground\,var\(--color-white\)\)\] {
        color: var(--color-warning-foreground, var(--color-white));
    }

    .text-accent-foreground {
        color: var(--accent-foreground);
    }

    .text-accent-foreground\/60 {
        color: var(--accent-foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab,
                    var(--accent-foreground) 60%,
                    transparent);
        }
    }

    .text-amber-500 {
        color: var(--color-amber-500);
    }

    .text-black {
        color: var(--color-black);
    }

    .text-blue-300 {
        color: var(--color-blue-300);
    }

    .text-blue-500 {
        color: var(--color-blue-500);
    }

    .text-blue-600 {
        color: var(--color-blue-600);
    }

    .text-blue-700 {
        color: var(--color-blue-700);
    }

    .text-blue-800 {
        color: var(--color-blue-800);
    }

    .text-card-foreground {
        color: var(--card-foreground);
    }

    .text-current {
        color: currentcolor;
    }

    .text-destructive {
        color: var(--destructive);
    }

    .text-destructive-foreground {
        color: var(--destructive-foreground);
    }

    .text-destructive\/90 {
        color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
    }

    .text-emerald-500 {
        color: var(--color-emerald-500);
    }

    .text-foreground {
        color: var(--foreground);
    }

    .text-foreground\/60 {
        color: var(--foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--foreground) 60%, transparent);
        }
    }

    .text-gray-300 {
        color: var(--color-gray-300);
    }

    .text-gray-400 {
        color: var(--color-gray-400);
    }

    .text-gray-500 {
        color: var(--color-gray-500);
    }

    .text-gray-600 {
        color: var(--color-gray-600);
    }

    .text-gray-700 {
        color: var(--color-gray-700);
    }

    .text-gray-800 {
        color: var(--color-gray-800);
    }

    .text-gray-900 {
        color: var(--color-gray-900);
    }

    .text-green-500 {
        color: var(--color-green-500);
    }

    .text-inherit {
        color: inherit;
    }

    .text-mono {
        color: var(--mono);
    }

    .text-muted-foreground {
        color: var(--muted-foreground);
    }

    .text-muted-foreground\/70 {
        color: var(--muted-foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab,
                    var(--muted-foreground) 70%,
                    transparent);
        }
    }

    .text-muted-foreground\/80 {
        color: var(--muted-foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab,
                    var(--muted-foreground) 80%,
                    transparent);
        }
    }

    .text-muted-foreground\/90 {
        color: var(--muted-foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab,
                    var(--muted-foreground) 90%,
                    transparent);
        }
    }

    .text-popover-foreground {
        color: var(--popover-foreground);
    }

    .text-primary {
        color: var(--primary);
    }

    .text-primary-foreground {
        color: var(--primary-foreground);
    }

    .text-primary\/90 {
        color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
    }

    .text-red-500 {
        color: var(--color-red-500);
    }

    .text-red-600 {
        color: var(--color-red-600);
    }

    .text-secondary {
        color: var(--secondary);
    }

    .text-secondary-foreground {
        color: var(--secondary-foreground);
    }

    .text-secondary-foreground\/60 {
        color: var(--secondary-foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab,
                    var(--secondary-foreground) 60%,
                    transparent);
        }
    }

    .text-secondary-foreground\/80 {
        color: var(--secondary-foreground);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab,
                    var(--secondary-foreground) 80%,
                    transparent);
        }
    }

    .text-slate-600 {
        color: var(--color-slate-600);
    }

    .text-slate-900 {
        color: var(--color-slate-900);
    }

    .text-transparent {
        color: transparent;
    }

    .text-violet-500 {
        color: var(--color-violet-500);
    }

    .text-white {
        color: var(--color-white);
    }

    .text-white\/70 {
        color: color-mix(in srgb, #fff 70%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
    }

    .text-yellow-400 {
        color: var(--color-yellow-400);
    }

    .text-yellow-500 {
        color: var(--color-yellow-500);
    }

    .text-zinc-50 {
        color: var(--color-zinc-50);
    }

    .capitalize {
        text-transform: capitalize;
    }

    .lowercase {
        text-transform: lowercase;
    }

    .uppercase {
        text-transform: uppercase;
    }

    .italic {
        font-style: italic;
    }

    .tabular-nums {
        --tw-numeric-spacing: tabular-nums;
        font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
    }

    .no-underline {
        text-decoration-line: none;
    }

    .underline {
        text-decoration-line: underline;
    }

    .decoration-dashed {
        text-decoration-style: dashed;
    }

    .decoration-solid {
        text-decoration-style: solid;
    }

    .decoration-1 {
        text-decoration-thickness: 1px;
    }

    .underline-offset-4 {
        text-underline-offset: 4px;
    }

    .antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .caret-transparent {
        caret-color: transparent;
    }

    .opacity-0 {
        opacity: 0%;
    }

    .opacity-25 {
        opacity: 25%;
    }

    .opacity-50 {
        opacity: 50%;
    }

    .opacity-50\! {
        opacity: 50% !important;
    }

    .opacity-60 {
        opacity: 60%;
    }

    .opacity-75 {
        opacity: 75%;
    }

    .opacity-80 {
        opacity: 80%;
    }

    .opacity-100 {
        opacity: 100%;
    }

    .opacity-100\! {
        opacity: 100% !important;
    }

    .shadow {
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-\[0_0_0_1px_\#4921EA\] {
        --tw-shadow: 0 0 0 1px var(--tw-shadow-color, #4921ea);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-\[0_0_0_1px_\#009229\] {
        --tw-shadow: 0 0 0 1px var(--tw-shadow-color, #009229);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-lg {
        --tw-shadow:
            0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-md {
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-none {
        --tw-shadow: 0 0 #0000;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-none\! {
        --tw-shadow: 0 0 #0000 !important;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow) !important;
    }

    .shadow-sm {
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-xl {
        --tw-shadow:
            0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .ring {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .ring-0 {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .ring-0\! {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor) !important;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow) !important;
    }

    .ring-1 {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .ring-2 {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .shadow-\[rgba\(0\,0\,0\,0\.05\)\] {
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }
    }

    .shadow-black\/5 {
        --tw-shadow-color: color-mix(in srgb, #000 5%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    color-mix(in oklab, var(--color-black) 5%, transparent) var(--tw-shadow-alpha),
                    transparent);
        }
    }

    .shadow-cyan-400\/50 {
        --tw-shadow-color: color-mix(in srgb,
                oklch(78.9% 0.154 211.53) 50%,
                transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    color-mix(in oklab, var(--color-cyan-400) 50%, transparent) var(--tw-shadow-alpha),
                    transparent);
        }
    }

    .ring-background {
        --tw-ring-color: var(--background);
    }

    .ring-blue-300 {
        --tw-ring-color: var(--color-blue-300);
    }

    .ring-input {
        --tw-ring-color: var(--input);
    }

    .ring-primary\/10 {
        --tw-ring-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab,
                    var(--primary) 10%,
                    transparent);
        }
    }

    .ring-ring {
        --tw-ring-color: var(--ring);
    }

    .ring-ring\/10 {
        --tw-ring-color: var(--ring);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--ring) 10%, transparent);
        }
    }

    .ring-offset-background {
        --tw-ring-offset-color: var(--background);
    }

    .outline-hidden {
        --tw-outline-style: none;
        outline-style: none;

        @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
        }
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .outline-0 {
        outline-style: var(--tw-outline-style);
        outline-width: 0px;
    }

    .outline-ring\/50 {
        outline-color: var(--ring);

        @supports (color: color-mix(in lab, red, red)) {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    .blur {
        --tw-blur: blur(8px);
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .filter {
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .backdrop-blur-md {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .backdrop-blur-xs {
        --tw-backdrop-blur: blur(var(--blur-xs));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .\[backdrop-filter\:blur\(4px\)\] {
        backdrop-filter: blur(4px);
    }

    .transition {
        transition-property:
            color,
            background-color,
            border-color,
            outline-color,
            text-decoration-color,
            fill,
            stroke,
            --tw-gradient-from,
            --tw-gradient-via,
            --tw-gradient-to,
            opacity,
            box-shadow,
            transform,
            translate,
            scale,
            rotate,
            filter,
            -webkit-backdrop-filter,
            backdrop-filter,
            display,
            visibility,
            content-visibility,
            overlay,
            pointer-events;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-\[height\] {
        transition-property: height;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-\[left\,right\] {
        transition-property: left, right;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-\[margin\] {
        transition-property: margin;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-\[start\] {
        transition-property: start;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-\[width\] {
        transition-property: width;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-colors {
        transition-property:
            color, background-color, border-color, outline-color,
            text-decoration-color, fill, stroke, --tw-gradient-from,
            --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-shadow {
        transition-property: box-shadow;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .transition-none {
        transition-property: none;
    }

    .duration-200 {
        --tw-duration: 200ms;
        transition-duration: 200ms;
    }

    .duration-300 {
        --tw-duration: 300ms;
        transition-duration: 300ms;
    }

    .duration-700 {
        --tw-duration: 700ms;
        transition-duration: 700ms;
    }

    .duration-1000 {
        --tw-duration: 1000ms;
        transition-duration: 1000ms;
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
    }

    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out);
    }

    .\[transition-timing-function\:cubic-bezier\(0\.16\,1\,0\.3\,1\)\] {
        transition-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
    }

    .will-change-transform {
        will-change: transform;
    }

    .outline-none {
        --tw-outline-style: none;
        outline-style: none;
    }

    .outline-none\! {
        --tw-outline-style: none !important;
        outline-style: none !important;
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }

    .\[--base-color\:var\(--color-zinc-400\)\] {
        --base-color: var(--color-zinc-400);
    }

    .\[--content-header-height\:54px\] {
        --content-header-height: 54px;
    }

    .\[--duration\:40s\] {
        --duration: 40s;
    }

    .\[--gap\:1rem\] {
        --gap: 1rem;
    }

    .\[--header-height-default\:70px\] {
        --header-height-default: 70px;
    }

    .\[--header-height-default\:95px\] {
        --header-height-default: 95px;
    }

    .\[--header-height-mobile\:54px\] {
        --header-height-mobile: 54px;
    }

    .\[--header-height-mobile\:70px\] {
        --header-height-mobile: 70px;
    }

    .\[--header-height-sticky\:70px\] {
        --header-height-sticky: 70px;
    }

    .\[--header-height\:40px\] {
        --header-height: 40px;
    }

    .\[--header-height\:54px\] {
        --header-height: 54px;
    }

    .\[--header-height\:58px\] {
        --header-height: 58px;
    }

    .\[--header-height\:60px\] {
        --header-height: 60px;
    }

    .\[--header-height\:70px\] {
        --header-height: 70px;
    }

    .\[--header-height\:78px\] {
        --header-height: 78px;
    }

    .\[--header-height\:100px\] {
        --header-height: 100px;
    }

    .\[--header-height\:var\(--header-height-default\)\] {
        --header-height: var(--header-height-default);
    }

    .\[--kt-drawer-enable\:true\] {
        --kt-drawer-enable: true;
    }

    .\[--kt-reparent-mode\:prepend\] {
        --kt-reparent-mode: prepend;
    }

    .\[--kt-reparent-target\:\#contentContainer\] {
        --kt-reparent-target: #contentContainer;
    }

    .\[--kt-reparent-target\:\#mainContentWrapper\] {
        --kt-reparent-target: #mainContentWrapper;
    }

    .\[--kt-reparent-target\:body\] {
        --kt-reparent-target: body;
    }

    .\[--kt-scrollbar-width\:auto\] {
        --kt-scrollbar-width: auto;
    }

    .\[--navbar-height\:56px\] {
        --navbar-height: 56px;
    }

    .\[--scrollbar-thumb-color\:var\(--input\)\] {
        --scrollbar-thumb-color: var(--input);
    }

    .\[--shimmer-bg\:linear-gradient\(90deg\,transparent_calc\(50\%-var\(--spread\)\)\,var\(--shimmer-color\)\,transparent_calc\(50\%\+var\(--spread\)\)\)\] {
        --shimmer-bg: linear-gradient(90deg,
                transparent calc(50% - var(--spread)),
                var(--shimmer-color),
                transparent calc(50% + var(--spread)));
    }

    .\[--shimmer-color\:var\(--color-zinc-950\)\] {
        --shimmer-color: var(--color-zinc-950);
    }

    .\[--sidebar-footer-collapsed-height\:90px\] {
        --sidebar-footer-collapsed-height: 90px;
    }

    .\[--sidebar-footer-height\:45px\] {
        --sidebar-footer-height: 45px;
    }

    .\[--sidebar-header-height\:54px\] {
        --sidebar-header-height: 54px;
    }

    .\[--sidebar-space-x\:calc\(var\(--spacing\)\*2\.5\)\] {
        --sidebar-space-x: calc(var(--spacing) * 2.5);
    }

    .\[--sidebar-width-collapsed\:52px\] {
        --sidebar-width-collapsed: 52px;
    }

    .\[--sidebar-width\:58px\] {
        --sidebar-width: 58px;
    }

    .\[--sidebar-width\:90px\] {
        --sidebar-width: 90px;
    }

    .\[--sidebar-width\:200px\] {
        --sidebar-width: 200px;
    }

    .\[--sidebar-width\:240px\] {
        --sidebar-width: 240px;
    }

    .\[--sidebar-width\:250px\] {
        --sidebar-width: 250px;
    }

    .\[--sidebar-width\:270px\] {
        --sidebar-width: 270px;
    }

    .\[--sidebar-width\:290px\] {
        --sidebar-width: 290px;
    }

    .\[animation-direction\:reverse\] {
        animation-direction: reverse;
    }

    .\[counter-reset\:step\] {
        counter-reset: step;
    }

    .\[tab-size\:2\] {
        tab-size: 2;
    }

    .not-last\:block {
        &:not(*:last-child) {
            display: block;
        }
    }

    .not-last\:flex-1 {
        &:not(*:last-child) {
            flex: 1;
        }
    }

    .not-last\:border-b {
        &:not(*:last-child) {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
        }
    }

    .not-last\:pb-0\.5 {
        &:not(*:last-child) {
            padding-bottom: calc(var(--spacing) * 0.5);
        }
    }

    .not-in-data-\[folder\=true\]\:ps-7 {
        &:not(:where(*[data-folder="true"]) *) {
            padding-inline-start: calc(var(--spacing) * 7);
        }
    }

    .group-hover\:flex {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                display: flex;
            }
        }
    }

    .group-hover\:hidden {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                display: none;
            }
        }
    }

    .group-hover\:border-transparent {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                border-color: transparent;
            }
        }
    }

    .group-hover\:text-blue-600 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                color: var(--color-blue-600);
            }
        }
    }

    .group-hover\:text-mono {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                color: var(--mono);
            }
        }
    }

    .group-hover\:text-primary {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                color: var(--primary);
            }
        }
    }

    .group-hover\:underline {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                text-decoration-line: underline;
            }
        }
    }

    .group-hover\:opacity-100 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                opacity: 100%;
            }
        }
    }

    .group-hover\:\[animation-play-state\:paused\] {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                animation-play-state: paused;
            }
        }
    }

    .group-hover\/kanban-column\:opacity-100 {
        &:is(:where(.group\/kanban-column):hover *) {
            @media (hover: hover) {
                opacity: 100%;
            }
        }
    }

    .group-has-\[\[data-state\=open\]\]\:hidden {
        &:is(:where(.group):has(*:is([data-state="open"])) *) {
            display: none;
        }
    }

    .group-data-disabled\:pointer-events-none {
        &:is(:where(.group)[data-disabled] *) {
            pointer-events: none;
        }
    }

    .group-data-disabled\:text-foreground\/30 {
        &:is(:where(.group)[data-disabled] *) {
            color: var(--foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--foreground) 30%, transparent);
            }
        }
    }

    .group-data-disabled\:line-through {
        &:is(:where(.group)[data-disabled] *) {
            text-decoration-line: line-through;
        }
    }

    .group-data-outside\:text-foreground\/30 {
        &:is(:where(.group)[data-outside] *) {
            color: var(--foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--foreground) 30%, transparent);
            }
        }
    }

    .group-data-selected\:bg-primary {
        &:is(:where(.group)[data-selected] *) {
            background-color: var(--primary);
        }
    }

    .group-data-selected\:text-primary-foreground {
        &:is(:where(.group)[data-selected] *) {
            color: var(--primary-foreground);
        }
    }

    .group-data-selected\:group-data-outside\:text-primary-foreground {
        &:is(:where(.group)[data-selected] *) {
            &:is(:where(.group)[data-outside] *) {
                color: var(--primary-foreground);
            }
        }
    }

    .group-data-\[orientation\=horizontal\]\/stepper-nav\:h-0\.5 {
        &:is(:where(.group\/stepper-nav)[data-orientation="horizontal"] *) {
            height: calc(var(--spacing) * 0.5);
        }
    }

    .group-data-\[orientation\=horizontal\]\/stepper-nav\:flex-1 {
        &:is(:where(.group\/stepper-nav)[data-orientation="horizontal"] *) {
            flex: 1;
        }
    }

    .group-data-\[orientation\=horizontal\]\/stepper-nav\:flex-row {
        &:is(:where(.group\/stepper-nav)[data-orientation="horizontal"] *) {
            flex-direction: row;
        }
    }

    .group-data-\[orientation\=vertical\]\/stepper-nav\:h-12 {
        &:is(:where(.group\/stepper-nav)[data-orientation="vertical"] *) {
            height: calc(var(--spacing) * 12);
        }
    }

    .group-data-\[orientation\=vertical\]\/stepper-nav\:w-0\.5 {
        &:is(:where(.group\/stepper-nav)[data-orientation="vertical"] *) {
            width: calc(var(--spacing) * 0.5);
        }
    }

    .group-data-\[orientation\=vertical\]\/stepper-nav\:flex-col {
        &:is(:where(.group\/stepper-nav)[data-orientation="vertical"] *) {
            flex-direction: column;
        }
    }

    .group-data-\[state\=indeterminate\]\:block {
        &:is(:where(.group)[data-state="indeterminate"] *) {
            display: block;
        }
    }

    .group-data-\[state\=indeterminate\]\:hidden {
        &:is(:where(.group)[data-state="indeterminate"] *) {
            display: none;
        }
    }

    .group-data-\[state\=open\]\:block {
        &:is(:where(.group)[data-state="open"] *) {
            display: block;
        }
    }

    .group-data-\[state\=open\]\:hidden {
        &:is(:where(.group)[data-state="open"] *) {
            display: none;
        }
    }

    .group-data-\[state\=open\]\:rotate-180 {
        &:is(:where(.group)[data-state="open"] *) {
            rotate: 180deg;
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:top-full {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            top: 100%;
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:mt-1\.5 {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            margin-top: calc(var(--spacing) * 1.5);
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:overflow-hidden {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            overflow: hidden;
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:rounded-md {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            border-radius: calc(var(--radius) - 2px);
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:border {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:bg-popover {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            background-color: var(--popover);
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:text-popover-foreground {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            color: var(--popover-foreground);
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:shadow {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            --tw-shadow:
                0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
                0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .group-data-\[viewport\=false\]\/navigation-menu\:duration-200 {
        &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
            --tw-duration: 200ms;
            transition-duration: 200ms;
        }
    }

    .group-\[\.range-end\:not\(\.range-start\)\]\:rounded-s-none {
        &:is(:where(.group):is(.range-end:not(.range-start)) *) {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .group-\[\.range-middle\]\:rounded-none {
        &:is(:where(.group):is(.range-middle) *) {
            border-radius: 0;
        }
    }

    .group-\[\.range-middle\]\:group-data-selected\:bg-accent {
        &:is(:where(.group):is(.range-middle) *) {
            &:is(:where(.group)[data-selected] *) {
                background-color: var(--accent);
            }
        }
    }

    .group-\[\.range-middle\]\:group-data-selected\:text-foreground {
        &:is(:where(.group):is(.range-middle) *) {
            &:is(:where(.group)[data-selected] *) {
                color: var(--foreground);
            }
        }
    }

    .group-\[\.range-start\:not\(\.range-end\)\]\:rounded-e-none {
        &:is(:where(.group):is(.range-start:not(.range-end)) *) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .group-\[\.toast\]\:rounded-md\! {
        &:is(:where(.group):is(.toast) *) {
            border-radius: calc(var(--radius) - 2px) !important;
        }
    }

    .group-\[\.toast\]\:bg-primary {
        &:is(:where(.group):is(.toast) *) {
            background-color: var(--primary);
        }
    }

    .group-\[\.toast\]\:bg-secondary {
        &:is(:where(.group):is(.toast) *) {
            background-color: var(--secondary);
        }
    }

    .group-\[\.toast\]\:text-muted-foreground {
        &:is(:where(.group):is(.toast) *) {
            color: var(--muted-foreground);
        }
    }

    .group-\[\.toast\]\:text-primary-foreground\! {
        &:is(:where(.group):is(.toast) *) {
            color: var(--primary-foreground) !important;
        }
    }

    .group-\[\.toast\]\:text-secondary-foreground\! {
        &:is(:where(.group):is(.toast) *) {
            color: var(--secondary-foreground) !important;
        }
    }

    .group-\[\.toaster\]\:w-\(--width\) {
        &:is(:where(.group):is(.toaster) *) {
            width: var(--width);
        }
    }

    .group-\[\.toaster\]\:border-border {
        &:is(:where(.group):is(.toaster) *) {
            border-color: var(--border);
        }
    }

    .group-\[\.toaster\]\:bg-background {
        &:is(:where(.group):is(.toaster) *) {
            background-color: var(--background);
        }
    }

    .group-\[\.toaster\]\:text-foreground\! {
        &:is(:where(.group):is(.toaster) *) {
            color: var(--foreground) !important;
        }
    }

    .group-\[\.toaster\]\:shadow-lg {
        &:is(:where(.group):is(.toaster) *) {
            --tw-shadow:
                0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
                0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .group-\[\[data-selected\]\:not\(\.range-middle\)\]\:\[transition-property\:color\,background-color\,border-radius\,box-shadow\] {
        &:is(:where(.group):is([data-selected]:not(.range-middle)) *) {
            transition-property:
                color, background-color, border-radius, box-shadow;
        }
    }

    .group-\[\[data-selected\]\:not\(\.range-middle\)\]\:duration-150 {
        &:is(:where(.group):is([data-selected]:not(.range-middle)) *) {
            --tw-duration: 150ms;
            transition-duration: 150ms;
        }
    }

    .peer-disabled\:cursor-not-allowed {
        &:is(:where(.peer):disabled ~ *) {
            cursor: not-allowed;
        }
    }

    .peer-disabled\:opacity-50 {
        &:is(:where(.peer):disabled ~ *) {
            opacity: 50%;
        }
    }

    .peer-data-\[state\=checked\]\:invisible {
        &:is(:where(.peer)[data-state="checked"] ~ *) {
            visibility: hidden;
        }
    }

    .peer-data-\[state\=unchecked\]\:invisible {
        &:is(:where(.peer)[data-state="unchecked"] ~ *) {
            visibility: hidden;
        }
    }

    .peer-data-\[state\=unchecked\]\:translate-x-0 {
        &:is(:where(.peer)[data-state="unchecked"] ~ *) {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .peer-data-\[state\=unchecked\]\:translate-x-full {
        &:is(:where(.peer)[data-state="unchecked"] ~ *) {
            --tw-translate-x: 100%;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .marker\:text-muted-foreground\/50 {
        & *::marker {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 50%,
                        transparent);
            }
        }

        &::marker {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 50%,
                        transparent);
            }
        }

        & *::-webkit-details-marker {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 50%,
                        transparent);
            }
        }

        &::-webkit-details-marker {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 50%,
                        transparent);
            }
        }
    }

    .file\:me-2\.5 {
        &::file-selector-button {
            margin-inline-end: calc(var(--spacing) * 2.5);
        }
    }

    .file\:me-3 {
        &::file-selector-button {
            margin-inline-end: calc(var(--spacing) * 3);
        }
    }

    .file\:me-4 {
        &::file-selector-button {
            margin-inline-end: calc(var(--spacing) * 4);
        }
    }

    .file\:h-full {
        &::file-selector-button {
            height: 100%;
        }
    }

    .file\:border-0 {
        &::file-selector-button {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }
    }

    .file\:border-e {
        &::file-selector-button {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 1px;
        }
    }

    .file\:border-solid {
        &::file-selector-button {
            --tw-border-style: solid;
            border-style: solid;
        }
    }

    .file\:border-input {
        &::file-selector-button {
            border-color: var(--input);
        }
    }

    .file\:bg-transparent {
        &::file-selector-button {
            background-color: transparent;
        }
    }

    .file\:p-0 {
        &::file-selector-button {
            padding: calc(var(--spacing) * 0);
        }
    }

    .file\:pe-2\.5 {
        &::file-selector-button {
            padding-inline-end: calc(var(--spacing) * 2.5);
        }
    }

    .file\:pe-3 {
        &::file-selector-button {
            padding-inline-end: calc(var(--spacing) * 3);
        }
    }

    .file\:pe-4 {
        &::file-selector-button {
            padding-inline-end: calc(var(--spacing) * 4);
        }
    }

    .file\:font-medium {
        &::file-selector-button {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .file\:text-foreground {
        &::file-selector-button {
            color: var(--foreground);
        }
    }

    .file\:not-italic {
        &::file-selector-button {
            font-style: normal;
        }
    }

    .placeholder\:text-muted-foreground {
        &::placeholder {
            color: var(--muted-foreground);
        }
    }

    .placeholder\:text-muted-foreground\/80 {
        &::placeholder {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 80%,
                        transparent);
            }
        }
    }

    .before\:absolute {
        &::before {
            content: var(--tw-content);
            position: absolute;
        }
    }

    .before\:inset-y-0 {
        &::before {
            content: var(--tw-content);
            inset-block: calc(var(--spacing) * 0);
        }
    }

    .before\:start-\[11px\] {
        &::before {
            content: var(--tw-content);
            inset-inline-start: 11px;
        }
    }

    .before\:start-\[20px\] {
        &::before {
            content: var(--tw-content);
            inset-inline-start: 20px;
        }
    }

    .before\:start-\[32px\] {
        &::before {
            content: var(--tw-content);
            inset-inline-start: 32px;
        }
    }

    .before\:-top-\[3px\] {
        &::before {
            content: var(--tw-content);
            top: calc(3px * -1);
        }
    }

    .before\:top-0 {
        &::before {
            content: var(--tw-content);
            top: calc(var(--spacing) * 0);
        }
    }

    .before\:bottom-0 {
        &::before {
            content: var(--tw-content);
            bottom: calc(var(--spacing) * 0);
        }
    }

    .before\:left-0 {
        &::before {
            content: var(--tw-content);
            left: calc(var(--spacing) * 0);
        }
    }

    .before\:left-\[11px\] {
        &::before {
            content: var(--tw-content);
            left: 11px;
        }
    }

    .before\:size-1\.5 {
        &::before {
            content: var(--tw-content);
            width: calc(var(--spacing) * 1.5);
            height: calc(var(--spacing) * 1.5);
        }
    }

    .before\:size-2 {
        &::before {
            content: var(--tw-content);
            width: calc(var(--spacing) * 2);
            height: calc(var(--spacing) * 2);
        }
    }

    .before\:size-\[6px\] {
        &::before {
            content: var(--tw-content);
            width: 6px;
            height: 6px;
        }
    }

    .before\:w-px {
        &::before {
            content: var(--tw-content);
            width: 1px;
        }
    }

    .before\:-translate-x-2\/4 {
        &::before {
            content: var(--tw-content);
            --tw-translate-x: calc(calc(2 / 4 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .before\:-translate-x-px {
        &::before {
            content: var(--tw-content);
            --tw-translate-x: -1px;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .before\:-translate-y-1\/2 {
        &::before {
            content: var(--tw-content);
            --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .before\:-translate-y-2\/4 {
        &::before {
            content: var(--tw-content);
            --tw-translate-y: calc(calc(2 / 4 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .before\:rounded-full {
        &::before {
            content: var(--tw-content);
            border-radius: calc(infinity * 1px);
        }
    }

    .before\:border-2 {
        &::before {
            content: var(--tw-content);
            border-style: var(--tw-border-style);
            border-width: 2px;
        }
    }

    .before\:border-s {
        &::before {
            content: var(--tw-content);
            border-inline-start-style: var(--tw-border-style);
            border-inline-start-width: 1px;
        }
    }

    .before\:border-l {
        &::before {
            content: var(--tw-content);
            border-left-style: var(--tw-border-style);
            border-left-width: 1px;
        }
    }

    .before\:border-border {
        &::before {
            content: var(--tw-content);
            border-color: var(--border);
        }
    }

    .before\:border-primary {
        &::before {
            content: var(--tw-content);
            border-color: var(--primary);
        }
    }

    .before\:bg-background {
        &::before {
            content: var(--tw-content);
            background-color: var(--background);
        }
    }

    .before\:bg-border {
        &::before {
            content: var(--tw-content);
            background-color: var(--border);
        }
    }

    .after\:absolute {
        &::after {
            content: var(--tw-content);
            position: absolute;
        }
    }

    .after\:inset-y-0 {
        &::after {
            content: var(--tw-content);
            inset-block: calc(var(--spacing) * 0);
        }
    }

    .after\:left-0 {
        &::after {
            content: var(--tw-content);
            left: calc(var(--spacing) * 0);
        }
    }

    .after\:left-1\/2 {
        &::after {
            content: var(--tw-content);
            left: calc(1 / 2 * 100%);
        }
    }

    .after\:w-1 {
        &::after {
            content: var(--tw-content);
            width: calc(var(--spacing) * 1);
        }
    }

    .after\:w-10 {
        &::after {
            content: var(--tw-content);
            width: calc(var(--spacing) * 10);
        }
    }

    .after\:-translate-x-1\/2 {
        &::after {
            content: var(--tw-content);
            --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .after\:bg-neutral-950 {
        &::after {
            content: var(--tw-content);
            background-color: var(--color-neutral-950);
        }
    }

    .\*\:after\:pointer-events-none {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                pointer-events: none;
            }
        }
    }

    .\*\:after\:absolute {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                position: absolute;
            }
        }
    }

    .\*\:after\:start-1\/2 {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                inset-inline-start: calc(1 / 2 * 100%);
            }
        }
    }

    .\*\:after\:bottom-1 {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                bottom: calc(var(--spacing) * 1);
            }
        }
    }

    .\*\:after\:z-10 {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                z-index: 10;
            }
        }
    }

    .\*\:after\:size-\[3px\] {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                width: 3px;
                height: 3px;
            }
        }
    }

    .\*\:after\:-translate-x-1\/2 {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .\*\:after\:rounded-full {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                border-radius: calc(infinity * 1px);
            }
        }
    }

    .\*\:after\:bg-primary {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }
    }

    .\*\:after\:transition-colors {
        :is(& > *) {
            &::after {
                content: var(--tw-content);
                transition-property:
                    color, background-color, border-color, outline-color,
                    text-decoration-color, fill, stroke, --tw-gradient-from,
                    --tw-gradient-via, --tw-gradient-to;
                transition-timing-function: var(--tw-ease,
                        var(--default-transition-timing-function));
                transition-duration: var(--tw-duration,
                        var(--default-transition-duration));
            }
        }
    }

    .first\:mt-0 {
        &:first-child {
            margin-top: calc(var(--spacing) * 0);
        }
    }

    .first\:rounded-s-md {
        &:first-child {
            border-start-start-radius: calc(var(--radius) - 2px);
            border-end-start-radius: calc(var(--radius) - 2px);
        }
    }

    .first\:rounded-l-md {
        &:first-child {
            border-top-left-radius: calc(var(--radius) - 2px);
            border-bottom-left-radius: calc(var(--radius) - 2px);
        }
    }

    .first\:border-s {
        &:first-child {
            border-inline-start-style: var(--tw-border-style);
            border-inline-start-width: 1px;
        }
    }

    .first\:border-l {
        &:first-child {
            border-left-style: var(--tw-border-style);
            border-left-width: 1px;
        }
    }

    .first\:text-nowrap {
        &:first-child {
            text-wrap: nowrap;
        }
    }

    .last\:me-5 {
        &:last-child {
            margin-inline-end: calc(var(--spacing) * 5);
        }
    }

    .last\:mr-5 {
        &:last-child {
            margin-right: calc(var(--spacing) * 5);
        }
    }

    .last\:rounded-e-md {
        &:last-child {
            border-start-end-radius: calc(var(--radius) - 2px);
            border-end-end-radius: calc(var(--radius) - 2px);
        }
    }

    .last\:rounded-r-md {
        &:last-child {
            border-top-right-radius: calc(var(--radius) - 2px);
            border-bottom-right-radius: calc(var(--radius) - 2px);
        }
    }

    .last\:border-b-0 {
        &:last-child {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 0px;
        }
    }

    .odd\:bg-muted\/90 {
        &:nth-child(odd) {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 90%,
                        transparent);
            }
        }
    }

    .hover\:z-5 {
        &:hover {
            @media (hover: hover) {
                z-index: 5;
            }
        }
    }

    .hover\:z-10 {
        &:hover {
            @media (hover: hover) {
                z-index: 10;
            }
        }
    }

    .hover\:scale-105 {
        &:hover {
            @media (hover: hover) {
                --tw-scale-x: 105%;
                --tw-scale-y: 105%;
                --tw-scale-z: 105%;
                scale: var(--tw-scale-x) var(--tw-scale-y);
            }
        }
    }

    .hover\:rounded-lg {
        &:hover {
            @media (hover: hover) {
                border-radius: var(--radius);
            }
        }
    }

    .hover\:border {
        &:hover {
            @media (hover: hover) {
                border-style: var(--tw-border-style);
                border-width: 1px;
            }
        }
    }

    .hover\:border-border {
        &:hover {
            @media (hover: hover) {
                border-color: var(--border);
            }
        }
    }

    .hover\:border-input {
        &:hover {
            @media (hover: hover) {
                border-color: var(--input);
            }
        }
    }

    .hover\:border-zinc-800 {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-zinc-800);
            }
        }
    }

    .hover\:bg-\[\#0B5C22\]\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in oklab, #0b5c22 90%, transparent);
            }
        }
    }

    .hover\:bg-\[\#72A301\]\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in oklab, #72a301 90%, transparent);
            }
        }
    }

    .hover\:bg-\[\#262626\] {
        &:hover {
            @media (hover: hover) {
                background-color: #262626;
            }
        }
    }

    .hover\:bg-accent {
        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }
    }

    .hover\:bg-accent-foreground\/10 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--accent-foreground);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--accent-foreground) 10%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-accent\/50 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--accent) 50%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-accent\/60 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--accent) 60%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-background {
        &:hover {
            @media (hover: hover) {
                background-color: var(--background);
            }
        }
    }

    .hover\:bg-blue-50 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-blue-50);
            }
        }
    }

    .hover\:bg-blue-200 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-blue-200);
            }
        }
    }

    .hover\:bg-blue-600 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-blue-600);
            }
        }
    }

    .hover\:bg-blue-700 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-blue-700);
            }
        }
    }

    .hover\:bg-destructive\/5 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--destructive) 5%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-destructive\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--destructive) 90%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-fuchsia-700 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-fuchsia-700);
            }
        }
    }

    .hover\:bg-gray-100 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-gray-100);
            }
        }
    }

    .hover\:bg-gray-200 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-gray-200);
            }
        }
    }

    .hover\:bg-input {
        &:hover {
            @media (hover: hover) {
                background-color: var(--input);
            }
        }
    }

    .hover\:bg-muted {
        &:hover {
            @media (hover: hover) {
                background-color: var(--muted);
            }
        }
    }

    .hover\:bg-muted\/40 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--muted);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--muted) 40%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-muted\/50 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--muted);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--muted) 50%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-primary\/5 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--primary) 5%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-primary\/10 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--primary) 10%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-primary\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--primary) 90%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-secondary {
        &:hover {
            @media (hover: hover) {
                background-color: var(--secondary);
            }
        }
    }

    .hover\:bg-secondary\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--secondary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--secondary) 90%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-teal-600 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-teal-600);
            }
        }
    }

    .hover\:bg-teal-600\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb,
                        oklch(60% 0.118 184.704) 90%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-teal-600) 90%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-transparent {
        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .hover\:bg-yellow-700 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-yellow-700);
            }
        }
    }

    .hover\:bg-zinc-700 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-zinc-700);
            }
        }
    }

    .hover\:bg-zinc-800 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-zinc-800);
            }
        }
    }

    .hover\:bg-zinc-800\/80 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb,
                        oklch(27.4% 0.006 286.033) 80%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-zinc-800) 80%,
                            transparent);
                }
            }
        }
    }

    .hover\:bg-zinc-900 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-zinc-900);
            }
        }
    }

    .hover\:bg-zinc-950\/90 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb,
                        oklch(14.1% 0.005 285.823) 90%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-zinc-950) 90%,
                            transparent);
                }
            }
        }
    }

    .hover\:from-blue-600 {
        &:hover {
            @media (hover: hover) {
                --tw-gradient-from: var(--color-blue-600);
                --tw-gradient-stops: var(--tw-gradient-via-stops,
                        var(--tw-gradient-position),
                        var(--tw-gradient-from) var(--tw-gradient-from-position),
                        var(--tw-gradient-to) var(--tw-gradient-to-position));
            }
        }
    }

    .hover\:font-medium {
        &:hover {
            @media (hover: hover) {
                --tw-font-weight: var(--font-weight-medium);
                font-weight: var(--font-weight-medium);
            }
        }
    }

    .hover\:text-accent-foreground {
        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }
    }

    .hover\:text-blue-600 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-blue-600);
            }
        }
    }

    .hover\:text-destructive {
        &:hover {
            @media (hover: hover) {
                color: var(--destructive);
            }
        }
    }

    .hover\:text-foreground {
        &:hover {
            @media (hover: hover) {
                color: var(--foreground);
            }
        }
    }

    .hover\:text-foreground\/80 {
        &:hover {
            @media (hover: hover) {
                color: var(--foreground);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab,
                            var(--foreground) 80%,
                            transparent);
                }
            }
        }
    }

    .hover\:text-gray-600 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-gray-600);
            }
        }
    }

    .hover\:text-mono {
        &:hover {
            @media (hover: hover) {
                color: var(--mono);
            }
        }
    }

    .hover\:text-muted-foreground {
        &:hover {
            @media (hover: hover) {
                color: var(--muted-foreground);
            }
        }
    }

    .hover\:text-primary {
        &:hover {
            @media (hover: hover) {
                color: var(--primary);
            }
        }
    }

    .hover\:text-primary-foreground {
        &:hover {
            @media (hover: hover) {
                color: var(--primary-foreground);
            }
        }
    }

    .hover\:text-primary\/90 {
        &:hover {
            @media (hover: hover) {
                color: var(--primary);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--primary) 90%, transparent);
                }
            }
        }
    }

    .hover\:text-white {
        &:hover {
            @media (hover: hover) {
                color: var(--color-white);
            }
        }
    }

    .hover\:text-zinc-50 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-zinc-50);
            }
        }
    }

    .hover\:underline {
        &:hover {
            @media (hover: hover) {
                text-decoration-line: underline;
            }
        }
    }

    .hover\:decoration-dashed {
        &:hover {
            @media (hover: hover) {
                text-decoration-style: dashed;
            }
        }
    }

    .hover\:decoration-solid {
        &:hover {
            @media (hover: hover) {
                text-decoration-style: solid;
            }
        }
    }

    .hover\:underline-offset-2 {
        &:hover {
            @media (hover: hover) {
                text-underline-offset: 2px;
            }
        }
    }

    .hover\:underline-offset-4 {
        &:hover {
            @media (hover: hover) {
                text-underline-offset: 4px;
            }
        }
    }

    .hover\:opacity-100 {
        &:hover {
            @media (hover: hover) {
                opacity: 100%;
            }
        }
    }

    .hover\:not-in-data-selected\:bg-accent {
        &:hover {
            @media (hover: hover) {
                &:not(:where(*[data-selected]) *) {
                    background-color: var(--accent);
                }
            }
        }
    }

    .hover\:not-in-data-selected\:text-foreground {
        &:hover {
            @media (hover: hover) {
                &:not(:where(*[data-selected]) *) {
                    color: var(--foreground);
                }
            }
        }
    }

    .odd\:hover\:bg-muted {
        &:nth-child(odd) {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--muted);
                }
            }
        }
    }

    .focus\:z-10 {
        &:focus {
            z-index: 10;
        }
    }

    .focus\:z-20 {
        &:focus {
            z-index: 20;
        }
    }

    .focus\:border-ring {
        &:focus {
            border-color: var(--ring);
        }
    }

    .focus\:bg-accent {
        &:focus {
            background-color: var(--accent);
        }
    }

    .focus\:bg-destructive\/5 {
        &:focus {
            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 5%,
                        transparent);
            }
        }
    }

    .focus\:bg-transparent {
        &:focus {
            background-color: transparent;
        }
    }

    .focus\:text-accent-foreground {
        &:focus {
            color: var(--accent-foreground);
        }
    }

    .focus\:text-destructive {
        &:focus {
            color: var(--destructive);
        }
    }

    .focus\:text-foreground {
        &:focus {
            color: var(--foreground);
        }
    }

    .focus\:text-mono {
        &:focus {
            color: var(--mono);
        }
    }

    .focus\:text-primary {
        &:focus {
            color: var(--primary);
        }
    }

    .focus\:ring-2 {
        &:focus {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .focus\:ring-blue-500 {
        &:focus {
            --tw-ring-color: var(--color-blue-500);
        }
    }

    .focus\:ring-ring {
        &:focus {
            --tw-ring-color: var(--ring);
        }
    }

    .focus\:ring-offset-2 {
        &:focus {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }
    }

    .focus\:outline-hidden {
        &:focus {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .focus\:outline-none {
        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .focus-visible\:z-10 {
        &:focus-visible {
            z-index: 10;
        }
    }

    .focus-visible\:border-ring {
        &:focus-visible {
            border-color: var(--ring);
        }
    }

    .focus-visible\:bg-accent {
        &:focus-visible {
            background-color: var(--accent);
        }
    }

    .focus-visible\:bg-transparent {
        &:focus-visible {
            background-color: transparent;
        }
    }

    .focus-visible\:text-accent-foreground {
        &:focus-visible {
            color: var(--accent-foreground);
        }
    }

    .focus-visible\:ring-0 {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .focus-visible\:ring-1 {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .focus-visible\:ring-2 {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .focus-visible\:ring-4 {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .focus-visible\:ring-\[3px\] {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .focus-visible\:ring-ring {
        &:focus-visible {
            --tw-ring-color: var(--ring);
        }
    }

    .focus-visible\:ring-ring\/30 {
        &:focus-visible {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }
    }

    .focus-visible\:ring-ring\/50 {
        &:focus-visible {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 50%,
                        transparent);
            }
        }
    }

    .focus-visible\:ring-offset-0 {
        &:focus-visible {
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }
    }

    .focus-visible\:ring-offset-1 {
        &:focus-visible {
            --tw-ring-offset-width: 1px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }
    }

    .focus-visible\:ring-offset-2 {
        &:focus-visible {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }
    }

    .focus-visible\:ring-offset-background {
        &:focus-visible {
            --tw-ring-offset-color: var(--background);
        }
    }

    .focus-visible\:outline-hidden {
        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .focus-visible\:outline-1 {
        &:focus-visible {
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
        }
    }

    .focus-visible\:outline-none {
        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .disabled\:pointer-events-none {
        &:disabled {
            pointer-events: none;
        }
    }

    .disabled\:cursor-not-allowed {
        &:disabled {
            cursor: not-allowed;
        }
    }

    .disabled\:bg-transparent {
        &:disabled {
            background-color: transparent;
        }
    }

    .disabled\:opacity-50 {
        &:disabled {
            opacity: 50%;
        }
    }

    .disabled\:opacity-60 {
        &:disabled {
            opacity: 60%;
        }
    }

    .in-focus-visible\:ring-\[3px\] {
        :where(*:focus-visible) & {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .in-focus-visible\:ring-ring\/50 {
        :where(*:focus-visible) & {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 50%,
                        transparent);
            }
        }
    }

    .in-aria-\[expanded\=false\]\:-rotate-90 {
        :where(*[aria-expanded="false"]) & {
            rotate: calc(90deg * -1);
        }
    }

    .in-data-\[drag-target\=true\]\:bg-accent {
        :where(*[data-drag-target="true"]) & {
            background-color: var(--accent);
        }
    }

    .in-data-\[header-sticky\=on\]\:pt-\(--header-height\) {
        :where(*[data-header-sticky="on"]) & {
            padding-top: var(--header-height);
        }
    }

    .in-data-\[invalid\=true\]\:border-destructive\/60 {
        :where(*[data-invalid="true"]) & {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }
    }

    .in-data-\[invalid\=true\]\:ring-destructive\/10 {
        :where(*[data-invalid="true"]) & {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }
    }

    .in-data-\[kt-sticky-header\=on\]\:pt-\(--header-height\) {
        :where(*[data-kt-sticky-header="on"]) & {
            padding-top: var(--header-height);
        }
    }

    .in-data-\[search-match\=true\]\:bg-blue-50\! {
        :where(*[data-search-match="true"]) & {
            background-color: var(--color-blue-50) !important;
        }
    }

    .in-data-\[selected\=true\]\:bg-accent {
        :where(*[data-selected="true"]) & {
            background-color: var(--accent);
        }
    }

    .in-data-\[selected\=true\]\:text-accent-foreground {
        :where(*[data-selected="true"]) & {
            color: var(--accent-foreground);
        }
    }

    .in-data-\[sidebar-collapsed\]\:start-\(--sidebar-width-collapsed\) {
        :where(*[data-sidebar-collapsed]) & {
            inset-inline-start: var(--sidebar-width-collapsed);
        }
    }

    .in-data-\[sidebar-collapsed\]\:block {
        :where(*[data-sidebar-collapsed]) & {
            display: block;
        }
    }

    .in-data-\[sidebar-collapsed\]\:hidden {
        :where(*[data-sidebar-collapsed]) & {
            display: none;
        }
    }

    .in-data-\[sidebar-collapsed\]\:inline-flex {
        :where(*[data-sidebar-collapsed]) & {
            display: inline-flex;
        }
    }

    .in-data-\[sidebar-collapsed\]\:h-\[calc\(100vh-\(var\(--header-height\)\)-\(var\(--content-header-height\)\)-\(var\(--sidebar-footer-collapsed-height\)\)\)\] {
        :where(*[data-sidebar-collapsed]) & {
            height: calc(100vh - (var(--header-height)) - (var(--content-header-height)) - (var(--sidebar-footer-collapsed-height)));
        }
    }

    .in-data-\[sidebar-collapsed\]\:w-\(--sidebar-width-collapsed\) {
        :where(*[data-sidebar-collapsed]) & {
            width: var(--sidebar-width-collapsed);
        }
    }

    .in-data-\[sidebar-open\=false\]\:-start-full {
        :where(*[data-sidebar-open="false"]) & {
            inset-inline-start: -100%;
        }
    }

    .in-data-\[sidebar-open\=false\]\:w-\(--sidebar-collapsed-width\) {
        :where(*[data-sidebar-open="false"]) & {
            width: var(--sidebar-collapsed-width);
        }
    }

    .in-data-\[sidebar-open\=false\]\:rotate-0 {
        :where(*[data-sidebar-open="false"]) & {
            rotate: 0deg;
        }
    }

    .in-data-\[state\=open\]\:rotate-90 {
        :where(*[data-state="open"]) & {
            rotate: 90deg;
        }
    }

    .in-data-\[state\=open\]\:bg-input {
        :where(*[data-state="open"]) & {
            background-color: var(--input);
        }
    }

    .in-data-\[sticky-header\=on\]\:pt-\(--header-height\) {
        :where(*[data-sticky-header="on"]) & {
            padding-top: var(--header-height);
        }
    }

    .in-data-\[sticky-header\=on\]\:pt-\(--header-height-default\) {
        :where(*[data-sticky-header="on"]) & {
            padding-top: var(--header-height-default);
        }
    }

    .in-\[\.kt-menu-dropdown\]\:-rotate-90 {
        :where(*:is(.kt-menu-dropdown)) & {
            rotate: calc(90deg * -1);
        }
    }

    .in-\[\.menu-dropdown\]\:-rotate-90 {
        :where(*:is(.menu-dropdown)) & {
            rotate: calc(90deg * -1);
        }
    }

    .has-disabled\:opacity-50 {
        &:has(*:disabled) {
            opacity: 50%;
        }
    }

    .has-data-\[arrow\=true\]\:justify-between {
        &:has(*[data-arrow="true"]) {
            justify-content: space-between;
        }
    }

    .has-\[\:focus-visible\]\:border-ring {
        &:has(*:is(:focus-visible)) {
            border-color: var(--ring);
        }
    }

    .has-\[\:focus-visible\]\:ring-\[3px\] {
        &:has(*:is(:focus-visible)) {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .has-\[\:focus-visible\]\:ring-ring\/30 {
        &:has(*:is(:focus-visible)) {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }
    }

    .has-\[\:focus-visible\]\:outline-none {
        &:has(*:is(:focus-visible)) {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .has-\[\[role\=alert\]\]\:border-0\! {
        &:has(*:is([role="alert"])) {
            border-style: var(--tw-border-style) !important;
            border-width: 0px !important;
        }
    }

    .has-\[\[role\=alert\]\]\:bg-transparent\! {
        &:has(*:is([role="alert"])) {
            background-color: transparent !important;
        }
    }

    .has-\[\[role\=alert\]\]\:shadow-none\! {
        &:has(*:is([role="alert"])) {
            --tw-shadow: 0 0 #0000 !important;
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow) !important;
        }
    }

    .has-\[em\]\:py-2\.5 {
        &:has(*:is(em)) {
            padding-block: calc(var(--spacing) * 2.5);
        }
    }

    .aria-invalid\:border {
        &[aria-invalid="true"] {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }
    }

    .aria-invalid\:border-destructive {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }
    }

    .aria-invalid\:border-destructive\/60 {
        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }
    }

    .aria-invalid\:ring-destructive\/10 {
        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }
    }

    .\*\:data-alert-icon\:mt-0\.5 {
        :is(& > *) {
            &[data-alert-icon] {
                margin-top: calc(var(--spacing) * 0.5);
            }
        }
    }

    .data-disabled\:pointer-events-none {
        &[data-disabled] {
            pointer-events: none;
        }
    }

    .data-disabled\:cursor-not-allowed {
        &[data-disabled] {
            cursor: not-allowed;
        }
    }

    .data-disabled\:opacity-50 {
        &[data-disabled] {
            opacity: 50%;
        }
    }

    .data-focus-within\:border-ring {
        &[data-focus-within] {
            border-color: var(--ring);
        }
    }

    .data-focus-within\:ring-\[3px\] {
        &[data-focus-within] {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .data-focus-within\:ring-ring\/30 {
        &[data-focus-within] {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }
    }

    .data-focus-within\:outline-none {
        &[data-focus-within] {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .data-focus-within\:has-aria-invalid\:border-destructive {
        &[data-focus-within] {
            &:has(*[aria-invalid="true"]) {
                border-color: var(--destructive);
            }
        }
    }

    .data-focus-within\:has-aria-invalid\:ring-destructive\/20 {
        &[data-focus-within] {
            &:has(*[aria-invalid="true"]) {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab,
                            var(--destructive) 20%,
                            transparent);
                }
            }
        }
    }

    .data-focused\:bg-accent {
        &[data-focused] {
            background-color: var(--accent);
        }
    }

    .data-focused\:text-foreground {
        &[data-focused] {
            color: var(--foreground);
        }
    }

    .data-invalid\:text-destructive {
        &[data-invalid] {
            color: var(--destructive);
        }
    }

    .data-invalid\:data-focused\:bg-destructive {
        &[data-invalid] {
            &[data-focused] {
                background-color: var(--destructive);
            }
        }
    }

    .data-invalid\:data-focused\:text-destructive-foreground {
        &[data-invalid] {
            &[data-focused] {
                color: var(--destructive-foreground);
            }
        }
    }

    .data-pinned\:bg-background\/90 {
        &[data-pinned] {
            background-color: var(--background);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--background) 90%,
                        transparent);
            }
        }
    }

    .data-pinned\:bg-muted\/90 {
        &[data-pinned] {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 90%,
                        transparent);
            }
        }
    }

    .data-pinned\:backdrop-blur-xs {
        &[data-pinned] {
            --tw-backdrop-blur: blur(var(--blur-xs));
            -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
            backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        }
    }

    .data-placeholder\:text-muted-foreground {
        &[data-placeholder] {
            color: var(--muted-foreground);
        }
    }

    .data-placeholder\:text-muted-foreground\/70 {
        &[data-placeholder] {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 70%,
                        transparent);
            }
        }
    }

    .data-focused\:data-placeholder\:text-foreground {
        &[data-focused] {
            &[data-placeholder] {
                color: var(--foreground);
            }
        }
    }

    .data-invalid\:data-placeholder\:text-destructive {
        &[data-invalid] {
            &[data-placeholder] {
                color: var(--destructive);
            }
        }
    }

    .data-invalid\:data-focused\:data-placeholder\:text-destructive-foreground {
        &[data-invalid] {
            &[data-focused] {
                &[data-placeholder] {
                    color: var(--destructive-foreground);
                }
            }
        }
    }

    .data-selected\:bg-accent\/50 {
        &[data-selected] {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 50%,
                        transparent);
            }
        }
    }

    .data-selected\:text-muted-foreground {
        &[data-selected] {
            color: var(--muted-foreground);
        }
    }

    .data-\[active\=true\]\:z-10 {
        &[data-active="true"] {
            z-index: 10;
        }
    }

    .data-\[active\=true\]\:border-border {
        &[data-active="true"] {
            border-color: var(--border);
        }
    }

    .data-\[active\=true\]\:border-mono {
        &[data-active="true"] {
            border-color: var(--mono);
        }
    }

    .data-\[active\=true\]\:border-primary {
        &[data-active="true"] {
            border-color: var(--primary);
        }
    }

    .data-\[active\=true\]\:border-ring {
        &[data-active="true"] {
            border-color: var(--ring);
        }
    }

    .data-\[active\=true\]\:bg-accent {
        &[data-active="true"] {
            background-color: var(--accent);
        }
    }

    .data-\[active\=true\]\:bg-accent\/50 {
        &[data-active="true"] {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 50%,
                        transparent);
            }
        }
    }

    .data-\[active\=true\]\:bg-background {
        &[data-active="true"] {
            background-color: var(--background);
        }
    }

    .data-\[active\=true\]\:bg-destructive\/5 {
        &[data-active="true"] {
            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 5%,
                        transparent);
            }
        }
    }

    .data-\[active\=true\]\:bg-transparent {
        &[data-active="true"] {
            background-color: transparent;
        }
    }

    .data-\[active\=true\]\:font-medium {
        &[data-active="true"] {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .data-\[active\=true\]\:text-accent-foreground {
        &[data-active="true"] {
            color: var(--accent-foreground);
        }
    }

    .data-\[active\=true\]\:text-mono {
        &[data-active="true"] {
            color: var(--mono);
        }
    }

    .data-\[active\=true\]\:text-primary {
        &[data-active="true"] {
            color: var(--primary);
        }
    }

    .data-\[active\=true\]\:ring-\[3px\] {
        &[data-active="true"] {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .data-\[active\=true\]\:ring-ring\/50 {
        &[data-active="true"] {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 50%,
                        transparent);
            }
        }
    }

    .data-\[active\=true\]\:aria-invalid\:border-destructive {
        &[data-active="true"] {
            &[aria-invalid="true"] {
                border-color: var(--destructive);
            }
        }
    }

    .data-\[active\=true\]\:aria-invalid\:ring-destructive\/20 {
        &[data-active="true"] {
            &[aria-invalid="true"] {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab,
                            var(--destructive) 20%,
                            transparent);
                }
            }
        }
    }

    .data-\[disabled\]\:pointer-events-none {
        &[data-disabled] {
            pointer-events: none;
        }
    }

    .data-\[disabled\]\:opacity-50 {
        &[data-disabled] {
            opacity: 50%;
        }
    }

    .data-\[disabled\=true\]\:pointer-events-none {
        &[data-disabled="true"] {
            pointer-events: none;
        }
    }

    .data-\[disabled\=true\]\:opacity-50 {
        &[data-disabled="true"] {
            opacity: 50%;
        }
    }

    .data-\[here\=true\]\:border-border {
        &[data-here="true"] {
            border-color: var(--border);
        }
    }

    .data-\[here\=true\]\:border-mono {
        &[data-here="true"] {
            border-color: var(--mono);
        }
    }

    .data-\[here\=true\]\:border-primary {
        &[data-here="true"] {
            border-color: var(--primary);
        }
    }

    .data-\[here\=true\]\:bg-accent {
        &[data-here="true"] {
            background-color: var(--accent);
        }
    }

    .data-\[here\=true\]\:bg-background {
        &[data-here="true"] {
            background-color: var(--background);
        }
    }

    .data-\[here\=true\]\:bg-transparent {
        &[data-here="true"] {
            background-color: transparent;
        }
    }

    .data-\[here\=true\]\:text-accent-foreground {
        &[data-here="true"] {
            color: var(--accent-foreground);
        }
    }

    .data-\[here\=true\]\:text-foreground {
        &[data-here="true"] {
            color: var(--foreground);
        }
    }

    .data-\[here\=true\]\:text-mono {
        &[data-here="true"] {
            color: var(--mono);
        }
    }

    .data-\[here\=true\]\:text-primary {
        &[data-here="true"] {
            color: var(--primary);
        }
    }

    .data-\[inset\]\:pl-8 {
        &[data-inset] {
            padding-left: calc(var(--spacing) * 8);
        }
    }

    .data-\[kt-sticky-header\=on\]\:\[--header-height\:60px\] {
        &[data-kt-sticky-header="on"] {
            --header-height: 60px;
        }
    }

    .data-\[orientation\=horizontal\]\:w-full {
        &[data-orientation="horizontal"] {
            width: 100%;
        }
    }

    .data-\[orientation\=horizontal\]\:flex-row {
        &[data-orientation="horizontal"] {
            flex-direction: row;
        }
    }

    .data-\[orientation\=vertical\]\:flex-col {
        &[data-orientation="vertical"] {
            flex-direction: column;
        }
    }

    .data-\[panel-group-direction\=vertical\]\:h-px {
        &[data-panel-group-direction="vertical"] {
            height: 1px;
        }
    }

    .data-\[panel-group-direction\=vertical\]\:w-full {
        &[data-panel-group-direction="vertical"] {
            width: 100%;
        }
    }

    .data-\[panel-group-direction\=vertical\]\:flex-col {
        &[data-panel-group-direction="vertical"] {
            flex-direction: column;
        }
    }

    .data-\[panel-group-direction\=vertical\]\:after\:left-0 {
        &[data-panel-group-direction="vertical"] {
            &::after {
                content: var(--tw-content);
                left: calc(var(--spacing) * 0);
            }
        }
    }

    .data-\[panel-group-direction\=vertical\]\:after\:h-1 {
        &[data-panel-group-direction="vertical"] {
            &::after {
                content: var(--tw-content);
                height: calc(var(--spacing) * 1);
            }
        }
    }

    .data-\[panel-group-direction\=vertical\]\:after\:w-full {
        &[data-panel-group-direction="vertical"] {
            &::after {
                content: var(--tw-content);
                width: 100%;
            }
        }
    }

    .data-\[panel-group-direction\=vertical\]\:after\:translate-x-0 {
        &[data-panel-group-direction="vertical"] {
            &::after {
                content: var(--tw-content);
                --tw-translate-x: calc(var(--spacing) * 0);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2 {
        &[data-panel-group-direction="vertical"] {
            &::after {
                content: var(--tw-content);
                --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .data-\[selected\=true\]\:border-border {
        &[data-selected="true"] {
            border-color: var(--border);
        }
    }

    .data-\[selected\=true\]\:border-zinc-700\/60 {
        &[data-selected="true"] {
            border-color: color-mix(in srgb,
                    oklch(37% 0.013 285.805) 60%,
                    transparent);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--color-zinc-700) 60%,
                        transparent);
            }
        }
    }

    .data-\[selected\=true\]\:bg-accent {
        &[data-selected="true"] {
            background-color: var(--accent);
        }
    }

    .data-\[selected\=true\]\:bg-background {
        &[data-selected="true"] {
            background-color: var(--background);
        }
    }

    .data-\[selected\=true\]\:bg-muted {
        &[data-selected="true"] {
            background-color: var(--muted);
        }
    }

    .data-\[selected\=true\]\:bg-primary {
        &[data-selected="true"] {
            background-color: var(--primary);
        }
    }

    .data-\[selected\=true\]\:bg-secondary\/70 {
        &[data-selected="true"] {
            background-color: var(--secondary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--secondary) 70%,
                        transparent);
            }
        }
    }

    .data-\[selected\=true\]\:bg-transparent {
        &[data-selected="true"] {
            background-color: transparent;
        }
    }

    .data-\[selected\=true\]\:bg-zinc-800\/60 {
        &[data-selected="true"] {
            background-color: color-mix(in srgb,
                    oklch(27.4% 0.006 286.033) 60%,
                    transparent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--color-zinc-800) 60%,
                        transparent);
            }
        }
    }

    .data-\[selected\=true\]\:font-medium {
        &[data-selected="true"] {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .data-\[selected\=true\]\:text-accent-foreground {
        &[data-selected="true"] {
            color: var(--accent-foreground);
        }
    }

    .data-\[selected\=true\]\:text-foreground {
        &[data-selected="true"] {
            color: var(--foreground);
        }
    }

    .data-\[selected\=true\]\:text-mono {
        &[data-selected="true"] {
            color: var(--mono);
        }
    }

    .data-\[selected\=true\]\:text-primary {
        &[data-selected="true"] {
            color: var(--primary);
        }
    }

    .data-\[selected\=true\]\:text-primary-foreground {
        &[data-selected="true"] {
            color: var(--primary-foreground);
        }
    }

    .data-\[selected\=true\]\:text-white {
        &[data-selected="true"] {
            color: var(--color-white);
        }
    }

    .data-\[side\=bottom\]\:translate-y-1\.5 {
        &[data-side="bottom"] {
            --tw-translate-y: calc(var(--spacing) * 1.5);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .data-\[side\=left\]\:-translate-x-1\.5 {
        &[data-side="left"] {
            --tw-translate-x: calc(var(--spacing) * -1.5);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .data-\[side\=right\]\:translate-x-1\.5 {
        &[data-side="right"] {
            --tw-translate-x: calc(var(--spacing) * 1.5);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .data-\[side\=top\]\:-translate-y-1\.5 {
        &[data-side="top"] {
            --tw-translate-y: calc(var(--spacing) * -1.5);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .data-\[sidebar-open\=false\]\:rotate-0 {
        &[data-sidebar-open="false"] {
            rotate: 0deg;
        }
    }

    .\*\*\:data-\[slot\=navigation-menu-link\]\:focus\:ring-0 {
        :is(& *) {
            &[data-slot="navigation-menu-link"] {
                &:focus {
                    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
                    box-shadow:
                        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                        var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                        var(--tw-shadow);
                }
            }
        }
    }

    .\*\*\:data-\[slot\=navigation-menu-link\]\:focus\:outline-none {
        :is(& *) {
            &[data-slot="navigation-menu-link"] {
                &:focus {
                    --tw-outline-style: none;
                    outline-style: none;
                }
            }
        }
    }

    .data-\[state\=active\]\:border-primary {
        &[data-state="active"] {
            border-color: var(--primary);
        }
    }

    .data-\[state\=active\]\:border-b-mono {
        &[data-state="active"] {
            border-bottom-color: var(--mono);
        }
    }

    .data-\[state\=active\]\:bg-accent {
        &[data-state="active"] {
            background-color: var(--accent);
        }
    }

    .data-\[state\=active\]\:bg-background {
        &[data-state="active"] {
            background-color: var(--background);
        }
    }

    .data-\[state\=active\]\:bg-primary {
        &[data-state="active"] {
            background-color: var(--primary);
        }
    }

    .data-\[state\=active\]\:text-foreground {
        &[data-state="active"] {
            color: var(--foreground);
        }
    }

    .data-\[state\=active\]\:text-primary {
        &[data-state="active"] {
            color: var(--primary);
        }
    }

    .data-\[state\=active\]\:text-primary-foreground {
        &[data-state="active"] {
            color: var(--primary-foreground);
        }
    }

    .data-\[state\=active\]\:shadow-none {
        &[data-state="active"] {
            --tw-shadow: 0 0 #0000;
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .data-\[state\=active\]\:shadow-xs {
        &[data-state="active"] {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .data-\[state\=active\]\:shadow-black\/5 {
        &[data-state="active"] {
            --tw-shadow-color: color-mix(in srgb, #000 5%, transparent);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab,
                        color-mix(in oklab, var(--color-black) 5%, transparent) var(--tw-shadow-alpha),
                        transparent);
            }
        }
    }

    .data-\[state\=checked\]\:translate-x-\[calc\(100\%-2px\)\] {
        &[data-state="checked"] {
            --tw-translate-x: calc(100% - 2px);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .data-\[state\=checked\]\:border-primary {
        &[data-state="checked"] {
            border-color: var(--primary);
        }
    }

    .data-\[state\=checked\]\:bg-primary {
        &[data-state="checked"] {
            background-color: var(--primary);
        }
    }

    .data-\[state\=checked\]\:text-primary-foreground {
        &[data-state="checked"] {
            color: var(--primary-foreground);
        }
    }

    .data-\[state\=closed\]\:duration-300 {
        &[data-state="closed"] {
            --tw-duration: 300ms;
            transition-duration: 300ms;
        }
    }

    .data-\[state\=completed\]\:bg-primary {
        &[data-state="completed"] {
            background-color: var(--primary);
        }
    }

    .data-\[state\=completed\]\:text-primary-foreground {
        &[data-state="completed"] {
            color: var(--primary-foreground);
        }
    }

    .data-\[state\=indeterminate\]\:border-primary {
        &[data-state="indeterminate"] {
            border-color: var(--primary);
        }
    }

    .data-\[state\=indeterminate\]\:bg-primary {
        &[data-state="indeterminate"] {
            background-color: var(--primary);
        }
    }

    .data-\[state\=indeterminate\]\:text-primary-foreground {
        &[data-state="indeterminate"] {
            color: var(--primary-foreground);
        }
    }

    .data-\[state\=on\]\:bg-accent {
        &[data-state="on"] {
            background-color: var(--accent);
        }
    }

    .data-\[state\=on\]\:text-accent-foreground {
        &[data-state="on"] {
            color: var(--accent-foreground);
        }
    }

    .data-\[state\=open\]\:border {
        &[data-state="open"] {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }
    }

    .data-\[state\=open\]\:border-border {
        &[data-state="open"] {
            border-color: var(--border);
        }
    }

    .data-\[state\=open\]\:border-input {
        &[data-state="open"] {
            border-color: var(--input);
        }
    }

    .data-\[state\=open\]\:border-zinc-800 {
        &[data-state="open"] {
            border-color: var(--color-zinc-800);
        }
    }

    .data-\[state\=open\]\:bg-\[\#262626\] {
        &[data-state="open"] {
            background-color: #262626;
        }
    }

    .data-\[state\=open\]\:bg-\[\#E1FCE9\] {
        &[data-state="open"] {
            background-color: #e1fce9;
        }
    }

    .data-\[state\=open\]\:bg-accent {
        &[data-state="open"] {
            background-color: var(--accent);
        }
    }

    .data-\[state\=open\]\:bg-accent-foreground\/10 {
        &[data-state="open"] {
            background-color: var(--accent-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent-foreground) 10%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-accent\/50 {
        &[data-state="open"] {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 50%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-background {
        &[data-state="open"] {
            background-color: var(--background);
        }
    }

    .data-\[state\=open\]\:bg-destructive\/5 {
        &[data-state="open"] {
            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 5%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-destructive\/90 {
        &[data-state="open"] {
            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 90%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-primary {
        &[data-state="open"] {
            background-color: var(--primary);
        }
    }

    .data-\[state\=open\]\:bg-primary\/5 {
        &[data-state="open"] {
            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 5%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-primary\/90 {
        &[data-state="open"] {
            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 90%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-secondary {
        &[data-state="open"] {
            background-color: var(--secondary);
        }
    }

    .data-\[state\=open\]\:bg-secondary\/90 {
        &[data-state="open"] {
            background-color: var(--secondary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--secondary) 90%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:bg-transparent {
        &[data-state="open"] {
            background-color: transparent;
        }
    }

    .data-\[state\=open\]\:bg-zinc-900 {
        &[data-state="open"] {
            background-color: var(--color-zinc-900);
        }
    }

    .data-\[state\=open\]\:bg-zinc-950\/90 {
        &[data-state="open"] {
            background-color: color-mix(in srgb,
                    oklch(14.1% 0.005 285.823) 90%,
                    transparent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--color-zinc-950) 90%,
                        transparent);
            }
        }
    }

    .data-\[state\=open\]\:text-accent-foreground {
        &[data-state="open"] {
            color: var(--accent-foreground);
        }
    }

    .data-\[state\=open\]\:text-foreground {
        &[data-state="open"] {
            color: var(--foreground);
        }
    }

    .data-\[state\=open\]\:text-mono {
        &[data-state="open"] {
            color: var(--mono);
        }
    }

    .data-\[state\=open\]\:text-muted-foreground {
        &[data-state="open"] {
            color: var(--muted-foreground);
        }
    }

    .data-\[state\=open\]\:text-primary {
        &[data-state="open"] {
            color: var(--primary);
        }
    }

    .data-\[state\=open\]\:text-primary-foreground {
        &[data-state="open"] {
            color: var(--primary-foreground);
        }
    }

    .data-\[state\=open\]\:text-white {
        &[data-state="open"] {
            color: var(--color-white);
        }
    }

    .data-\[state\=open\]\:duration-400 {
        &[data-state="open"] {
            --tw-duration: 400ms;
            transition-duration: 400ms;
        }
    }

    .data-\[state\=selected\]\:bg-muted {
        &[data-state="selected"] {
            background-color: var(--muted);
        }
    }

    .data-\[state\=selected\]\:bg-muted\/50 {
        &[data-state="selected"] {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 50%,
                        transparent);
            }
        }
    }

    .data-\[state\=unchecked\]\:translate-x-\[2px\] {
        &[data-state="unchecked"] {
            --tw-translate-x: 2px;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .data-\[state\=unchecked\]\:bg-input {
        &[data-state="unchecked"] {
            background-color: var(--input);
        }
    }

    .data-\[type\=literal\]\:px-0 {
        &[data-type="literal"] {
            padding-inline: calc(var(--spacing) * 0);
        }
    }

    .data-\[type\=literal\]\:text-muted-foreground\/70 {
        &[data-type="literal"] {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 70%,
                        transparent);
            }
        }
    }

    .data-\[variant\=destructive\]\:text-destructive {
        &[data-variant="destructive"] {
            color: var(--destructive);
        }
    }

    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10 {
        &[data-variant="destructive"] {
            &:focus {
                background-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--destructive) 10%,
                            transparent);
                }
            }
        }
    }

    .data-\[variant\=destructive\]\:focus\:text-destructive {
        &[data-variant="destructive"] {
            &:focus {
                color: var(--destructive);
            }
        }
    }

    .data-\[variant\=outline\]\:gap-0 {
        &[data-variant="outline"] {
            gap: calc(var(--spacing) * 0);
        }
    }

    .data-\[variant\=outline\]\:rounded-none {
        &[data-variant="outline"] {
            border-radius: 0;
        }
    }

    .data-\[variant\=outline\]\:border-s-0 {
        &[data-variant="outline"] {
            border-inline-start-style: var(--tw-border-style);
            border-inline-start-width: 0px;
        }
    }

    .data-\[variant\=outline\]\:shadow-xs {
        &[data-variant="outline"] {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .data-\[variant\=outline\]\:first\:rounded-s-md {
        &[data-variant="outline"] {
            &:first-child {
                border-start-start-radius: calc(var(--radius) - 2px);
                border-end-start-radius: calc(var(--radius) - 2px);
            }
        }
    }

    .data-\[variant\=outline\]\:first\:border-s {
        &[data-variant="outline"] {
            &:first-child {
                border-inline-start-style: var(--tw-border-style);
                border-inline-start-width: 1px;
            }
        }
    }

    .data-\[variant\=outline\]\:last\:rounded-e-md {
        &[data-variant="outline"] {
            &:last-child {
                border-start-end-radius: calc(var(--radius) - 2px);
                border-end-end-radius: calc(var(--radius) - 2px);
            }
        }
    }

    .supports-backdrop-filter\:bg-background\/60 {
        @supports (backdrop-filter: var(--tw)) {
            background-color: var(--background);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--background) 60%,
                        transparent);
            }
        }
    }

    .sm\:order-1 {
        @media (width >=40rem) {
            order: 1;
        }
    }

    .sm\:order-2 {
        @media (width >=40rem) {
            order: 2;
        }
    }

    .sm\:mx-auto {
        @media (width >=40rem) {
            margin-inline: auto;
        }
    }

    .sm\:me-0 {
        @media (width >=40rem) {
            margin-inline-end: calc(var(--spacing) * 0);
        }
    }

    .sm\:mt-0 {
        @media (width >=40rem) {
            margin-top: calc(var(--spacing) * 0);
        }
    }

    .sm\:flex {
        @media (width >=40rem) {
            display: flex;
        }
    }

    .sm\:inline-block {
        @media (width >=40rem) {
            display: inline-block;
        }
    }

    .sm\:w-\[450px\] {
        @media (width >=40rem) {
            width: 450px;
        }
    }

    .sm\:w-\[500px\] {
        @media (width >=40rem) {
            width: 500px;
        }
    }

    .sm\:w-full {
        @media (width >=40rem) {
            width: 100%;
        }
    }

    .sm\:max-w-full {
        @media (width >=40rem) {
            max-width: 100%;
        }
    }

    .sm\:max-w-md {
        @media (width >=40rem) {
            max-width: var(--container-md);
        }
    }

    .sm\:max-w-none {
        @media (width >=40rem) {
            max-width: none;
        }
    }

    .sm\:max-w-sm {
        @media (width >=40rem) {
            max-width: var(--container-sm);
        }
    }

    .sm\:grid-cols-3 {
        @media (width >=40rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .sm\:flex-row {
        @media (width >=40rem) {
            flex-direction: row;
        }
    }

    .sm\:justify-end {
        @media (width >=40rem) {
            justify-content: flex-end;
        }
    }

    .sm\:space-x-0 {
        @media (width >=40rem) {
            :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));
                margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));
            }
        }
    }

    .sm\:space-x-2 {
        @media (width >=40rem) {
            :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
                margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
            }
        }
    }

    .sm\:space-x-2\.5 {
        @media (width >=40rem) {
            :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-x-reverse));
                margin-inline-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-x-reverse)));
            }
        }
    }

    .sm\:rounded-lg {
        @media (width >=40rem) {
            border-radius: var(--radius);
        }
    }

    .sm\:p-10 {
        @media (width >=40rem) {
            padding: calc(var(--spacing) * 10);
        }
    }

    .sm\:px-10 {
        @media (width >=40rem) {
            padding-inline: calc(var(--spacing) * 10);
        }
    }

    .sm\:py-0 {
        @media (width >=40rem) {
            padding-block: calc(var(--spacing) * 0);
        }
    }

    .sm\:pt-0 {
        @media (width >=40rem) {
            padding-top: calc(var(--spacing) * 0);
        }
    }

    .sm\:pr-12 {
        @media (width >=40rem) {
            padding-right: calc(var(--spacing) * 12);
        }
    }

    .sm\:pb-0 {
        @media (width >=40rem) {
            padding-bottom: calc(var(--spacing) * 0);
        }
    }

    .sm\:text-left {
        @media (width >=40rem) {
            text-align: left;
        }
    }

    .sm\:text-start {
        @media (width >=40rem) {
            text-align: start;
        }
    }

    .md\:absolute {
        @media (width >=48rem) {
            position: absolute;
        }
    }

    .md\:sticky {
        @media (width >=48rem) {
            position: sticky;
        }
    }

    .md\:order-1 {
        @media (width >=48rem) {
            order: 1;
        }
    }

    .md\:order-2 {
        @media (width >=48rem) {
            order: 2;
        }
    }

    .md\:my-8 {
        @media (width >=48rem) {
            margin-block: calc(var(--spacing) * 8);
        }
    }

    .md\:block {
        @media (width >=48rem) {
            display: block;
        }
    }

    .md\:flex {
        @media (width >=48rem) {
            display: flex;
        }
    }

    .md\:grid {
        @media (width >=48rem) {
            display: grid;
        }
    }

    .md\:hidden {
        @media (width >=48rem) {
            display: none;
        }
    }

    .md\:inline {
        @media (width >=48rem) {
            display: inline;
        }
    }

    .md\:inline-flex {
        @media (width >=48rem) {
            display: inline-flex;
        }
    }

    .md\:h-16 {
        @media (width >=48rem) {
            height: calc(var(--spacing) * 16);
        }
    }

    .md\:w-40 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 40);
        }
    }

    .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
        @media (width >=48rem) {
            width: var(--radix-navigation-menu-viewport-width);
        }
    }

    .md\:w-auto {
        @media (width >=48rem) {
            width: auto;
        }
    }

    .md\:grid-cols-\[220px_minmax\(0\,1fr\)\] {
        @media (width >=48rem) {
            grid-template-columns: 220px minmax(0, 1fr);
        }
    }

    .md\:flex-row {
        @media (width >=48rem) {
            flex-direction: row;
        }
    }

    .md\:flex-nowrap {
        @media (width >=48rem) {
            flex-wrap: nowrap;
        }
    }

    .md\:items-center {
        @media (width >=48rem) {
            align-items: center;
        }
    }

    .md\:justify-between {
        @media (width >=48rem) {
            justify-content: space-between;
        }
    }

    .md\:gap-4 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 4);
        }
    }

    .md\:gap-10 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 10);
        }
    }

    .md\:py-0 {
        @media (width >=48rem) {
            padding-block: calc(var(--spacing) * 0);
        }
    }

    .md\:py-10 {
        @media (width >=48rem) {
            padding-block: calc(var(--spacing) * 10);
        }
    }

    .md\:text-left {
        @media (width >=48rem) {
            text-align: left;
        }
    }

    .md\:text-4xl {
        @media (width >=48rem) {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
    }

    .lg\:fixed {
        @media (width >=64rem) {
            position: fixed;
        }
    }

    .lg\:start-\(--sidebar-width\) {
        @media (width >=64rem) {
            inset-inline-start: var(--sidebar-width);
        }
    }

    .lg\:start-\[calc\(0\.6rem\+var\(--sidebar-collapsed-width\)\)\] {
        @media (width >=64rem) {
            inset-inline-start: calc(0.6rem + var(--sidebar-collapsed-width));
        }
    }

    .lg\:start-auto {
        @media (width >=64rem) {
            inset-inline-start: auto;
        }
    }

    .lg\:top-\(--header-height\) {
        @media (width >=64rem) {
            top: var(--header-height);
        }
    }

    .lg\:top-0 {
        @media (width >=64rem) {
            top: calc(var(--spacing) * 0);
        }
    }

    .lg\:top-\[15\%\] {
        @media (width >=64rem) {
            top: 15%;
        }
    }

    .lg\:top-\[80px\] {
        @media (width >=64rem) {
            top: 80px;
        }
    }

    .lg\:right-auto {
        @media (width >=64rem) {
            right: auto;
        }
    }

    .lg\:bottom-0 {
        @media (width >=64rem) {
            bottom: calc(var(--spacing) * 0);
        }
    }

    .lg\:z-20 {
        @media (width >=64rem) {
            z-index: 20;
        }
    }

    .lg\:m-5 {
        @media (width >=64rem) {
            margin: calc(var(--spacing) * 5);
        }
    }

    .lg\:mx-0 {
        @media (width >=64rem) {
            margin-inline: calc(var(--spacing) * 0);
        }
    }

    .lg\:mx-3 {
        @media (width >=64rem) {
            margin-inline: calc(var(--spacing) * 3);
        }
    }

    .lg\:my-5 {
        @media (width >=64rem) {
            margin-block: calc(var(--spacing) * 5);
        }
    }

    .lg\:my-7\.5 {
        @media (width >=64rem) {
            margin-block: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:ms-\(--sidebar-width\) {
        @media (width >=64rem) {
            margin-inline-start: var(--sidebar-width);
        }
    }

    .lg\:ms-0 {
        @media (width >=64rem) {
            margin-inline-start: calc(var(--spacing) * 0);
        }
    }

    .lg\:ms-4 {
        @media (width >=64rem) {
            margin-inline-start: calc(var(--spacing) * 4);
        }
    }

    .lg\:mt-\(--navbar-height\) {
        @media (width >=64rem) {
            margin-top: var(--navbar-height);
        }
    }

    .lg\:mt-0 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 0);
        }
    }

    .lg\:mt-5 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 5);
        }
    }

    .lg\:mt-\[15px\] {
        @media (width >=64rem) {
            margin-top: 15px;
        }
    }

    .lg\:mt-\[calc\(var\(--header-height\)\+var\(--content-header-height\)\)\] {
        @media (width >=64rem) {
            margin-top: calc(var(--header-height) + var(--content-header-height));
        }
    }

    .lg\:mb-0 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 0);
        }
    }

    .lg\:mb-4 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 4);
        }
    }

    .lg\:mb-5 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 5);
        }
    }

    .lg\:mb-6 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 6);
        }
    }

    .lg\:mb-7 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 7);
        }
    }

    .lg\:mb-7\.5 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:mb-8 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 8);
        }
    }

    .lg\:mb-10 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 10);
        }
    }

    .lg\:ml-4 {
        @media (width >=64rem) {
            margin-left: calc(var(--spacing) * 4);
        }
    }

    .lg\:block {
        @media (width >=64rem) {
            display: block;
        }
    }

    .lg\:flex {
        @media (width >=64rem) {
            display: flex;
        }
    }

    .lg\:hidden {
        @media (width >=64rem) {
            display: none;
        }
    }

    .lg\:inline {
        @media (width >=64rem) {
            display: inline;
        }
    }

    .lg\:inline-flex {
        @media (width >=64rem) {
            display: inline-flex;
        }
    }

    .lg\:h-\(--header-height\) {
        @media (width >=64rem) {
            height: var(--header-height);
        }
    }

    .lg\:h-\(--sidebar-header-height\) {
        @media (width >=64rem) {
            height: var(--sidebar-header-height);
        }
    }

    .lg\:h-\[calc\(100vh-2em\)\] {
        @media (width >=64rem) {
            height: calc(100vh - 2em);
        }
    }

    .lg\:h-\[calc\(100vh-4rem\)\] {
        @media (width >=64rem) {
            height: calc(100vh - 4rem);
        }
    }

    .lg\:h-\[calc\(100vh-5\.5rem\)\] {
        @media (width >=64rem) {
            height: calc(100vh - 5.5rem);
        }
    }

    .lg\:h-\[calc\(100vh-12rem\)\] {
        @media (width >=64rem) {
            height: calc(100vh - 12rem);
        }
    }

    .lg\:h-\[var\(--header-height\)\] {
        @media (width >=64rem) {
            height: var(--header-height);
        }
    }

    .lg\:max-h-\[calc\(100dvh-70px\)\)\] {
        @media (width >=64rem) {
            max-height: calc(100dvh - 70px);
        }
    }

    .lg\:max-h-\[calc\(100vh-6rem\)\] {
        @media (width >=64rem) {
            max-height: calc(100vh - 6rem);
        }
    }

    .lg\:w-\(--sidebar-collapsed-width\) {
        @media (width >=64rem) {
            width: var(--sidebar-collapsed-width);
        }
    }

    .lg\:w-\(--sidebar-width\) {
        @media (width >=64rem) {
            width: var(--sidebar-width);
        }
    }

    .lg\:w-40 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 40);
        }
    }

    .lg\:w-48 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 48);
        }
    }

    .lg\:w-50 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 50);
        }
    }

    .lg\:w-60 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 60);
        }
    }

    .lg\:w-65 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 65);
        }
    }

    .lg\:w-80 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 80);
        }
    }

    .lg\:w-\[225px\] {
        @media (width >=64rem) {
            width: 225px;
        }
    }

    .lg\:w-\[240px\] {
        @media (width >=64rem) {
            width: 240px;
        }
    }

    .lg\:w-\[250px\] {
        @media (width >=64rem) {
            width: 250px;
        }
    }

    .lg\:w-\[260px\] {
        @media (width >=64rem) {
            width: 260px;
        }
    }

    .lg\:w-\[400px\] {
        @media (width >=64rem) {
            width: 400px;
        }
    }

    .lg\:w-\[550px\] {
        @media (width >=64rem) {
            width: 550px;
        }
    }

    .lg\:w-\[670px\] {
        @media (width >=64rem) {
            width: 670px;
        }
    }

    .lg\:w-\[875px\] {
        @media (width >=64rem) {
            width: 875px;
        }
    }

    .lg\:w-\[1200px\] {
        @media (width >=64rem) {
            width: 1200px;
        }
    }

    .lg\:max-w-\[220px\] {
        @media (width >=64rem) {
            max-width: 220px;
        }
    }

    .lg\:max-w-\[600px\] {
        @media (width >=64rem) {
            max-width: 600px;
        }
    }

    .lg\:max-w-\[670px\] {
        @media (width >=64rem) {
            max-width: 670px;
        }
    }

    .lg\:max-w-\[700px\] {
        @media (width >=64rem) {
            max-width: 700px;
        }
    }

    .lg\:max-w-\[900px\] {
        @media (width >=64rem) {
            max-width: 900px;
        }
    }

    .lg\:max-w-\[1240px\] {
        @media (width >=64rem) {
            max-width: 1240px;
        }
    }

    .lg\:min-w-24 {
        @media (width >=64rem) {
            min-width: calc(var(--spacing) * 24);
        }
    }

    .lg\:grow {
        @media (width >=64rem) {
            flex-grow: 1;
        }
    }

    .lg\:grow-0 {
        @media (width >=64rem) {
            flex-grow: 0;
        }
    }

    .lg\:translate-y-0 {
        @media (width >=64rem) {
            --tw-translate-y: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .lg\:grid-cols-2 {
        @media (width >=64rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-5 {
        @media (width >=64rem) {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-\[240px_minmax\(0\,1fr\)\] {
        @media (width >=64rem) {
            grid-template-columns: 240px minmax(0, 1fr);
        }
    }

    .lg\:flex-row {
        @media (width >=64rem) {
            flex-direction: row;
        }
    }

    .lg\:flex-wrap {
        @media (width >=64rem) {
            flex-wrap: wrap;
        }
    }

    .lg\:items-center {
        @media (width >=64rem) {
            align-items: center;
        }
    }

    .lg\:items-end {
        @media (width >=64rem) {
            align-items: flex-end;
        }
    }

    .lg\:items-stretch {
        @media (width >=64rem) {
            align-items: stretch;
        }
    }

    .lg\:justify-between {
        @media (width >=64rem) {
            justify-content: space-between;
        }
    }

    .lg\:justify-center {
        @media (width >=64rem) {
            justify-content: center;
        }
    }

    .lg\:gap-2 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 2);
        }
    }

    .lg\:gap-2\.5 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 2.5);
        }
    }

    .lg\:gap-3\.5 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 3.5);
        }
    }

    .lg\:gap-4 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 4);
        }
    }

    .lg\:gap-4\.5 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 4.5);
        }
    }

    .lg\:gap-5 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 5);
        }
    }

    .lg\:gap-6 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 6);
        }
    }

    .lg\:gap-7\.5 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:gap-10 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 10);
        }
    }

    .lg\:gap-11 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 11);
        }
    }

    .lg\:gap-12 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 12);
        }
    }

    .lg\:gap-14 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 14);
        }
    }

    .lg\:gap-20 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 20);
        }
    }

    .lg\:overflow-hidden {
        @media (width >=64rem) {
            overflow: hidden;
        }
    }

    .lg\:overflow-visible {
        @media (width >=64rem) {
            overflow: visible;
        }
    }

    .lg\:overflow-y-auto {
        @media (width >=64rem) {
            overflow-y: auto;
        }
    }

    .lg\:rounded-none {
        @media (width >=64rem) {
            border-radius: 0;
        }
    }

    .lg\:rounded-s-xl {
        @media (width >=64rem) {
            border-start-start-radius: calc(var(--radius) + 4px);
            border-end-start-radius: calc(var(--radius) + 4px);
        }
    }

    .lg\:rounded-e-xl {
        @media (width >=64rem) {
            border-start-end-radius: calc(var(--radius) + 4px);
            border-end-end-radius: calc(var(--radius) + 4px);
        }
    }

    .lg\:rounded-t-none {
        @media (width >=64rem) {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
    }

    .lg\:rounded-l-none {
        @media (width >=64rem) {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    .lg\:rounded-l-xl {
        @media (width >=64rem) {
            border-top-left-radius: calc(var(--radius) + 4px);
            border-bottom-left-radius: calc(var(--radius) + 4px);
        }
    }

    .lg\:rounded-tl-xl {
        @media (width >=64rem) {
            border-top-left-radius: calc(var(--radius) + 4px);
        }
    }

    .lg\:rounded-r-none {
        @media (width >=64rem) {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    .lg\:border-0 {
        @media (width >=64rem) {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }
    }

    .lg\:border-s {
        @media (width >=64rem) {
            border-inline-start-style: var(--tw-border-style);
            border-inline-start-width: 1px;
        }
    }

    .lg\:border-e {
        @media (width >=64rem) {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 1px;
        }
    }

    .lg\:border-t {
        @media (width >=64rem) {
            border-top-style: var(--tw-border-style);
            border-top-width: 1px;
        }
    }

    .lg\:border-r {
        @media (width >=64rem) {
            border-right-style: var(--tw-border-style);
            border-right-width: 1px;
        }
    }

    .lg\:border-border {
        @media (width >=64rem) {
            border-color: var(--border);
        }
    }

    .lg\:border-s-border {
        @media (width >=64rem) {
            border-inline-start-color: var(--border);
        }
    }

    .lg\:border-e-border {
        @media (width >=64rem) {
            border-inline-end-color: var(--border);
        }
    }

    .lg\:border-t-border {
        @media (width >=64rem) {
            border-top-color: var(--border);
        }
    }

    .lg\:border-r-border {
        @media (width >=64rem) {
            border-right-color: var(--border);
        }
    }

    .lg\:bg-transparent {
        @media (width >=64rem) {
            background-color: transparent;
        }
    }

    .lg\:p-0 {
        @media (width >=64rem) {
            padding: calc(var(--spacing) * 0);
        }
    }

    .lg\:p-7\.5 {
        @media (width >=64rem) {
            padding: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:px-0 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 0);
        }
    }

    .lg\:px-6 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 6);
        }
    }

    .lg\:px-7\.5 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:py-0 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 0);
        }
    }

    .lg\:py-3\.5 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 3.5);
        }
    }

    .lg\:py-4 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 4);
        }
    }

    .lg\:py-5 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 5);
        }
    }

    .lg\:py-6 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 6);
        }
    }

    .lg\:py-7\.5 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:py-8 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 8);
        }
    }

    .lg\:py-10 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 10);
        }
    }

    .lg\:py-12 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 12);
        }
    }

    .lg\:ps-\(--sidebar-width\) {
        @media (width >=64rem) {
            padding-inline-start: var(--sidebar-width);
        }
    }

    .lg\:ps-0 {
        @media (width >=64rem) {
            padding-inline-start: calc(var(--spacing) * 0);
        }
    }

    .lg\:ps-1 {
        @media (width >=64rem) {
            padding-inline-start: calc(var(--spacing) * 1);
        }
    }

    .lg\:ps-4 {
        @media (width >=64rem) {
            padding-inline-start: calc(var(--spacing) * 4);
        }
    }

    .lg\:ps-5 {
        @media (width >=64rem) {
            padding-inline-start: calc(var(--spacing) * 5);
        }
    }

    .lg\:ps-\[calc\(0\.6rem\+var\(--sidebar-collapsed-width\)\)\] {
        @media (width >=64rem) {
            padding-inline-start: calc(0.6rem + var(--sidebar-collapsed-width));
        }
    }

    .lg\:pe-0 {
        @media (width >=64rem) {
            padding-inline-end: calc(var(--spacing) * 0);
        }
    }

    .lg\:pe-3 {
        @media (width >=64rem) {
            padding-inline-end: calc(var(--spacing) * 3);
        }
    }

    .lg\:pt-\(--header-height\) {
        @media (width >=64rem) {
            padding-top: var(--header-height);
        }
    }

    .lg\:pt-0 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 0);
        }
    }

    .lg\:pt-5 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 5);
        }
    }

    .lg\:pt-9 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 9);
        }
    }

    .lg\:pt-10 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 10);
        }
    }

    .lg\:pt-\[calc\(var\(--header-height\)\+var\(--toolbar-height\)\)\] {
        @media (width >=64rem) {
            padding-top: calc(var(--header-height) + var(--toolbar-height));
        }
    }

    .lg\:pr-12\.5 {
        @media (width >=64rem) {
            padding-right: calc(var(--spacing) * 12.5);
        }
    }

    .lg\:pb-0 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 0);
        }
    }

    .lg\:pb-1 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 1);
        }
    }

    .lg\:pb-4 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 4);
        }
    }

    .lg\:pb-5 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 5);
        }
    }

    .lg\:pb-7\.5 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:pb-10 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 10);
        }
    }

    .lg\:text-end {
        @media (width >=64rem) {
            text-align: end;
        }
    }

    .lg\:text-sm {
        @media (width >=64rem) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .lg\:leading-\[1\.1\] {
        @media (width >=64rem) {
            --tw-leading: 1.1;
            line-height: 1.1;
        }
    }

    .lg\:transition-all {
        @media (width >=64rem) {
            transition-property: all;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
        }
    }

    .lg\:duration-300 {
        @media (width >=64rem) {
            --tw-duration: 300ms;
            transition-duration: 300ms;
        }
    }

    .lg\:\[--header-height-default\:80px\] {
        @media (width >=64rem) {
            --header-height-default: 80px;
        }
    }

    .lg\:\[--header-height\:100px\] {
        @media (width >=64rem) {
            --header-height: 100px;
        }
    }

    .lg\:\[--kt-drawer-enable\:false\] {
        @media (width >=64rem) {
            --kt-drawer-enable: false;
        }
    }

    .lg\:\[--kt-reparent-mode\:prepend\] {
        @media (width >=64rem) {
            --kt-reparent-mode: prepend;
        }
    }

    .lg\:\[--kt-reparent-target\:\#headerContainer\] {
        @media (width >=64rem) {
            --kt-reparent-target: #headerContainer;
        }
    }

    .lg\:\[--kt-reparent-target\:\#headerMenuWrapper\] {
        @media (width >=64rem) {
            --kt-reparent-target: #headerMenuWrapper;
        }
    }

    .lg\:\[--kt-reparent-target\:\#megaMenuContainer\] {
        @media (width >=64rem) {
            --kt-reparent-target: #megaMenuContainer;
        }
    }

    .lg\:\[--kt-reparent-target\:\#megaMenuWrapper\] {
        @media (width >=64rem) {
            --kt-reparent-target: #megaMenuWrapper;
        }
    }

    .lg\:\[--kt-scrollbar-width\:auto\] {
        @media (width >=64rem) {
            --kt-scrollbar-width: auto;
        }
    }

    .lg\:\[--scrollbar-width\:auto\] {
        @media (width >=64rem) {
            --scrollbar-width: auto;
        }
    }

    .lg\:\[scrollbar-width\:auto\] {
        @media (width >=64rem) {
            scrollbar-width: auto;
        }
    }

    .lg\:group-hover\:flex {
        @media (width >=64rem) {
            &:is(:where(.group):hover *) {
                @media (hover: hover) {
                    display: flex;
                }
            }
        }
    }

    .lg\:in-data-\[sidebar-collapsed\]\:ms-\(--sidebar-width-collapsed\) {
        @media (width >=64rem) {
            :where(*[data-sidebar-collapsed]) & {
                margin-inline-start: var(--sidebar-width-collapsed);
            }
        }
    }

    .lg\:in-data-\[sidebar-collapsed\]\:hidden\! {
        @media (width >=64rem) {
            :where(*[data-sidebar-collapsed]) & {
                display: none !important;
            }
        }
    }

    .lg\:in-data-\[sidebar-open\=false\]\:start-\[calc\(var\(--sidebar-collapsed-width\)\)\] {
        @media (width >=64rem) {
            :where(*[data-sidebar-open="false"]) & {
                inset-inline-start: calc(var(--sidebar-collapsed-width));
            }
        }
    }

    .lg\:in-data-\[sidebar-open\=false\]\:ps-\(--sidebar-collapsed-width\) {
        @media (width >=64rem) {
            :where(*[data-sidebar-open="false"]) & {
                padding-inline-start: var(--sidebar-collapsed-width);
            }
        }
    }

    .lg\:in-data-\[sidebar-open\=false\]\:ps-0 {
        @media (width >=64rem) {
            :where(*[data-sidebar-open="false"]) & {
                padding-inline-start: calc(var(--spacing) * 0);
            }
        }
    }

    .lg\:in-data-\[sidebar-open\=true\]\:start-\[calc\(var\(--sidebar-width\)\+0\.7rem\)\] {
        @media (width >=64rem) {
            :where(*[data-sidebar-open="true"]) & {
                inset-inline-start: calc(var(--sidebar-width) + 0.7rem);
            }
        }
    }

    .lg\:in-data-\[sidebar-open\=true\]\:ps-\[calc\(var\(--sidebar-width\)\+0\.6rem\)\] {
        @media (width >=64rem) {
            :where(*[data-sidebar-open="true"]) & {
                padding-inline-start: calc(var(--sidebar-width) + 0.6rem);
            }
        }
    }

    .xl\:block {
        @media (width >=80rem) {
            display: block;
        }
    }

    .xl\:flex {
        @media (width >=80rem) {
            display: flex;
        }
    }

    .xl\:grid {
        @media (width >=80rem) {
            display: grid;
        }
    }

    .xl\:grid-cols-3 {
        @media (width >=80rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .xl\:grid-cols-\[1fr_250px\] {
        @media (width >=80rem) {
            grid-template-columns: 1fr 250px;
        }
    }

    .xl\:gap-6 {
        @media (width >=80rem) {
            gap: calc(var(--spacing) * 6);
        }
    }

    .\32 xl\:-ms-\[60px\] {
        @media (width >=96rem) {
            margin-inline-start: calc(60px * -1);
        }
    }

    .\32 xl\:-ml-\[60px\] {
        @media (width >=96rem) {
            margin-left: calc(60px * -1);
        }
    }

    .ltr\:rotate-180 {
        &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
            rotate: 180deg;
        }
    }

    .rtl\:-start-\[5px\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-start: calc(5px * -1);
        }
    }

    .rtl\:start-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-start: calc(var(--spacing) * 0);
        }
    }

    .rtl\:right-3 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            right: calc(var(--spacing) * 3);
        }
    }

    .rtl\:left-auto {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            left: auto;
        }
    }

    .rtl\:mr-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            margin-right: calc(var(--spacing) * 0);
        }
    }

    .rtl\:ml-2 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            margin-left: calc(var(--spacing) * 2);
        }
    }

    .rtl\:ml-4 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            margin-left: calc(var(--spacing) * 4);
        }
    }

    .rtl\:-translate-x-1\/2 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .rtl\:translate-x-2\/4 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: calc(2 / 4 * 100%);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .rtl\:translate-x-full {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: 100%;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .rtl\:rotate-180 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: 180deg;
        }
    }

    .rtl\:transform {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
        }
    }

    .rtl\:border-r-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            border-right-style: var(--tw-border-style);
            border-right-width: 0px;
        }
    }

    .rtl\:border-r-4 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            border-right-style: var(--tw-border-style);
            border-right-width: 4px;
        }
    }

    .rtl\:border-l {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            border-left-style: var(--tw-border-style);
            border-left-width: 1px;
        }
    }

    .rtl\:border-l-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            border-left-style: var(--tw-border-style);
            border-left-width: 0px;
        }
    }

    .rtl\:pr-6 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            padding-right: calc(var(--spacing) * 6);
        }
    }

    .rtl\:pr-10 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            padding-right: calc(var(--spacing) * 10);
        }
    }

    .rtl\:pl-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            padding-left: calc(var(--spacing) * 0);
        }
    }

    .rtl\:pl-4 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            padding-left: calc(var(--spacing) * 4);
        }
    }

    .rtl\:text-right {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            text-align: right;
        }
    }

    .rtl\:peer-data-\[state\=unchecked\]\:-translate-x-full {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            &:is(:where(.peer)[data-state="unchecked"] ~ *) {
                --tw-translate-x: -100%;
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .rtl\:before\:translate-x-1\/2 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            &::before {
                content: var(--tw-content);
                --tw-translate-x: calc(1 / 2 * 100%);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .rtl\:\*\:after\:translate-x-1\/2 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            :is(& > *) {
                &::after {
                    content: var(--tw-content);
                    --tw-translate-x: calc(1 / 2 * 100%);
                    translate: var(--tw-translate-x) var(--tw-translate-y);
                }
            }
        }
    }

    .rtl\:data-\[state\=checked\]\:-translate-x-\[calc\(100\%-2px\)\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            &[data-state="checked"] {
                --tw-translate-x: calc(calc(100% - 2px) * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .rtl\:data-\[state\=unchecked\]\:-translate-x-\[2px\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            &[data-state="unchecked"] {
                --tw-translate-x: calc(2px * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .dark\:block {
        &:is(.dark *) {
            display: block;
        }
    }

    .dark\:hidden {
        &:is(.dark *) {
            display: none;
        }
    }

    .dark\:inline-block {
        &:is(.dark *) {
            display: inline-block;
        }
    }

    .dark\:scale-0 {
        &:is(.dark *) {
            --tw-scale-x: 0%;
            --tw-scale-y: 0%;
            --tw-scale-z: 0%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }

    .dark\:scale-100 {
        &:is(.dark *) {
            --tw-scale-x: 100%;
            --tw-scale-y: 100%;
            --tw-scale-z: 100%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }

    .dark\:-rotate-90 {
        &:is(.dark *) {
            rotate: calc(90deg * -1);
        }
    }

    .dark\:rotate-0 {
        &:is(.dark *) {
            rotate: 0deg;
        }
    }

    .dark\:border {
        &:is(.dark *) {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }
    }

    .dark\:border-\[var\(--color-destructive-alpha\,var\(--color-red-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-destructive-alpha, var(--color-red-900));
        }
    }

    .dark\:border-\[var\(--color-destructive-soft\,var\(--color-red-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-destructive-soft, var(--color-red-900));
        }
    }

    .dark\:border-\[var\(--color-info-alpha\,var\(--color-violet-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-info-alpha, var(--color-violet-900));
        }
    }

    .dark\:border-\[var\(--color-info-soft\,var\(--color-violet-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-info-soft, var(--color-violet-900));
        }
    }

    .dark\:border-\[var\(--color-primary-alpha\,var\(--color-blue-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-primary-alpha, var(--color-blue-900));
        }
    }

    .dark\:border-\[var\(--color-primary-soft\,var\(--color-blue-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-primary-soft, var(--color-blue-900));
        }
    }

    .dark\:border-\[var\(--color-success-alpha\,var\(--color-green-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-success-alpha, var(--color-green-900));
        }
    }

    .dark\:border-\[var\(--color-success-soft\,var\(--color-green-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-success-soft, var(--color-green-900));
        }
    }

    .dark\:border-\[var\(--color-warning-alpha\,var\(--color-yellow-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-warning-alpha, var(--color-yellow-900));
        }
    }

    .dark\:border-\[var\(--color-warning-soft\,var\(--color-yellow-900\)\)\] {
        &:is(.dark *) {
            border-color: var(--color-warning-soft, var(--color-yellow-900));
        }
    }

    .dark\:border-border {
        &:is(.dark *) {
            border-color: var(--border);
        }
    }

    .dark\:border-gray-300 {
        &:is(.dark *) {
            border-color: var(--color-gray-300);
        }
    }

    .dark\:border-green-950 {
        &:is(.dark *) {
            border-color: var(--color-green-950);
        }
    }

    .dark\:bg-\(--header-bg-dark\) {
        &:is(.dark *) {
            background-color: var(--header-bg-dark);
        }
    }

    .dark\:bg-\(--page-bg-dark\) {
        &:is(.dark *) {
            background-color: var(--page-bg-dark);
        }
    }

    .dark\:bg-\[var\(--color-destructive-soft\,var\(--color-red-950\)\)\] {
        &:is(.dark *) {
            background-color: var(--color-destructive-soft,
                    var(--color-red-950));
        }
    }

    .dark\:bg-\[var\(--color-info-soft\,var\(--color-violet-950\)\)\] {
        &:is(.dark *) {
            background-color: var(--color-info-soft, var(--color-violet-950));
        }
    }

    .dark\:bg-\[var\(--color-primary-soft\,var\(--color-blue-950\)\)\] {
        &:is(.dark *) {
            background-color: var(--color-primary-soft, var(--color-blue-950));
        }
    }

    .dark\:bg-\[var\(--color-success-soft\,var\(--color-green-950\)\)\] {
        &:is(.dark *) {
            background-color: var(--color-success-soft, var(--color-green-950));
        }
    }

    .dark\:bg-\[var\(--color-warning-soft\,var\(--color-yellow-950\)\)\] {
        &:is(.dark *) {
            background-color: var(--color-warning-soft,
                    var(--color-yellow-950));
        }
    }

    .dark\:bg-\[var\(--page-bg-dark\)\] {
        &:is(.dark *) {
            background-color: var(--page-bg-dark);
        }
    }

    .dark\:bg-background {
        &:is(.dark *) {
            background-color: var(--background);
        }
    }

    .dark\:bg-background\! {
        &:is(.dark *) {
            background-color: var(--background) !important;
        }
    }

    .dark\:bg-background\/70 {
        &:is(.dark *) {
            background-color: var(--background);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--background) 70%,
                        transparent);
            }
        }
    }

    .dark\:bg-gray-800 {
        &:is(.dark *) {
            background-color: var(--color-gray-800);
        }
    }

    .dark\:bg-input\/30 {
        &:is(.dark *) {
            background-color: var(--input);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--input) 30%,
                        transparent);
            }
        }
    }

    .dark\:bg-neutral-900 {
        &:is(.dark *) {
            background-color: var(--color-neutral-900);
        }
    }

    .dark\:bg-neutral-900\! {
        &:is(.dark *) {
            background-color: var(--color-neutral-900) !important;
        }
    }

    .dark\:bg-secondary\/50 {
        &:is(.dark *) {
            background-color: var(--secondary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--secondary) 50%,
                        transparent);
            }
        }
    }

    .dark\:bg-slate-800 {
        &:is(.dark *) {
            background-color: var(--color-slate-800);
        }
    }

    .dark\:bg-zinc-50 {
        &:is(.dark *) {
            background-color: var(--color-zinc-50);
        }
    }

    .dark\:bg-zinc-300 {
        &:is(.dark *) {
            background-color: var(--color-zinc-300);
        }
    }

    .dark\:via-emerald-900 {
        &:is(.dark *) {
            --tw-gradient-via: var(--color-emerald-900);
            --tw-gradient-via-stops:
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-via) var(--tw-gradient-via-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position);
            --tw-gradient-stops: var(--tw-gradient-via-stops);
        }
    }

    .dark\:via-sky-900 {
        &:is(.dark *) {
            --tw-gradient-via: var(--color-sky-900);
            --tw-gradient-via-stops:
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-via) var(--tw-gradient-via-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position);
            --tw-gradient-stops: var(--tw-gradient-via-stops);
        }
    }

    .dark\:text-\[var\(--color-destructive-soft\,var\(--color-red-600\)\)\] {
        &:is(.dark *) {
            color: var(--color-destructive-soft, var(--color-red-600));
        }
    }

    .dark\:text-\[var\(--color-info-soft\,var\(--color-violet-400\)\)\] {
        &:is(.dark *) {
            color: var(--color-info-soft, var(--color-violet-400));
        }
    }

    .dark\:text-\[var\(--color-primary-soft\,var\(--color-blue-600\)\)\] {
        &:is(.dark *) {
            color: var(--color-primary-soft, var(--color-blue-600));
        }
    }

    .dark\:text-\[var\(--color-success-soft\,var\(--color-green-600\)\)\] {
        &:is(.dark *) {
            color: var(--color-success-soft, var(--color-green-600));
        }
    }

    .dark\:text-\[var\(--color-warning-soft\,var\(--color-yellow-600\)\)\] {
        &:is(.dark *) {
            color: var(--color-warning-soft, var(--color-yellow-600));
        }
    }

    .dark\:text-black {
        &:is(.dark *) {
            color: var(--color-black);
        }
    }

    .dark\:text-gray-100 {
        &:is(.dark *) {
            color: var(--color-gray-100);
        }
    }

    .dark\:text-gray-200 {
        &:is(.dark *) {
            color: var(--color-gray-200);
        }
    }

    .dark\:text-gray-300 {
        &:is(.dark *) {
            color: var(--color-gray-300);
        }
    }

    .dark\:text-slate-100 {
        &:is(.dark *) {
            color: var(--color-slate-100);
        }
    }

    .dark\:text-slate-300 {
        &:is(.dark *) {
            color: var(--color-slate-300);
        }
    }

    .dark\:text-white {
        &:is(.dark *) {
            color: var(--color-white);
        }
    }

    .dark\:text-zinc-950 {
        &:is(.dark *) {
            color: var(--color-zinc-950);
        }
    }

    .dark\:ring-ring\/20 {
        &:is(.dark *) {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 20%,
                        transparent);
            }
        }
    }

    .dark\:outline-ring\/40 {
        &:is(.dark *) {
            outline-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                outline-color: color-mix(in oklab,
                        var(--ring) 40%,
                        transparent);
            }
        }
    }

    .dark\:\[--base-color\:var\(--color-zinc-600\)\] {
        &:is(.dark *) {
            --base-color: var(--color-zinc-600);
        }
    }

    .dark\:\[--shimmer-color\:var\(--color-white\)\] {
        &:is(.dark *) {
            --shimmer-color: var(--color-white);
        }
    }

    .dark\:after\:bg-neutral-900 {
        &:is(.dark *) {
            &::after {
                content: var(--tw-content);
                background-color: var(--color-neutral-900);
            }
        }
    }

    .dark\:hover\:bg-zinc-50 {
        &:is(.dark *) {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--color-zinc-50);
                }
            }
        }
    }

    .dark\:hover\:bg-zinc-300\/90 {
        &:is(.dark *) {
            &:hover {
                @media (hover: hover) {
                    background-color: color-mix(in srgb,
                            oklch(87.1% 0.006 286.286) 90%,
                            transparent);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab,
                                var(--color-zinc-300) 90%,
                                transparent);
                    }
                }
            }
        }
    }

    .dark\:in-data-\[invalid\=true\]\:border-destructive {
        &:is(.dark *) {
            :where(*[data-invalid="true"]) & {
                border-color: var(--destructive);
            }
        }
    }

    .dark\:in-data-\[invalid\=true\]\:ring-destructive\/20 {
        &:is(.dark *) {
            :where(*[data-invalid="true"]) & {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab,
                            var(--destructive) 20%,
                            transparent);
                }
            }
        }
    }

    .dark\:aria-invalid\:border-destructive {
        &:is(.dark *) {
            &[aria-invalid="true"] {
                border-color: var(--destructive);
            }
        }
    }

    .dark\:aria-invalid\:ring-destructive\/20 {
        &:is(.dark *) {
            &[aria-invalid="true"] {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab,
                            var(--destructive) 20%,
                            transparent);
                }
            }
        }
    }

    .dark\:data-focus-within\:has-aria-invalid\:ring-destructive\/40 {
        &:is(.dark *) {
            &[data-focus-within] {
                &:has(*[aria-invalid="true"]) {
                    --tw-ring-color: var(--destructive);

                    @supports (color: color-mix(in lab, red, red)) {
                        --tw-ring-color: color-mix(in oklab,
                                var(--destructive) 40%,
                                transparent);
                    }
                }
            }
        }
    }

    .dark\:data-\[active\=true\]\:aria-invalid\:ring-destructive\/40 {
        &:is(.dark *) {
            &[data-active="true"] {
                &[aria-invalid="true"] {
                    --tw-ring-color: var(--destructive);

                    @supports (color: color-mix(in lab, red, red)) {
                        --tw-ring-color: color-mix(in oklab,
                                var(--destructive) 40%,
                                transparent);
                    }
                }
            }
        }
    }

    .dark\:data-\[state\=open\]\:bg-zinc-300\/90 {
        &:is(.dark *) {
            &[data-state="open"] {
                background-color: color-mix(in srgb,
                        oklch(87.1% 0.006 286.286) 90%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-zinc-300) 90%,
                            transparent);
                }
            }
        }
    }

    .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20 {
        &:is(.dark *) {
            &[data-variant="destructive"] {
                &:focus {
                    background-color: var(--destructive);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab,
                                var(--destructive) 20%,
                                transparent);
                    }
                }
            }
        }
    }

    .light\:hidden {
        &:not(.dark *) {
            display: none;
        }
    }

    .kt-accordion-active\:hidden {
        &[data-kt-accordion-item].active {
            display: none;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            display: none;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            display: none;
        }
    }

    .kt-accordion-active\:inline-flex {
        &[data-kt-accordion-item].active {
            display: inline-flex;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            display: inline-flex;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            display: inline-flex;
        }
    }

    .kt-accordion-selected\:bg-primary {
        [data-kt-accordion-initialized] .selected {
            background-color: var(--primary);
        }

        [data-kt-accordion-initialized] .selected & {
            background-color: var(--primary);
        }

        [data-kt-accordion-initialized] &.selected {
            background-color: var(--primary);
        }
    }

    .kt-accordion-selected\:text-muted-foreground {
        [data-kt-accordion-initialized] .selected {
            color: var(--muted-foreground);
        }

        [data-kt-accordion-initialized] .selected & {
            color: var(--muted-foreground);
        }

        [data-kt-accordion-initialized] &.selected {
            color: var(--muted-foreground);
        }
    }

    .kt-accordion-selected\:text-primary-foreground {
        [data-kt-accordion-initialized] .selected {
            color: var(--primary-foreground);
        }

        [data-kt-accordion-initialized] .selected & {
            color: var(--primary-foreground);
        }

        [data-kt-accordion-initialized] &.selected {
            color: var(--primary-foreground);
        }
    }

    .kt-dropdown-open\:bg-background {
        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle]& {
            background-color: var(--background);
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle] & {
            background-color: var(--background);
        }
    }

    .kt-dropdown-open\:bg-primary\/10 {
        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle]& {
            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 10%,
                        transparent);
            }
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle] & {
            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 10%,
                        transparent);
            }
        }
    }

    .kt-dropdown-open\:bg-transparent {
        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle]& {
            background-color: transparent;
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle] & {
            background-color: transparent;
        }
    }

    .kt-image-input-empty\:border-input {
        [data-kt-image-input-initialized].empty & {
            border-color: var(--input);
        }
    }

    .kt-scrollspy-active\:font-medium {
        &[data-kt-scrollspy-anchor].active {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        [data-kt-scrollspy-anchor].active & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .kt-scrollspy-active\:text-primary {
        &[data-kt-scrollspy-anchor].active {
            color: var(--primary);
        }

        [data-kt-scrollspy-anchor].active & {
            color: var(--primary);
        }
    }

    .kt-scrollspy-active\:before\:bg-primary {
        &[data-kt-scrollspy-anchor].active {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        [data-kt-scrollspy-anchor].active & {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }
    }

    .kt-select-option-selected\:block {
        [data-kt-select-option].selected {
            display: block;
        }

        [data-kt-select-option].selected & {
            display: block;
        }
    }

    .kt-toggle-active\:rotate-180 {
        &[data-kt-toggle].active {
            rotate: 180deg;
        }

        [data-kt-toggle].active & {
            rotate: 180deg;
        }
    }

    .rtl\:kt-toggle-active\:rotate-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            &[data-kt-toggle].active {
                rotate: 0deg;
            }

            [data-kt-toggle].active & {
                rotate: 0deg;
            }
        }
    }

    .kt-menu-item-active\:rounded-lg {
        &.kt-menu-item.active {
            border-radius: var(--radius);
        }

        .kt-menu-item.active & {
            border-radius: var(--radius);
        }

        .kt-menu-item.active>.kt-menu-link & {
            border-radius: var(--radius);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            border-radius: var(--radius);
        }

        .kt-menu-item.active>.kt-menu-label & {
            border-radius: var(--radius);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            border-radius: var(--radius);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            border-radius: var(--radius);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            border-radius: var(--radius);
        }
    }

    .kt-menu-item-active\:border-none {
        &.kt-menu-item.active {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active & {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active>.kt-menu-link & {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active>.kt-menu-link.& {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active>.kt-menu-label & {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active>.kt-menu-label.& {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            --tw-border-style: none;
            border-style: none;
        }
    }

    .kt-menu-item-active\:border-border {
        &.kt-menu-item.active {
            border-color: var(--border);
        }

        .kt-menu-item.active & {
            border-color: var(--border);
        }

        .kt-menu-item.active>.kt-menu-link & {
            border-color: var(--border);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            border-color: var(--border);
        }

        .kt-menu-item.active>.kt-menu-label & {
            border-color: var(--border);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            border-color: var(--border);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            border-color: var(--border);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            border-color: var(--border);
        }
    }

    .kt-menu-item-active\:border-b-gray-400 {
        &.kt-menu-item.active {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active>.kt-menu-link & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active>.kt-menu-label & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            border-bottom-color: var(--color-gray-400);
        }
    }

    .kt-menu-item-active\:border-b-mono {
        &.kt-menu-item.active {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-link & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-label & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            border-bottom-color: var(--mono);
        }
    }

    .kt-menu-item-active\:border-b-primary {
        &.kt-menu-item.active {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-link & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-label & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            border-bottom-color: var(--primary);
        }
    }

    .kt-menu-item-active\:\!bg-background {
        &.kt-menu-item.active {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active & {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active>.kt-menu-link & {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active>.kt-menu-link.& {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active>.kt-menu-label & {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active>.kt-menu-label.& {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            background-color: var(--background) !important;
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            background-color: var(--background) !important;
        }
    }

    .kt-menu-item-active\:bg-accent\/60 {
        &.kt-menu-item.active {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active & {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active>.kt-menu-link & {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active>.kt-menu-link.& {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active>.kt-menu-label & {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active>.kt-menu-label.& {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }
    }

    .kt-menu-item-active\:bg-background {
        &.kt-menu-item.active {
            background-color: var(--background);
        }

        .kt-menu-item.active & {
            background-color: var(--background);
        }

        .kt-menu-item.active>.kt-menu-link & {
            background-color: var(--background);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            background-color: var(--background);
        }

        .kt-menu-item.active>.kt-menu-label & {
            background-color: var(--background);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            background-color: var(--background);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            background-color: var(--background);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            background-color: var(--background);
        }
    }

    .kt-menu-item-active\:bg-secondary {
        &.kt-menu-item.active {
            background-color: var(--secondary);
        }

        .kt-menu-item.active & {
            background-color: var(--secondary);
        }

        .kt-menu-item.active>.kt-menu-link & {
            background-color: var(--secondary);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            background-color: var(--secondary);
        }

        .kt-menu-item.active>.kt-menu-label & {
            background-color: var(--secondary);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            background-color: var(--secondary);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            background-color: var(--secondary);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            background-color: var(--secondary);
        }
    }

    .kt-menu-item-active\:font-medium {
        &.kt-menu-item.active {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active>.kt-menu-link & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active>.kt-menu-label & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .kt-menu-item-active\:font-semibold {
        &.kt-menu-item.active {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active>.kt-menu-link & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active>.kt-menu-label & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }
    }

    .kt-menu-item-active\:text-foreground {
        &.kt-menu-item.active {
            color: var(--foreground);
        }

        .kt-menu-item.active & {
            color: var(--foreground);
        }

        .kt-menu-item.active>.kt-menu-link & {
            color: var(--foreground);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            color: var(--foreground);
        }

        .kt-menu-item.active>.kt-menu-label & {
            color: var(--foreground);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            color: var(--foreground);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            color: var(--foreground);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            color: var(--foreground);
        }
    }

    .kt-menu-item-active\:text-mono {
        &.kt-menu-item.active {
            color: var(--mono);
        }

        .kt-menu-item.active & {
            color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-link & {
            color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-label & {
            color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            color: var(--mono);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            color: var(--mono);
        }
    }

    .kt-menu-item-active\:text-primary {
        &.kt-menu-item.active {
            color: var(--primary);
        }

        .kt-menu-item.active & {
            color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-link & {
            color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-link.& {
            color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-label & {
            color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-label.& {
            color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            color: var(--primary);
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            color: var(--primary);
        }
    }

    .kt-menu-item-active\:before\:bg-primary {
        &.kt-menu-item.active {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active & {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active>.kt-menu-link & {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active>.kt-menu-link.& {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active>.kt-menu-label & {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active>.kt-menu-label.& {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active>.kt-menu-toggle & {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }

        .kt-menu-item.active>.kt-menu-toggle.& {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }
    }

    .kt-menu-item-here\:border-border {
        &.kt-menu-item.here {
            border-color: var(--border);
        }

        .kt-menu-item.here>.kt-menu-link & {
            border-color: var(--border);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            border-color: var(--border);
        }

        .kt-menu-item.here>.kt-menu-label & {
            border-color: var(--border);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            border-color: var(--border);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            border-color: var(--border);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            border-color: var(--border);
        }
    }

    .kt-menu-item-here\:border-b-gray-400 {
        &.kt-menu-item.here {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.here>.kt-menu-link & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.here>.kt-menu-label & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            border-bottom-color: var(--color-gray-400);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            border-bottom-color: var(--color-gray-400);
        }
    }

    .kt-menu-item-here\:border-b-mono {
        &.kt-menu-item.here {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-link & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-label & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            border-bottom-color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            border-bottom-color: var(--mono);
        }
    }

    .kt-menu-item-here\:border-b-primary {
        &.kt-menu-item.here {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-link & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-label & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            border-bottom-color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            border-bottom-color: var(--primary);
        }
    }

    .kt-menu-item-here\:bg-background {
        &.kt-menu-item.here {
            background-color: var(--background);
        }

        .kt-menu-item.here>.kt-menu-link & {
            background-color: var(--background);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            background-color: var(--background);
        }

        .kt-menu-item.here>.kt-menu-label & {
            background-color: var(--background);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            background-color: var(--background);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            background-color: var(--background);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            background-color: var(--background);
        }
    }

    .kt-menu-item-here\:bg-transparent {
        &.kt-menu-item.here {
            background-color: transparent;
        }

        .kt-menu-item.here>.kt-menu-link & {
            background-color: transparent;
        }

        .kt-menu-item.here>.kt-menu-link.& {
            background-color: transparent;
        }

        .kt-menu-item.here>.kt-menu-label & {
            background-color: transparent;
        }

        .kt-menu-item.here>.kt-menu-label.& {
            background-color: transparent;
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            background-color: transparent;
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            background-color: transparent;
        }
    }

    .kt-menu-item-here\:font-medium {
        &.kt-menu-item.here {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.here>.kt-menu-link & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.here>.kt-menu-label & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .kt-menu-item-here\:font-semibold {
        &.kt-menu-item.here {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.here>.kt-menu-link & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.here>.kt-menu-label & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }
    }

    .kt-menu-item-here\:text-foreground {
        &.kt-menu-item.here {
            color: var(--foreground);
        }

        .kt-menu-item.here>.kt-menu-link & {
            color: var(--foreground);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            color: var(--foreground);
        }

        .kt-menu-item.here>.kt-menu-label & {
            color: var(--foreground);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            color: var(--foreground);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            color: var(--foreground);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            color: var(--foreground);
        }
    }

    .kt-menu-item-here\:text-mono {
        &.kt-menu-item.here {
            color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-link & {
            color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-label & {
            color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            color: var(--mono);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            color: var(--mono);
        }
    }

    .kt-menu-item-here\:text-muted-foreground {
        &.kt-menu-item.here {
            color: var(--muted-foreground);
        }

        .kt-menu-item.here>.kt-menu-link & {
            color: var(--muted-foreground);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            color: var(--muted-foreground);
        }

        .kt-menu-item.here>.kt-menu-label & {
            color: var(--muted-foreground);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            color: var(--muted-foreground);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            color: var(--muted-foreground);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            color: var(--muted-foreground);
        }
    }

    .kt-menu-item-here\:text-primary {
        &.kt-menu-item.here {
            color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-link & {
            color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-link.& {
            color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-label & {
            color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-label.& {
            color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-toggle & {
            color: var(--primary);
        }

        .kt-menu-item.here>.kt-menu-toggle.& {
            color: var(--primary);
        }
    }

    .kt-menu-item-show\:\!flex {
        &.kt-menu-item.show {
            display: flex !important;
        }

        .kt-menu-item.show>.kt-menu-link & {
            display: flex !important;
        }

        .kt-menu-item.show>.kt-menu-link.& {
            display: flex !important;
        }

        .kt-menu-item.show>.kt-menu-label & {
            display: flex !important;
        }

        .kt-menu-item.show>.kt-menu-label.& {
            display: flex !important;
        }

        .kt-menu-item.show>.kt-menu-toggle & {
            display: flex !important;
        }

        .kt-menu-item.show>.kt-menu-toggle.& {
            display: flex !important;
        }
    }

    .kt-menu-item-show\:hidden {
        &.kt-menu-item.show {
            display: none;
        }

        .kt-menu-item.show>.kt-menu-link & {
            display: none;
        }

        .kt-menu-item.show>.kt-menu-link.& {
            display: none;
        }

        .kt-menu-item.show>.kt-menu-label & {
            display: none;
        }

        .kt-menu-item.show>.kt-menu-label.& {
            display: none;
        }

        .kt-menu-item.show>.kt-menu-toggle & {
            display: none;
        }

        .kt-menu-item.show>.kt-menu-toggle.& {
            display: none;
        }
    }

    .kt-menu-item-show\:inline-flex {
        &.kt-menu-item.show {
            display: inline-flex;
        }

        .kt-menu-item.show>.kt-menu-link & {
            display: inline-flex;
        }

        .kt-menu-item.show>.kt-menu-link.& {
            display: inline-flex;
        }

        .kt-menu-item.show>.kt-menu-label & {
            display: inline-flex;
        }

        .kt-menu-item.show>.kt-menu-label.& {
            display: inline-flex;
        }

        .kt-menu-item.show>.kt-menu-toggle & {
            display: inline-flex;
        }

        .kt-menu-item.show>.kt-menu-toggle.& {
            display: inline-flex;
        }
    }

    .kt-menu-item-show\:text-foreground {
        &.kt-menu-item.show {
            color: var(--foreground);
        }

        .kt-menu-item.show>.kt-menu-link & {
            color: var(--foreground);
        }

        .kt-menu-item.show>.kt-menu-link.& {
            color: var(--foreground);
        }

        .kt-menu-item.show>.kt-menu-label & {
            color: var(--foreground);
        }

        .kt-menu-item.show>.kt-menu-label.& {
            color: var(--foreground);
        }

        .kt-menu-item.show>.kt-menu-toggle & {
            color: var(--foreground);
        }

        .kt-menu-item.show>.kt-menu-toggle.& {
            color: var(--foreground);
        }
    }

    .kt-menu-item-show\:text-mono {
        &.kt-menu-item.show {
            color: var(--mono);
        }

        .kt-menu-item.show>.kt-menu-link & {
            color: var(--mono);
        }

        .kt-menu-item.show>.kt-menu-link.& {
            color: var(--mono);
        }

        .kt-menu-item.show>.kt-menu-label & {
            color: var(--mono);
        }

        .kt-menu-item.show>.kt-menu-label.& {
            color: var(--mono);
        }

        .kt-menu-item.show>.kt-menu-toggle & {
            color: var(--mono);
        }

        .kt-menu-item.show>.kt-menu-toggle.& {
            color: var(--mono);
        }
    }

    .kt-menu-item-show\:text-primary {
        &.kt-menu-item.show {
            color: var(--primary);
        }

        .kt-menu-item.show>.kt-menu-link & {
            color: var(--primary);
        }

        .kt-menu-item.show>.kt-menu-link.& {
            color: var(--primary);
        }

        .kt-menu-item.show>.kt-menu-label & {
            color: var(--primary);
        }

        .kt-menu-item.show>.kt-menu-label.& {
            color: var(--primary);
        }

        .kt-menu-item.show>.kt-menu-toggle & {
            color: var(--primary);
        }

        .kt-menu-item.show>.kt-menu-toggle.& {
            color: var(--primary);
        }
    }

    .kt-menu-link-hover\:border-none {
        &.kt-menu-link:hover {
            --tw-border-style: none;
            border-style: none;
        }

        .kt-menu-link:hover & {
            --tw-border-style: none;
            border-style: none;
        }
    }

    .kt-menu-link-hover\:border-border {
        &.kt-menu-link:hover {
            border-color: var(--border);
        }

        .kt-menu-link:hover & {
            border-color: var(--border);
        }
    }

    .kt-menu-link-hover\:\!bg-background {
        &.kt-menu-link:hover {
            background-color: var(--background) !important;
        }

        .kt-menu-link:hover & {
            background-color: var(--background) !important;
        }
    }

    .kt-menu-link-hover\:bg-accent\/60 {
        &.kt-menu-link:hover {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }

        .kt-menu-link:hover & {
            background-color: var(--accent);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--accent) 60%,
                        transparent);
            }
        }
    }

    .kt-menu-link-hover\:bg-background {
        &.kt-menu-link:hover {
            background-color: var(--background);
        }

        .kt-menu-link:hover & {
            background-color: var(--background);
        }
    }

    .kt-menu-link-hover\:bg-secondary {
        &.kt-menu-link:hover {
            background-color: var(--secondary);
        }

        .kt-menu-link:hover & {
            background-color: var(--secondary);
        }
    }

    .kt-menu-link-hover\:\!text-primary {
        &.kt-menu-link:hover {
            color: var(--primary) !important;
        }

        .kt-menu-link:hover & {
            color: var(--primary) !important;
        }
    }

    .kt-menu-link-hover\:text-foreground {
        &.kt-menu-link:hover {
            color: var(--foreground);
        }

        .kt-menu-link:hover & {
            color: var(--foreground);
        }
    }

    .kt-menu-link-hover\:text-mono {
        &.kt-menu-link:hover {
            color: var(--mono);
        }

        .kt-menu-link:hover & {
            color: var(--mono);
        }
    }

    .kt-menu-link-hover\:text-primary {
        &.kt-menu-link:hover {
            color: var(--primary);
        }

        .kt-menu-link:hover & {
            color: var(--primary);
        }
    }

    .\[\&_\.container-fluid\]\:px-6 {
        & .container-fluid {
            padding-inline: calc(var(--spacing) * 6);
        }
    }

    .lg\:\[\&_\.container-fluid\]\:px-7\.5 {
        @media (width >=64rem) {
            & .container-fluid {
                padding-inline: calc(var(--spacing) * 7.5);
            }
        }
    }

    .lg\:\[\&_\.kt-container-fluid\]\:pe-4 {
        @media (width >=64rem) {
            & .kt-container-fluid {
                padding-inline-end: calc(var(--spacing) * 4);
            }
        }
    }

    .\[\&_\.line\:before\]\:sticky {
        & .line:before {
            position: sticky;
        }
    }

    .\[\&_\.line\:before\]\:left-2 {
        & .line:before {
            left: calc(var(--spacing) * 2);
        }
    }

    .\[\&_\.line\:before\]\:z-10 {
        & .line:before {
            z-index: 10;
        }
    }

    .\[\&_\.line\:before\]\:translate-y-\[-1px\] {
        & .line:before {
            --tw-translate-y: -1px;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .\[\&_\.line\:before\]\:pr-1 {
        & .line:before {
            padding-right: calc(var(--spacing) * 1);
        }
    }

    .\[\&_\.recharts-cartesian-axis-tick_text\]\:fill-muted-foreground {
        & .recharts-cartesian-axis-tick text {
            fill: var(--muted-foreground);
        }
    }

    .\[\&_\.recharts-cartesian-grid_line\[stroke\=\'\#ccc\'\]\]\:stroke-border\/50 {
        & .recharts-cartesian-grid line[stroke="#ccc"] {
            stroke: var(--border);

            @supports (color: color-mix(in lab, red, red)) {
                stroke: color-mix(in oklab, var(--border) 50%, transparent);
            }
        }
    }

    .\[\&_\.recharts-curve\.recharts-tooltip-cursor\]\:stroke-border {
        & .recharts-curve.recharts-tooltip-cursor {
            stroke: var(--border);
        }
    }

    .\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
        & .recharts-dot[stroke="#fff"] {
            stroke: transparent;
        }
    }

    .\[\&_\.recharts-layer\]\:outline-hidden {
        & .recharts-layer {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .\[\&_\.recharts-polar-grid_\[stroke\=\'\#ccc\'\]\]\:stroke-border {
        & .recharts-polar-grid [stroke="#ccc"] {
            stroke: var(--border);
        }
    }

    .\[\&_\.recharts-radial-bar-background-sector\]\:fill-muted {
        & .recharts-radial-bar-background-sector {
            fill: var(--muted);
        }
    }

    .\[\&_\.recharts-rectangle\.recharts-tooltip-cursor\]\:fill-muted {
        & .recharts-rectangle.recharts-tooltip-cursor {
            fill: var(--muted);
        }
    }

    .\[\&_\.recharts-reference-line_\[stroke\=\'\#ccc\'\]\]\:stroke-border {
        & .recharts-reference-line [stroke="#ccc"] {
            stroke: var(--border);
        }
    }

    .\[\&_\.recharts-sector\]\:outline-hidden {
        & .recharts-sector {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
        & .recharts-sector[stroke="#fff"] {
            stroke: transparent;
        }
    }

    .\[\&_\.recharts-surface\]\:outline-hidden {
        & .recharts-surface {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .\[\&_\>\:first-child\]\:relative {
        &> :first-child {
            position: relative;
        }
    }

    .\[\&_\>\:last-child\]\:border-e-0 {
        &> :last-child {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 0px;
        }
    }

    .\[\&_\[cmdk-group-heading\]\]\:px-2 {
        & [cmdk-group-heading] {
            padding-inline: calc(var(--spacing) * 2);
        }
    }

    .\[\&_\[cmdk-group-heading\]\]\:py-1\.5 {
        & [cmdk-group-heading] {
            padding-block: calc(var(--spacing) * 1.5);
        }
    }

    .\[\&_\[cmdk-group-heading\]\]\:text-xs {
        & [cmdk-group-heading] {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }
    }

    .\[\&_\[cmdk-group-heading\]\]\:font-medium {
        & [cmdk-group-heading] {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }
    }

    .\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground {
        & [cmdk-group-heading] {
            color: var(--muted-foreground);
        }
    }

    .\[\&_\[cmdk-group\]\]\:px-2 {
        & [cmdk-group] {
            padding-inline: calc(var(--spacing) * 2);
        }
    }

    .\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 {
        & [cmdk-group]:not([hidden])~[cmdk-group] {
            padding-top: calc(var(--spacing) * 0);
        }
    }

    .\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 {
        & [cmdk-input-wrapper] svg {
            height: calc(var(--spacing) * 5);
        }
    }

    .\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 {
        & [cmdk-input-wrapper] svg {
            width: calc(var(--spacing) * 5);
        }
    }

    .\[\&_\[cmdk-input\]\]\:h-12 {
        & [cmdk-input] {
            height: calc(var(--spacing) * 12);
        }
    }

    .\[\&_\[cmdk-item\]\]\:px-2 {
        & [cmdk-item] {
            padding-inline: calc(var(--spacing) * 2);
        }
    }

    .\[\&_\[cmdk-item\]\]\:py-3 {
        & [cmdk-item] {
            padding-block: calc(var(--spacing) * 3);
        }
    }

    .\[\&_\[cmdk-item\]_svg\]\:h-5 {
        & [cmdk-item] svg {
            height: calc(var(--spacing) * 5);
        }
    }

    .\[\&_\[cmdk-item\]_svg\]\:w-5 {
        & [cmdk-item] svg {
            width: calc(var(--spacing) * 5);
        }
    }

    .\[\&_\[data-header-sticky\=on\]\]\:\[--header-height\:60px\] {
        & [data-header-sticky="on"] {
            --header-height: 60px;
        }
    }

    .\[\&_\[data-slot\=\"accordion-menu-sub-indicator\"\]\]\:hidden {
        & [data-slot="accordion-menu-sub-indicator"] {
            display: none;
        }
    }

    .\[\&_\[data-slot\=accordion-menu-sub-indicator\]\]\:hidden {
        & [data-slot="accordion-menu-sub-indicator"] {
            display: none;
        }
    }

    .\[\&_\[data-slot\=alert-close\]\]\:mt-0\.5 {
        & [data-slot="alert-close"] {
            margin-top: calc(var(--spacing) * 0.5);
        }
    }

    .\[\&_\[data-slot\=alert-close\]\]\:mt-0\.25 {
        & [data-slot="alert-close"] {
            margin-top: calc(var(--spacing) * 0.25);
        }
    }

    .\[\&_\[data-slot\=alert-close\]\]\:mt-1 {
        & [data-slot="alert-close"] {
            margin-top: calc(var(--spacing) * 1);
        }
    }

    .\[\&_\[data-slot\=alert-close\]\]\:text-foreground {
        & [data-slot="alert-close"] {
            color: var(--foreground);
        }
    }

    .\[\&_\[data-slot\=alert-close\]_svg\]\:size-3\.5 {
        & [data-slot="alert-close"] svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&_\[data-slot\=alert-icon\]\]\:text-\[var\(--color-info-foreground\,var\(--color-violet-600\)\)\] {
        & [data-slot="alert-icon"] {
            color: var(--color-info-foreground, var(--color-violet-600));
        }
    }

    .\[\&_\[data-slot\=alert-icon\]\]\:text-\[var\(--color-success-foreground\,var\(--color-green-600\)\)\] {
        & [data-slot="alert-icon"] {
            color: var(--color-success-foreground, var(--color-green-600));
        }
    }

    .\[\&_\[data-slot\=alert-icon\]\]\:text-\[var\(--color-warning-foreground\,var\(--color-yellow-600\)\)\] {
        & [data-slot="alert-icon"] {
            color: var(--color-warning-foreground, var(--color-yellow-600));
        }
    }

    .\[\&_\[data-slot\=alert-icon\]\]\:text-destructive {
        & [data-slot="alert-icon"] {
            color: var(--destructive);
        }
    }

    .\[\&_\[data-slot\=alert-icon\]\]\:text-primary {
        & [data-slot="alert-icon"] {
            color: var(--primary);
        }
    }

    .\[\&_\[data-slot\=alert-title\]\]\:font-semibold {
        & [data-slot="alert-title"] {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }
    }

    .hover\:\[\&_\[data-slot\=badge\]\]\:border-input {
        &:hover {
            @media (hover: hover) {
                & [data-slot="badge"] {
                    border-color: var(--input);
                }
            }
        }
    }

    .hover\:\[\&_\[data-slot\=badge\]\]\:bg-accent-foreground\/10 {
        &:hover {
            @media (hover: hover) {
                & [data-slot="badge"] {
                    background-color: var(--accent-foreground);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab,
                                var(--accent-foreground) 10%,
                                transparent);
                    }
                }
            }
        }
    }

    .data-\[state\=open\]\:\[\&_\[data-slot\=badge\]\]\:border-input {
        &[data-state="open"] {
            & [data-slot="badge"] {
                border-color: var(--input);
            }
        }
    }

    .data-\[state\=open\]\:\[\&_\[data-slot\=badge\]\]\:bg-accent-foreground\/10 {
        &[data-state="open"] {
            & [data-slot="badge"] {
                background-color: var(--accent-foreground);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--accent-foreground) 10%,
                            transparent);
                }
            }
        }
    }

    .\[\&_\[data-slot\=button\]\+\[data-slot\=input\]\]\:rounded-s-none {
        & [data-slot="button"]+[data-slot="input"] {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .lg\:\[\&_\[data-slot\=container\]\]\:pe-2 {
        @media (width >=64rem) {
            & [data-slot="container"] {
                padding-inline-end: calc(var(--spacing) * 2);
            }
        }
    }

    .\[\&_\[data-slot\=datefield\]\]\:grow {
        & [data-slot="datefield"] {
            flex-grow: 1;
        }
    }

    .\[\&_\[data-slot\=datefield\]\+\[data-slot\=input-addon\]\]\:rounded-s-none {
        & [data-slot="datefield"]+[data-slot="input-addon"] {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .\[\&_\[data-slot\=datefield\]\+\[data-slot\=input-addon\]\]\:border-s-0 {
        & [data-slot="datefield"]+[data-slot="input-addon"] {
            border-inline-start-style: var(--tw-border-style);
            border-inline-start-width: 0px;
        }
    }

    .\[\&_\[data-slot\=dialog-close\]\]\:end-5\.5 {
        & [data-slot="dialog-close"] {
            inset-inline-end: calc(var(--spacing) * 5.5);
        }
    }

    .\[\&_\[data-slot\=dialog-close\]\]\:top-5\.5 {
        & [data-slot="dialog-close"] {
            top: calc(var(--spacing) * 5.5);
        }
    }

    .\[\&_\[data-slot\=dropdown-menu-sub-trigger-indicator\]\]\:hidden {
        & [data-slot="dropdown-menu-sub-trigger-indicator"] {
            display: none;
        }
    }

    .\[\&_\[data-slot\=input-addon\]\+\[data-slot\=input\]\]\:rounded-s-none {
        & [data-slot="input-addon"]+[data-slot="input"] {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input-addon\]\:has\(\+\[data-slot\=button\]\)\]\:rounded-e-none {
        & [data-slot="input-addon"]:has(+ [data-slot="button"]) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input-addon\]\:has\(\+\[data-slot\=datefield\]\)\]\:rounded-e-none {
        & [data-slot="input-addon"]:has(+ [data-slot="datefield"]) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input-addon\]\:has\(\+\[data-slot\=datefield\]\)\]\:border-e-0 {
        & [data-slot="input-addon"]:has(+ [data-slot="datefield"]) {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 0px;
        }
    }

    .\[\&_\[data-slot\=input-addon\]\:has\(\+\[data-slot\=input\]\)\]\:rounded-e-none {
        & [data-slot="input-addon"]:has(+ [data-slot="input"]) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input-addon\]\:has\(\+\[data-slot\=input\]\)\]\:border-e-0 {
        & [data-slot="input-addon"]:has(+ [data-slot="input"]) {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 0px;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:flex {
        & [data-slot="input"] {
            display: flex;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:h-auto {
        & [data-slot="input"] {
            height: auto;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:w-full {
        & [data-slot="input"] {
            width: 100%;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:grow {
        & [data-slot="input"] {
            flex-grow: 1;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:border-0 {
        & [data-slot="input"] {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:bg-transparent {
        & [data-slot="input"] {
            background-color: transparent;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:p-0 {
        & [data-slot="input"] {
            padding: calc(var(--spacing) * 0);
        }
    }

    .\[\&_\[data-slot\=input\]\]\:text-foreground {
        & [data-slot="input"] {
            color: var(--foreground);
        }
    }

    .\[\&_\[data-slot\=input\]\]\:shadow-none {
        & [data-slot="input"] {
            --tw-shadow: 0 0 #0000;
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .\[\&_\[data-slot\=input\]\]\:transition-colors {
        & [data-slot="input"] {
            transition-property:
                color, background-color, border-color, outline-color,
                text-decoration-color, fill, stroke, --tw-gradient-from,
                --tw-gradient-via, --tw-gradient-to;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
        }
    }

    .\[\&_\[data-slot\=input\]\]\:outline-none {
        & [data-slot="input"] {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .\[\&_\[data-slot\=input\]\]\:placeholder\:text-muted-foreground {
        & [data-slot="input"] {
            &::placeholder {
                color: var(--muted-foreground);
            }
        }
    }

    .\[\&_\[data-slot\=input\]\]\:focus-visible\:ring-0 {
        & [data-slot="input"] {
            &:focus-visible {
                --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
                box-shadow:
                    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                    var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                    var(--tw-shadow);
            }
        }
    }

    .\[\&_\[data-slot\=input\]\]\:disabled\:cursor-not-allowed {
        & [data-slot="input"] {
            &:disabled {
                cursor: not-allowed;
            }
        }
    }

    .\[\&_\[data-slot\=input\]\]\:disabled\:opacity-50 {
        & [data-slot="input"] {
            &:disabled {
                opacity: 50%;
            }
        }
    }

    .\[\&_\[data-slot\=input\]\]\:data-focus-within\:border-0 {
        & [data-slot="input"] {
            &[data-focus-within] {
                border-style: var(--tw-border-style);
                border-width: 0px;
            }
        }
    }

    .\[\&_\[data-slot\=input\]\]\:data-focus-within\:ring-0 {
        & [data-slot="input"] {
            &[data-focus-within] {
                --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
                box-shadow:
                    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                    var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                    var(--tw-shadow);
            }
        }
    }

    .\[\&_\[data-slot\=input\]\]\:data-focus-within\:ring-transparent {
        & [data-slot="input"] {
            &[data-focus-within] {
                --tw-ring-color: transparent;
            }
        }
    }

    .\[\&_\[data-slot\=datefield\]\:has\(\+\[data-slot\=input-addon\]\)\]\:\[\&_\[data-slot\=input\]\]\:rounded-e-none {
        & [data-slot="datefield"]:has(+ [data-slot="input-addon"]) {
            & [data-slot="input"] {
                border-start-end-radius: 0;
                border-end-end-radius: 0;
            }
        }
    }

    .\[\&_\[data-slot\=input-addon\]\+\[data-slot\=datefield\]\]\:\[\&_\[data-slot\=input\]\]\:rounded-s-none {
        & [data-slot="input-addon"]+[data-slot="datefield"] {
            & [data-slot="input"] {
                border-start-start-radius: 0;
                border-end-start-radius: 0;
            }
        }
    }

    .\[\&_\[data-slot\=input\]\+\[data-slot\=button\]\]\:rounded-s-none {
        & [data-slot="input"]+[data-slot="button"] {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input\]\+\[data-slot\=input-addon\]\]\:rounded-s-none {
        & [data-slot="input"]+[data-slot="input-addon"] {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input\]\+\[data-slot\=input-addon\]\]\:border-s-0 {
        & [data-slot="input"]+[data-slot="input-addon"] {
            border-inline-start-style: var(--tw-border-style);
            border-inline-start-width: 0px;
        }
    }

    .\[\&_\[data-slot\=input\]\:has\(\+\[data-slot\=button\]\)\]\:rounded-e-none {
        & [data-slot="input"]:has(+ [data-slot="button"]) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .\[\&_\[data-slot\=input\]\:has\(\+\[data-slot\=input-addon\]\)\]\:rounded-e-none {
        & [data-slot="input"]:has(+ [data-slot="input-addon"]) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .\[\&_\[data-slot\=sheet-close\]\]\:end-5 {
        & [data-slot="sheet-close"] {
            inset-inline-end: calc(var(--spacing) * 5);
        }
    }

    .\[\&_\[data-slot\=sheet-close\]\]\:top-4\.5 {
        & [data-slot="sheet-close"] {
            top: calc(var(--spacing) * 4.5);
        }
    }

    .\[\&_\[data-type\=error\]_\[data-title\]\]\:text-destructive {
        & [data-type="error"] [data-title] {
            color: var(--destructive);
        }
    }

    .\[\&_\[data-type\=error\]\>\[data-icon\]\]\:text-destructive {
        & [data-type="error"]>[data-icon] {
            color: var(--destructive);
        }
    }

    .\[\&_\[role\=tab\]\]\:rounded-full {
        & [role="tab"] {
            border-radius: calc(infinity * 1px);
        }
    }

    .\[\&_a\]\:flex {
        & a {
            display: flex;
        }
    }

    .\[\&_code\]\:bg-neutral-950\! {
        & code {
            background-color: var(--color-neutral-950) !important;
        }
    }

    .dark\:\[\&_code\]\:bg-neutral-900\! {
        &:is(.dark *) {
            & code {
                background-color: var(--color-neutral-900) !important;
            }
        }
    }

    .\[\&_code\:not\(\[data-line-numbers\]\)\]\:\!ps-4 {
        & code:not([data-line-numbers]) {
            padding-inline-start: calc(var(--spacing) * 4) !important;
        }
    }

    .\[\&_h3\.font-heading\]\:text-base {
        & h3.font-heading {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    .\[\&_h3\.font-heading\]\:font-semibold {
        & h3.font-heading {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }
    }

    .\[\&_i\]\:text-white {
        & i {
            color: var(--color-white);
        }
    }

    .hover\:\[\&_i\]\:text-black\/80 {
        &:hover {
            @media (hover: hover) {
                & i {
                    color: color-mix(in srgb, #000 80%, transparent);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab,
                                var(--color-black) 80%,
                                transparent);
                    }
                }
            }
        }
    }

    .hover\:\[\&_i\]\:text-primary {
        &:hover {
            @media (hover: hover) {
                & i {
                    color: var(--primary);
                }
            }
        }
    }

    .kt-dropdown-open\:\[\&_i\]\:text-primary {
        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle]& {
            & i {
                color: var(--primary);
            }
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle] & {
            & i {
                color: var(--primary);
            }
        }
    }

    .\[\&_border\]\:\[\&_i\]\:text-black\/80 {
        & border {
            & i {
                color: color-mix(in srgb, #000 80%, transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab,
                            var(--color-black) 80%,
                            transparent);
                }
            }
        }
    }

    .\[\&_p\]\:mb-2 {
        & p {
            margin-bottom: calc(var(--spacing) * 2);
        }
    }

    .\[\&_p\]\:leading-relaxed {
        & p {
            --tw-leading: var(--leading-relaxed);
            line-height: var(--leading-relaxed);
        }
    }

    .\[\&_pre\]\:max-h-\(--height\) {
        & pre {
            max-height: var(--height);
        }
    }

    .\[\&_pre\]\:overflow-auto {
        & pre {
            overflow: auto;
        }
    }

    .\[\&_pre\]\:\!bg-transparent {
        & pre {
            background-color: transparent !important;
        }
    }

    .\[\&_pre\]\:pt-4 {
        & pre {
            padding-top: calc(var(--spacing) * 4);
        }
    }

    .\[\&_pre\]\:font-mono {
        & pre {
            font-family: var(--font-mono);
        }
    }

    .\[\&_pre\]\:text-sm {
        & pre {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .\[\&_pre\]\:leading-relaxed {
        & pre {
            --tw-leading: var(--leading-relaxed);
            line-height: var(--leading-relaxed);
        }
    }

    .\[\&_svg\]\:pointer-events-none {
        & svg {
            pointer-events: none;
        }
    }

    .\[\&_svg\]\:invisible {
        & svg {
            visibility: hidden;
        }
    }

    .\[\&_svg\]\:-ms-px {
        & svg {
            margin-inline-start: -1px;
        }
    }

    .\[\&_svg\]\:size-2 {
        & svg {
            width: calc(var(--spacing) * 2);
            height: calc(var(--spacing) * 2);
        }
    }

    .\[\&_svg\]\:size-2\.5 {
        & svg {
            width: calc(var(--spacing) * 2.5);
            height: calc(var(--spacing) * 2.5);
        }
    }

    .\[\&_svg\]\:size-3 {
        & svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }
    }

    .\[\&_svg\]\:size-3\.5 {
        & svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&_svg\]\:size-4 {
        & svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\&_svg\]\:size-5 {
        & svg {
            width: calc(var(--spacing) * 5);
            height: calc(var(--spacing) * 5);
        }
    }

    .\[\&_svg\]\:h-3\.5 {
        & svg {
            height: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&_svg\]\:w-3\.5 {
        & svg {
            width: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&_svg\]\:shrink-0 {
        & svg {
            flex-shrink: 0;
        }
    }

    .\[\&_svg\]\:text-muted-foreground {
        & svg {
            color: var(--muted-foreground);
        }
    }

    .\[\&_svg\]\:text-primary {
        & svg {
            color: var(--primary);
        }
    }

    .\[\&_svg\]\:text-secondary-foreground\/60 {
        & svg {
            color: var(--secondary-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--secondary-foreground) 60%,
                        transparent);
            }
        }
    }

    .\[\&_svg\]\:opacity-60 {
        & svg {
            opacity: 60%;
        }
    }

    .\[\&_svg\]\:transition-colors {
        & svg {
            transition-property:
                color, background-color, border-color, outline-color,
                text-decoration-color, fill, stroke, --tw-gradient-from,
                --tw-gradient-via, --tw-gradient-to;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
        }
    }

    .\[\&_svg\]\:hover\:text-foreground {
        & svg {
            &:hover {
                @media (hover: hover) {
                    color: var(--foreground);
                }
            }
        }
    }

    .hover\:\[\&_svg\]\:text-primary {
        &:hover {
            @media (hover: hover) {
                & svg {
                    color: var(--primary);
                }
            }
        }
    }

    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {
        & svg:not([class*="size-"]) {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground {
        & svg:not([class*="text-"]) {
            color: var(--muted-foreground);
        }
    }

    .\[\&_svg\:not\(\[class\*\=size-\]\)\]\:size-3\.5 {
        & svg:not([class*="size-"]) {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&_svg\:not\(\[class\*\=size-\]\)\]\:size-4 {
        & svg:not([class*="size-"]) {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\&_svg\:not\(\[class\*\=size-\]\)\]\:size-4\.5 {
        & svg:not([class*="size-"]) {
            width: calc(var(--spacing) * 4.5);
            height: calc(var(--spacing) * 4.5);
        }
    }

    .\[\&_svg\:not\(\[role\=img\]\)\:not\(\[class\*\=text-\]\)\]\:opacity-60 {
        & svg:not([role="img"]):not([class*="text-"]) {
            opacity: 60%;
        }
    }

    .\[\&_svg\:not\(\[role\=img\]\)\:not\(\[class\*\=text-\]\)\:not\(\[class\*\=opacity-\]\)\]\:opacity-60 {
        & svg:not([role="img"]):not([class*="text-"]):not([class*="opacity-"]) {
            opacity: 60%;
        }
    }

    .\[\&_td\:first-child\]\:rounded-s-lg {
        & td:first-child {
            border-start-start-radius: var(--radius);
            border-end-start-radius: var(--radius);
        }
    }

    .\[\&_td\:last-child\]\:rounded-e-lg {
        & td:last-child {
            border-start-end-radius: var(--radius);
            border-end-end-radius: var(--radius);
        }
    }

    .\[\&_tr\]\:border-b {
        & tr {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
        }
    }

    .\[\&_tr\:last-child\]\:border-0 {
        & tr:last-child {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }
    }

    .\[\&\:has\(\[data-state\=open\]\)\]\:bg-accent {
        &:has([data-state="open"]) {
            background-color: var(--accent);
        }
    }

    .\[\&\:has\(\[data-state\=open\]\)\]\:opacity-100 {
        &:has([data-state="open"]) {
            opacity: 100%;
        }
    }

    .\[\&\:has\(\[role\=checkbox\]\)\]\:pe-0 {
        &:has([role="checkbox"]) {
            padding-inline-end: calc(var(--spacing) * 0);
        }
    }

    .\[\&\:has\(td\)\:hover\]\:bg-muted\/50 {
        &:has(td):hover {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 50%,
                        transparent);
            }
        }
    }

    .\[\&\:hover_svg\]\:text-primary {
        &:hover svg {
            color: var(--primary);
        }
    }

    .data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive {
        &[data-variant="destructive"] {
            :is(& > *) {
                &:is(svg) {
                    color: var(--destructive) !important;
                }
            }
        }
    }

    .\[\&\:last-child\]\:rounded-b-xl {
        &:last-child {
            border-bottom-right-radius: calc(var(--radius) + 4px);
            border-bottom-left-radius: calc(var(--radius) + 4px);
        }
    }

    .\[\&\:not\(\:first-child\)\]\:mt-4 {
        &:not(:first-child) {
            margin-top: calc(var(--spacing) * 4);
        }
    }

    .\[\&\:not\(\:last-child\)\>td\]\:border-b {
        &:not(:last-child)>td {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
        }
    }

    .\[\&\:not\(\[data-pinned\]\)\:has\(\+\[data-pinned\]\)_div\.cursor-col-resize\:last-child\]\:opacity-0 {
        &:not([data-pinned]):has(+ [data-pinned]) div.cursor-col-resize:last-child {
            opacity: 0%;
        }
    }

    .\[\&\>\*\:last-child\]\:border-r-0 {
        &>*:last-child {
            border-right-style: var(--tw-border-style);
            border-right-width: 0px;
        }
    }

    .\[\&\>\[data-slot\=alert-icon\]\>svg\]\:size-4 {
        &>[data-slot="alert-icon"]>svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\&\>\[data-slot\=alert-icon\]\>svg\]\:size-5 {
        &>[data-slot="alert-icon"]>svg {
            width: calc(var(--spacing) * 5);
            height: calc(var(--spacing) * 5);
        }
    }

    .\[\&\>\[data-slot\=alert-icon\]\>svg\]\:size-6 {
        &>[data-slot="alert-icon"]>svg {
            width: calc(var(--spacing) * 6);
            height: calc(var(--spacing) * 6);
        }
    }

    .\[\&\>a\]\:w-full {
        &>a {
            width: 100%;
        }
    }

    .\[\&\>a\]\:items-center {
        &>a {
            align-items: center;
        }
    }

    .\[\&\>a\]\:gap-2 {
        &>a {
            gap: calc(var(--spacing) * 2);
        }
    }

    .\[\&\>em\]\:text-\[0\.7rem\] {
        &>em {
            font-size: 0.7rem;
        }
    }

    .\[\&\>em\]\:font-semibold {
        &>em {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }
    }

    .\[\&\>em\]\:uppercase {
        &>em {
            text-transform: uppercase;
        }
    }

    .\[\&\>em\]\:not-italic {
        &>em {
            font-style: normal;
        }
    }

    .\[\&\>span\]\:line-clamp-1 {
        &>span {
            overflow: hidden;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 1;
        }
    }

    .\[\&\>svg\]\:pointer-events-none {
        &>svg {
            pointer-events: none;
        }
    }

    .\[\&\>svg\]\:size-3\.5 {
        &>svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&\>svg\]\:size-3\.5\! {
        &>svg {
            width: calc(var(--spacing) * 3.5) !important;
            height: calc(var(--spacing) * 3.5) !important;
        }
    }

    .\[\&\>svg\]\:size-4 {
        &>svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\&\>svg\]\:h-2\.5 {
        &>svg {
            height: calc(var(--spacing) * 2.5);
        }
    }

    .\[\&\>svg\]\:h-3 {
        &>svg {
            height: calc(var(--spacing) * 3);
        }
    }

    .\[\&\>svg\]\:h-3\.5 {
        &>svg {
            height: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&\>svg\]\:w-2\.5 {
        &>svg {
            width: calc(var(--spacing) * 2.5);
        }
    }

    .\[\&\>svg\]\:w-3 {
        &>svg {
            width: calc(var(--spacing) * 3);
        }
    }

    .\[\&\>svg\]\:w-3\.5 {
        &>svg {
            width: calc(var(--spacing) * 3.5);
        }
    }

    .\[\&\>svg\]\:shrink-0 {
        &>svg {
            flex-shrink: 0;
        }
    }

    .\[\&\>svg\]\:text-muted-foreground {
        &>svg {
            color: var(--muted-foreground);
        }
    }

    .\[\&\>svg\]\:opacity-60 {
        &>svg {
            opacity: 60%;
        }
    }

    .\[\&\>svg\]\:opacity-100\! {
        &>svg {
            opacity: 100% !important;
        }
    }

    .\[\&\>svg\>path\:last-child\]\:origin-center {
        &>svg>path:last-child {
            transform-origin: center;
        }
    }

    .\[\&\>svg\>path\:last-child\]\:transition-all {
        &>svg>path:last-child {
            transition-property: all;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
        }
    }

    .\[\&\>svg\>path\:last-child\]\:duration-200 {
        &>svg>path:last-child {
            --tw-duration: 200ms;
            transition-duration: 200ms;
        }
    }

    .\[\&\>th\]\:border-b {
        &>th {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
        }
    }

    .last\:\[\&\>tr\]\:border-b-0 {
        &:last-child {
            &>tr {
                border-bottom-style: var(--tw-border-style);
                border-bottom-width: 0px;
            }
        }
    }

    .\[\&\[align\=center\]\]\:text-center {
        &[align="center"] {
            text-align: center;
        }
    }

    .\[\&\[align\=right\]\]\:text-right {
        &[align="right"] {
            text-align: right;
        }
    }

    .\[\&\[data-active\=true\]_svg\]\:text-primary {
        &[data-active="true"] svg {
            color: var(--primary);
        }
    }

    .\[\&\[data-disabled\]\>\*\]\:after\:bg-foreground\/30 {
        &[data-disabled]>* {
            &::after {
                content: var(--tw-content);
                background-color: var(--foreground);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--foreground) 30%,
                            transparent);
                }
            }
        }
    }

    .\[\&\[data-header-sticky\=on\]\]\:h-\(--header-height-sticky\) {
        &[data-header-sticky="on"] {
            height: var(--header-height-sticky);
        }
    }

    .\[\&\[data-header-sticky\=on\]\]\:pe-\[var\(--removed-body-scroll-bar-size\,0px\)\] {
        &[data-header-sticky="on"] {
            padding-inline-end: var(--removed-body-scroll-bar-size, 0px);
        }
    }

    .\[\&\[data-last-col\=left\]_div\.cursor-col-resize\:last-child\]\:opacity-0 {
        &[data-last-col="left"] div.cursor-col-resize:last-child {
            opacity: 0%;
        }
    }

    .\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90 {
        &[data-panel-group-direction="vertical"]>div {
            rotate: 90deg;
        }
    }

    .\[\&\[data-pinned\=left\]\[data-last-col\=left\]\]\:border-e\! {
        &[data-pinned="left"][data-last-col="left"] {
            border-inline-end-style: var(--tw-border-style) !important;
            border-inline-end-width: 1px !important;
        }
    }

    .\[\&\[data-pinned\=right\]\:last-child_div\.cursor-col-resize\:last-child\]\:opacity-0 {
        &[data-pinned="right"]:last-child div.cursor-col-resize:last-child {
            opacity: 0%;
        }
    }

    .\[\&\[data-pinned\=right\]\[data-last-col\=right\]\]\:border-s\! {
        &[data-pinned="right"][data-last-col="right"] {
            border-inline-start-style: var(--tw-border-style) !important;
            border-inline-start-width: 1px !important;
        }
    }

    .\[\&\[data-pinned\]\[data-last-col\]\]\:border-border {
        &[data-pinned][data-last-col] {
            border-color: var(--border);
        }
    }

    .\[\&\[data-selected\=true\]_svg\]\:opacity-100 {
        &[data-selected="true"] svg {
            opacity: 100%;
        }
    }

    .\[\&\[data-selected\]\:not\(\.range-middle\)\>\*\]\:after\:bg-background {
        &[data-selected]:not(.range-middle)>* {
            &::after {
                content: var(--tw-content);
                background-color: var(--background);
            }
        }
    }

    .\[\&\[data-state\=active\]_svg\]\:text-primary {
        &[data-state="active"] svg {
            color: var(--primary);
        }
    }

    .\[\&\[data-state\=open\]\>svg\]\:rotate-180 {
        &[data-state="open"]>svg {
            rotate: 180deg;
        }
    }

    .\[\&\[data-state\=open\]\>svg\>path\:last-child\]\:rotate-90 {
        &[data-state="open"]>svg>path:last-child {
            rotate: 90deg;
        }
    }

    .\[\&\[data-state\=open\]\>svg\>path\:last-child\]\:opacity-0 {
        &[data-state="open"]>svg>path:last-child {
            opacity: 0%;
        }
    }

    .\[\&\[readonly\]\]\:cursor-not-allowed {
        &[readonly] {
            cursor: not-allowed;
        }
    }

    .\[\&\[readonly\]\]\:bg-muted\/80 {
        &[readonly] {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 80%,
                        transparent);
            }
        }
    }

    .\[\&\[readonly\]\]\:opacity-70 {
        &[readonly] {
            opacity: 70%;
        }
    }

    .\[\&\[type\=file\]\]\:py-0 {
        &[type="file"] {
            padding-block: calc(var(--spacing) * 0);
        }
    }

    .\[\.active\&\]\:border-border {
        .active& {
            border-color: var(--border);
        }
    }

    .\[\.active\&\]\:border-input {
        .active& {
            border-color: var(--input);
        }
    }

    .\[\.active\&\]\:bg-background {
        .active& {
            background-color: var(--background);
        }
    }

    .\[\.active\&\]\:\[\&_i\]\:text-primary {
        .active& {
            & i {
                color: var(--primary);
            }
        }
    }

    .\[\[data-active\=true\]\>\&\]\:before\:bg-primary {
        [data-active="true"]>& {
            &::before {
                content: var(--tw-content);
                background-color: var(--primary);
            }
        }
    }

    .\[\[data-invalid\=true\]_\&\]\:border {
        [data-invalid="true"] & {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }
    }

    .\[\[data-invalid\=true\]_\&\]\:border-destructive\/60 {
        [data-invalid="true"] & {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }
    }

    .\[\[data-invalid\=true\]_\&\]\:ring-destructive\/10 {
        [data-invalid="true"] & {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }
    }

    .dark\:\[\[data-invalid\=true\]_\&\]\:border-destructive {
        &:is(.dark *) {
            [data-invalid="true"] & {
                border-color: var(--destructive);
            }
        }
    }

    .dark\:\[\[data-invalid\=true\]_\&\]\:ring-destructive\/20 {
        &:is(.dark *) {
            [data-invalid="true"] & {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab,
                            var(--destructive) 20%,
                            transparent);
                }
            }
        }
    }

    .\[\[data-state\=open\]\>\&\]\:-rotate-180 {
        [data-state="open"]>& {
            rotate: calc(180deg * -1);
        }
    }

    .\[\[data-state\=open\]\>\&\]\:border-ring {
        [data-state="open"]>& {
            border-color: var(--ring);
        }
    }

    .\[\[data-state\=open\]\>\&\]\:ring-\[3px\] {
        [data-state="open"]>& {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }

    .\[\[data-state\=open\]\>\&\]\:ring-ring\/30 {
        [data-state="open"]>& {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }
    }

    .\[\[data-state\=open\]\>\&\]\:outline-hidden {
        [data-state="open"]>& {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .\[\[data-state\=open\]\>span\>\&\]\:hidden {
        [data-state="open"]>span>& {
            display: none;
        }
    }

    .\[\[data-state\=open\]\>span\>\&\]\:inline {
        [data-state="open"]>span>& {
            display: inline;
        }
    }

    .\[html\.dark_\&\]\:block {
        html.dark & {
            display: block;
        }
    }

    .\[html\.light_\&\]\:block {
        html.light & {
            display: block;
        }
    }
}

:root {
    --background: var(--color-white);
    --foreground: var(--color-zinc-950);
    --card: var(--color-white);
    --card-foreground: var(--color-zinc-950);
    --popover: var(--color-white);
    --popover-foreground: var(--color-zinc-950);
    --primary: var(--color-blue-500);
    --primary-foreground: var(--color-white);
    --secondary: var(--color-zinc-100);
    --secondary-foreground: var(--color-zinc-900);
    --muted: var(--color-zinc-100);
    --muted-foreground: var(--color-zinc-500);
    --accent: var(--color-zinc-100);
    --accent-foreground: var(--color-zinc-900);
    --destructive: var(--color-red-600);
    --destructive-foreground: var(--color-white);
    --mono: var(--color-zinc-950);
    --mono-foreground: var(--color-white);
    --border: oklch(94% 0.004 286.32);
    --input: var(--color-zinc-200);
    --ring: var(--color-zinc-400);
    --radius: 0.5rem;
}

.dark {
    --background: var(--color-zinc-950);
    --foreground: var(--color-zinc-50);
    --card: var(--color-zinc-950);
    --card-foreground: var(--color-zinc-50);
    --popover: var(--color-zinc-950);
    --popover-foreground: var(--color-zinc-50);
    --primary: var(--color-blue-600);
    --primary-foreground: var(--color-white);
    --secondary: var(--color-zinc-800);
    --secondary-foreground: var(--color-zinc-50);
    --muted: var(--color-zinc-900);
    --muted-foreground: var(--color-zinc-500);
    --accent: var(--color-zinc-900);
    --accent-foreground: var(--color-zinc-50);
    --destructive: var(--color-red-600);
    --destructive-foreground: var(--color-white);
    --mono: var(--color-zinc-300);
    --mono-foreground: var(--color-black);
    --border: var(--color-zinc-800);
    --input: var(--color-zinc-800);
    --ring: var(--color-zinc-600);
}

@layer base {
    ::-webkit-scrollbar {
        width: 5px;
    }

    ::-webkit-scrollbar-track {
        background: transparent;
    }

    ::-webkit-scrollbar-thumb {
        background: var(--input);
        border-radius: 5px;
    }

    * {
        scrollbar-width: thin;
        scrollbar-color: var(--input) transparent;
    }
}

html {
    scroll-behavior: smooth;
}

@layer components {
    .kt-avatar {
        position: relative;
        display: flex;
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
        flex-shrink: 0;
    }

    .kt-avatar-image {
        overflow: hidden;
        border-radius: calc(infinity * 1px);

        img {
            aspect-ratio: 1 / 1;
            height: 100%;
            width: 100%;
        }
    }

    .kt-avatar-fallback {
        display: flex;
        height: 100%;
        width: 100%;
        align-items: center;
        justify-content: center;
        border-radius: calc(infinity * 1px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--accent);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .kt-avatar-indicator {
        position: absolute;
        display: flex;
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
        align-items: center;
        justify-content: center;
    }

    .kt-avatar-status {
        display: flex;
        width: calc(var(--spacing) * 2);
        height: calc(var(--spacing) * 2);
        align-items: center;
        border-radius: calc(infinity * 1px);
        border-style: var(--tw-border-style);
        border-width: 2px;
        border-color: var(--background);

        &.kt-avatar-status-online {
            background-color: var(--color-green-600);
        }

        &.kt-avatar-status-offline {
            background-color: var(--mono);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--mono) 50%,
                        transparent);
            }
        }

        &.kt-avatar-status-busy {
            background-color: var(--color-yellow-600);
        }

        &.kt-avatar-status-away {
            background-color: var(--color-blue-600);
        }
    }
}

@layer components {
    .kt-accordion-item {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);

        &:last-child {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 0px;
        }
    }

    .kt-accordion-toggle {
        display: flex;
        width: 100%;
        cursor: pointer;
        align-items: center;
        justify-content: space-between;
        gap: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 4);
        text-align: start;
    }

    .kt-accordion-title {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--mono);
    }

    .kt-accordion-content {
        overflow: hidden;
        transition-property: height;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .kt-accordion-wrapper {
        padding-bottom: calc(var(--spacing) * 4);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--foreground);
    }

    .kt-accordion-indicator {
        display: inline-flex;
        width: calc(var(--spacing) * 3);
        height: calc(var(--spacing) * 3);
        align-items: center;
        color: var(--muted-foreground);
    }

    .kt-accordion-indicator-on {
        display: block;
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
        flex-shrink: 0;

        &[data-kt-accordion-item].active {
            display: none;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            display: none;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            display: none;
        }
    }

    .kt-accordion-indicator-off {
        display: none;
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
        flex-shrink: 0;

        &[data-kt-accordion-item].active {
            display: block;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            display: block;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            display: block;
        }
    }

    .kt-accordion.kt-accordion-outline {
        display: flex;
        flex-direction: column;
        gap: calc(var(--spacing) * 3.5);

        .kt-accordion-item {
            border-radius: var(--radius);
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
        }

        .kt-accordion-content {
            border-top-style: var(--tw-border-style);
            border-top-width: 1px;
            border-color: var(--border);
        }

        .kt-accordion-toggle {
            padding: calc(var(--spacing) * 4);
        }

        .kt-accordion-wrapper {
            padding: calc(var(--spacing) * 4);
        }
    }
}

@layer components {
    .kt-accordion-menu {
        display: flex;
        width: 100%;
        flex-direction: column;
        row-gap: calc(var(--spacing) * 1);
    }

    .kt-accordion-menu-content {
        overflow: hidden;
        padding-inline-start: calc(var(--spacing) * 6);
        transition-property: height;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .kt-accordion-menu-sub {
        width: 100%;
        row-gap: calc(var(--spacing) * 1);
    }

    .kt-accordion-menu-item {
        width: 100%;

        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .kt-accordion-menu-toggle {
        display: flex;
        width: 100%;
        align-items: center;
        column-gap: calc(var(--spacing) * 2.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:disabled {
            pointer-events: none;
        }

        &:disabled {
            opacity: 50%;
        }

        &[data-kt-accordion-item].active {
            background-color: var(--accent);
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            background-color: var(--accent);
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            background-color: var(--accent);
        }

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            flex-shrink: 0;
            color: var(--muted-foreground);
        }
    }

    .kt-accordion-menu-link {
        display: flex;
        width: 100%;
        align-items: center;
        column-gap: calc(var(--spacing) * 2.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:disabled {
            pointer-events: none;
        }

        &:disabled {
            opacity: 50%;
        }

        [data-kt-accordion-initialized] .selected {
            background-color: var(--accent);
        }

        [data-kt-accordion-initialized] .selected & {
            background-color: var(--accent);
        }

        [data-kt-accordion-initialized] &.selected {
            background-color: var(--accent);
        }

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            flex-shrink: 0;
            color: var(--muted-foreground);
        }
    }

    .kt-accordion-menu-indicator {
        margin-inline-start: auto;
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
        flex-shrink: 0;
        color: var(--muted-foreground);

        &[data-kt-accordion-item].active {
            rotate: 180deg;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            rotate: 180deg;
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            rotate: 180deg;
        }
    }
}

@layer components {
    [dir="rtl"] .kt-accordion-menu-indicator {
        &[data-kt-accordion-item].active {
            rotate: calc(180deg * -1);
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle] & {
            rotate: calc(180deg * -1);
        }

        [data-kt-accordion-item].active>[data-kt-accordion-toggle]& {
            rotate: calc(180deg * -1);
        }
    }
}

@layer components {
    .kt-alert {
        display: flex;
        width: 100%;
        align-items: stretch;
    }

    .kt-alert-title {
        flex-grow: 1;
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }

    .kt-alert-toolbar {
        display: flex;
        align-items: baseline;
        gap: calc(var(--spacing) * 2.5);
    }

    .kt-alert-actions {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 2);
    }

    .kt-alert-description {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        & p {
            margin-bottom: calc(var(--spacing) * 2);
        }

        & p {
            --tw-leading: var(--leading-relaxed);
            line-height: var(--leading-relaxed);
        }
    }

    .kt-alert-content {
        width: 100%;
        flex-grow: 1;

        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
        }

        .kt-alert-title {
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
        }
    }

    .kt-alert-icon {
        flex-shrink: 0;
    }

    .kt-alert-close {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
        flex-shrink: 0;
        cursor: pointer;

        i {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
            color: var(--muted-foreground);
        }

        >svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            color: var(--muted-foreground);
        }

        &:focus,
        &:hover {

            i,
            >svg {
                color: var(--foreground);
            }
        }
    }

    .kt-alert {
        gap: calc(var(--spacing) * 2.5);
        border-radius: var(--radius);
        padding: calc(var(--spacing) * 3.5);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        .kt-alert-icon svg {
            width: calc(var(--spacing) * 5);
            height: calc(var(--spacing) * 5);
        }

        .kt-alert-toolbar {
            padding-top: calc(var(--spacing) * 0.25);
        }
    }

    .kt-alert-sm {
        gap: calc(var(--spacing) * 1.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        .kt-alert-close {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);

            >svg {
                width: calc(var(--spacing) * 3.5);
                height: calc(var(--spacing) * 3.5);
            }
        }

        .kt-alert-icon svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .kt-alert-lg {
        gap: calc(var(--spacing) * 2.5);
        border-radius: calc(var(--radius) - 2px);
        padding: calc(var(--spacing) * 4);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));

        .kt-alert-icon svg {
            width: calc(var(--spacing) * 6);
            height: calc(var(--spacing) * 6);
        }

        .kt-alert-toolbar {
            padding-top: calc(var(--spacing) * 0.75);
        }
    }

    .kt-alert {
        background-color: var(--muted);
        color: var(--foreground);
    }

    .kt-alert-primary {
        background-color: var(--primary);
        color: var(--primary-foreground);

        .kt-alert-close>svg {
            color: var(--primary-foreground);
        }
    }

    .kt-alert-destructive {
        background-color: var(--destructive);
        color: var(--destructive-foreground);

        .kt-alert-close>svg {
            color: var(--destructive-foreground);
        }
    }

    .kt-alert-success {
        background-color: var(--color-green-500);
        color: var(--color-white);

        .kt-alert-close>svg {
            color: var(--color-white);
        }
    }

    .kt-alert-info {
        background-color: var(--color-violet-600);
        color: var(--color-white);

        .kt-alert-close>svg {
            color: var(--color-white);
        }
    }

    .kt-alert-warning {
        background-color: var(--color-yellow-500);
        color: var(--color-white);

        .kt-alert-close>svg {
            color: var(--color-white);
        }
    }

    .kt-alert-mono {
        background-color: var(--mono);
        color: var(--mono-foreground);

        .kt-alert-close>svg {
            color: var(--mono-foreground);
        }
    }

    .kt-alert-mono {
        &.kt-alert-primary {
            .kt-alert-icon {
                color: var(--primary);
            }
        }

        &.kt-alert-success {
            .kt-alert-icon {
                color: var(--color-green-500);
            }
        }

        &.kt-alert-destructive {
            .kt-alert-icon {
                color: var(--destructive);
            }
        }

        &.kt-alert-warning {
            .kt-alert-icon {
                color: var(--color-yellow-500);
            }
        }

        &.kt-alert-info {
            .kt-alert-icon {
                color: var(--color-violet-600);
            }
        }
    }

    .kt-alert-outline {
        .kt-alert-close {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            flex-shrink: 0;
            cursor: pointer;

            >svg {
                width: calc(var(--spacing) * 4);
                height: calc(var(--spacing) * 4);
                color: var(--muted-foreground);
            }

            &:focus,
            &:hover {
                >svg {
                    color: var(--foreground);
                }
            }
        }

        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--background);
        color: var(--foreground);

        &.kt-alert-primary {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--background);
            color: var(--primary);
        }

        &.kt-alert-destructive {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--background);
            color: var(--destructive);
        }

        &.kt-alert-success {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--background);
            color: var(--color-green-500);
        }

        &.kt-alert-info {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--background);
            color: var(--color-violet-600);
        }

        &.kt-alert-warning {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--background);
            color: var(--color-yellow-500);
        }

        &.kt-alert-mono {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--background);
            color: var(--mono);
        }
    }

    .kt-alert-light {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--muted);
        color: var(--foreground);

        .kt-alert-icon>svg {
            color: var(--muted-foreground);
        }

        .kt-alert-close {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            flex-shrink: 0;
            cursor: pointer;

            >svg {
                width: calc(var(--spacing) * 4);
                height: calc(var(--spacing) * 4);
                color: var(--muted-foreground);
            }

            &:focus,
            &:hover {
                >svg {
                    color: var(--foreground);
                }
            }
        }

        &.kt-alert-primary {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--primary) 10%,
                        transparent);
            }

            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 5%,
                        transparent);
            }

            color: var(--foreground);

            .kt-alert-icon>svg {
                color: var(--primary);
            }
        }

        &.kt-alert-destructive {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }

            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 5%,
                        transparent);
            }

            color: var(--foreground);

            .kt-alert-icon>svg {
                color: var(--destructive);
            }
        }

        &.kt-alert-success {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-green-200);
            background-color: var(--color-green-50);
            color: var(--foreground);

            &:is(.dark *) {
                border-color: color-mix(in srgb,
                        oklch(26.6% 0.065 152.934) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab,
                            var(--color-green-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(26.6% 0.065 152.934) 30%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-green-950) 30%,
                            transparent);
                }
            }

            .kt-alert-icon>svg {
                color: var(--color-green-500);
            }
        }

        &.kt-alert-info {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-violet-200);
            background-color: var(--color-violet-50);
            color: var(--foreground);

            &:is(.dark *) {
                border-color: color-mix(in srgb,
                        oklch(28.3% 0.141 291.089) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab,
                            var(--color-violet-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.3% 0.141 291.089) 30%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-violet-950) 30%,
                            transparent);
                }
            }

            .kt-alert-icon>svg {
                color: var(--color-violet-500);
            }
        }

        &.kt-alert-warning {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-yellow-200);
            background-color: var(--color-yellow-50);
            color: var(--foreground);

            &:is(.dark *) {
                border-color: color-mix(in srgb,
                        oklch(28.6% 0.066 53.813) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab,
                            var(--color-yellow-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.6% 0.066 53.813) 30%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-yellow-950) 30%,
                            transparent);
                }
            }

            .kt-alert-icon>svg {
                color: var(--color-yellow-500);
            }
        }
    }
}

@layer components {
    .kt-form {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .kt-form-item {
        display: flex;
        flex-direction: column;
        gap: calc(var(--spacing) * 2.5);
    }

    .kt-form-control {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .kt-form-control-inline {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 2.5);

        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .kt-form-label {
        display: flex;
        width: 100%;
        align-items: center;
        gap: calc(var(--spacing) * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-leading: 1;
        line-height: 1;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--foreground);

        &:is(:where(.peer):disabled ~ *) {
            cursor: not-allowed;
        }

        &:is(:where(.peer):disabled ~ *) {
            opacity: 50%;
        }

        .kt-switch:disabled+&,
        .kt-checkbox:disabled+&,
        .kt-radio:disabled+& {
            cursor: not-allowed;
            opacity: 50%;
        }
    }

    .kt-form-description {
        margin-top: calc(var(--spacing) * -1);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--secondary-foreground);
    }

    .kt-form-message {
        margin-top: calc(var(--spacing) * -1);
        display: none;
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--destructive);
    }

    .kt-form-actions {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        gap: calc(var(--spacing) * 2.5);
    }

    .kt-form-item:has([aria-invalid="true"]) {
        .kt-form-message {
            display: block;
        }

        .kt-form-description {
            display: none;
        }
    }
}

@layer components {
    .kt-badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background-color: var(--secondary);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        white-space: nowrap;
        color: var(--accent-foreground);

        &:focus {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus {
            --tw-ring-color: var(--ring);
        }

        &:focus {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }

        &:focus {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }

        & svg {
            margin-inline-start: -1px;
        }

        & svg {
            flex-shrink: 0;
        }
    }

    .kt-badge-primary {
        background-color: var(--primary);
        color: var(--primary-foreground);
    }

    .kt-badge-secondary {
        background-color: var(--secondary);
        color: var(--accent-foreground);
    }

    .kt-badge-success {
        background-color: var(--color-green-500);
        color: var(--color-white);
    }

    .kt-badge-warning {
        background-color: var(--color-yellow-400);
        color: var(--color-white);
    }

    .kt-badge-info {
        background-color: var(--color-violet-500);
        color: var(--color-white);
    }

    .kt-badge-mono {
        background-color: var(--mono);
        color: var(--mono-foreground);
    }

    .kt-badge-destructive {
        background-color: var(--destructive);
        color: var(--destructive-foreground);
    }

    .kt-badge-stroke {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--background);
        color: var(--secondary-foreground);
    }

    .kt-badge-disabled {
        pointer-events: none;
        opacity: 50%;
    }

    .kt-badge-lg {
        height: calc(var(--spacing) * 7);
        min-width: calc(var(--spacing) * 7);
        gap: calc(var(--spacing) * 1.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: 0.5rem;
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        & svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .kt-badge {
        height: calc(var(--spacing) * 6);
        min-width: calc(var(--spacing) * 6);
        gap: calc(var(--spacing) * 1.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: 0.45rem;
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        & svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .kt-badge-sm {
        height: calc(var(--spacing) * 5);
        min-width: calc(var(--spacing) * 5);
        gap: calc(var(--spacing) * 1);
        border-radius: calc(var(--radius) - 4px);
        padding-inline: 0.325rem;
        font-size: 0.6875rem;
        --tw-leading: 0.75rem;
        line-height: 0.75rem;

        & svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }
    }

    .kt-badge-xs {
        height: calc(var(--spacing) * 4);
        min-width: calc(var(--spacing) * 4);
        gap: calc(var(--spacing) * 1);
        border-radius: calc(var(--radius) - 4px);
        padding-inline: 0.25rem;
        font-size: 0.625rem;
        --tw-leading: 0.5rem;
        line-height: 0.5rem;

        & svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }
    }

    .kt-badge-outline {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--muted);
        color: var(--secondary-foreground);

        &.kt-badge-primary {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-blue-100);
            background-color: var(--color-blue-50);
            color: var(--color-blue-700);

            &:is(.dark *) {
                border-color: var(--color-blue-950);
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.2% 0.091 267.935) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-blue-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-blue-600);
            }
        }

        &.kt-badge-secondary {
            border-color: var(--border);
            background-color: var(--secondary);
            color: var(--foreground);

            &:is(.dark *) {
                background-color: var(--secondary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--secondary) 50%,
                            transparent);
                }
            }
        }

        &.kt-badge-success {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-green-200);
            background-color: var(--color-green-50);
            color: var(--color-green-700);

            &:is(.dark *) {
                border-color: var(--color-green-950);
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(26.6% 0.065 152.934) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-green-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-green-600);
            }
        }

        &.kt-badge-warning.kt-badge-outline {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-yellow-100);
            background-color: var(--color-yellow-50);
            color: var(--color-yellow-700);

            &:is(.dark *) {
                border-color: var(--color-yellow-950);
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.6% 0.066 53.813) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-yellow-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-yellow-600);
            }
        }

        &.kt-badge-info.kt-badge-outline {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-violet-100);
            background-color: var(--color-violet-50);
            color: var(--color-violet-700);

            &:is(.dark *) {
                border-color: var(--color-violet-950);
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.3% 0.141 291.089) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-violet-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-violet-600);
            }
        }

        &.kt-badge-mono.kt-badge-outline {
            border-color: var(--mono);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--mono) 10%, transparent);
            }

            background-color: var(--mono);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--mono) 10%,
                        transparent);
            }

            color: var(--mono);
        }

        &.kt-badge-destructive.kt-badge-outline {
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-red-100);
            background-color: var(--color-red-50);
            color: var(--color-red-700);

            &:is(.dark *) {
                border-color: var(--color-red-950);
            }

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(25.8% 0.092 26.042) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-red-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-red-600);
            }
        }
    }

    .kt-badge-light {
        &.kt-badge-primary {
            background-color: var(--color-blue-100);
            color: var(--color-blue-800);

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.2% 0.091 267.935) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-blue-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-blue-600);
            }
        }

        &.kt-badge-secondary {
            background-color: var(--secondary);
            color: var(--secondary-foreground);

            &:is(.dark *) {
                background-color: var(--secondary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--secondary) 50%,
                            transparent);
                }
            }
        }

        &.kt-badge-success {
            background-color: var(--color-green-100);
            color: var(--color-green-800);

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(26.6% 0.065 152.934) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-green-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-green-600);
            }
        }

        &.kt-badge-warning {
            background-color: var(--color-yellow-100);
            color: var(--color-yellow-800);

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.6% 0.066 53.813) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-yellow-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-yellow-600);
            }
        }

        &.kt-badge-info {
            background-color: var(--color-violet-100);
            color: var(--color-violet-800);

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(28.3% 0.141 291.089) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-violet-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-violet-600);
            }
        }

        &.kt-badge-mono {
            background-color: var(--mono);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--mono) 10%,
                        transparent);
            }

            color: var(--mono);
        }

        &.kt-badge-destructive {
            background-color: var(--color-red-100);
            color: var(--color-red-800);

            &:is(.dark *) {
                background-color: color-mix(in srgb,
                        oklch(25.8% 0.092 26.042) 50%,
                        transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--color-red-950) 50%,
                            transparent);
                }
            }

            &:is(.dark *) {
                color: var(--color-red-600);
            }
        }
    }

    .kt-badge-ghost {
        background-color: transparent;
        padding-inline: calc(var(--spacing) * 0);

        &.kt-badge-primary {
            color: var(--primary);
        }

        &.kt-badge-secondary {
            color: var(--secondary-foreground);
        }

        &.kt-badge-destructive {
            color: var(--destructive);
        }

        &.kt-badge-success {
            color: var(--color-green-500);
        }

        &.kt-badge-warning {
            color: var(--color-yellow-500);
        }

        &.kt-badge-info {
            color: var(--color-violet-500);
        }

        &.kt-badge-mono {
            color: var(--mono);
        }
    }

    .kt-badge-btn {
        margin-inline-end: calc(var(--spacing) * -0.5);
        display: inline-flex;
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border-radius: calc(var(--radius) - 2px);
        padding: calc(var(--spacing) * 0);
        --tw-leading: 1;
        line-height: 1;

        i {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
            opacity: 70%;
            transition-property: opacity;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
        }

        >svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
            opacity: 70%;
            transition-property: opacity;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
        }

        &:focus,
        &:hover {

            i,
            >svg {
                opacity: 100%;
            }
        }
    }

    .kt-badge-dot {
        width: calc(var(--spacing) * 1.5);
        height: calc(var(--spacing) * 1.5);
        border-radius: calc(infinity * 1px);
        background-color: currentcolor;
        opacity: 75%;
    }
}

@layer components {
    .kt-link {
        display: inline-flex;
        cursor: pointer;
        align-items: center;
        border-radius: calc(var(--radius) - 2px);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        transition-property:
            color,
            background-color,
            border-color,
            outline-color,
            text-decoration-color,
            fill,
            stroke,
            --tw-gradient-from,
            --tw-gradient-via,
            --tw-gradient-to,
            opacity,
            box-shadow,
            transform,
            translate,
            scale,
            rotate,
            filter,
            -webkit-backdrop-filter,
            backdrop-filter,
            display,
            visibility,
            content-visibility,
            overlay,
            pointer-events;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));

        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--color-neutral-200);
        }

        &:focus-visible {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }

        &:is(.dark *) {
            &:focus-visible {
                --tw-ring-color: var(--color-neutral-700);
            }
        }
    }

    .kt-link {
        color: var(--primary);
    }

    .kt-link-inverse {
        color: var(--background);
    }

    .kt-link-mono {
        color: var(--mono);
    }

    .kt-link {
        gap: calc(var(--spacing) * 1);
        font-size: 0.8125rem;
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }

        i {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    .kt-link-sm {
        gap: calc(var(--spacing) * 1);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }

        i {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .kt-link-lg {
        gap: calc(var(--spacing) * 1.5);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }

        i {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    .kt-link-underline {
        margin-top: calc(var(--spacing) * -0.5);
        text-decoration-style: solid;

        &:hover {
            @media (hover: hover) {
                text-decoration-line: underline;
            }
        }

        &:hover {
            @media (hover: hover) {
                text-underline-offset: 4px;
            }
        }
    }

    .kt-link-underlined {
        margin-top: calc(var(--spacing) * -0.5);
        text-decoration-line: underline;
        text-decoration-style: solid;
        text-underline-offset: 4px;
    }

    .kt-link-dashed {
        text-decoration-style: dashed;
        text-decoration-thickness: 1px;
    }

    .kt-link-disabled {
        pointer-events: none;
        opacity: 50%;
    }
}

@layer components {
    .kt-btn {
        display: inline-flex;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        white-space: nowrap;
        --tw-ring-offset-color: var(--background);
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }

        &:disabled {
            pointer-events: none;
        }

        &:disabled {
            opacity: 50%;
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }

        flex-shrink: 0;
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow: var(--tw-inset-shadow),
        var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow),
        var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        svg {
            flex-shrink: 0;
        }
    }

    .kt-btn {
        background-color: var(--primary);
        color: var(--primary-foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--primary) 90%,
                            transparent);
                }
            }
        }

        &.active {
            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 90%,
                        transparent);
            }
        }
    }

    .kt-btn-mono {
        background-color: var(--mono);
        color: var(--mono-foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--mono);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--mono) 90%,
                            transparent);
                }
            }
        }

        &.active {
            background-color: var(--mono);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--mono) 90%,
                        transparent);
            }
        }
    }

    .kt-btn-destructive {
        background-color: var(--destructive);
        color: var(--destructive-foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--destructive) 90%,
                            transparent);
                }
            }
        }

        &.active {
            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 90%,
                        transparent);
            }
        }
    }

    .kt-btn-secondary {
        background-color: var(--secondary);
        color: var(--secondary-foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--secondary);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--foreground);
            }
        }

        &.active {
            background-color: var(--secondary);
        }

        &.active {
            color: var(--foreground);
        }

        i {
            color: var(--muted-foreground);
        }

        svg {
            color: var(--muted-foreground);
        }

        &:hover,
        &.active {
            i {
                color: var(--muted-foreground);
            }

            svg {
                color: var(--muted-foreground);
            }
        }
    }

    .kt-btn-outline {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--background);
        color: var(--secondary-foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }

        &.active {
            background-color: var(--accent);
        }

        &.active {
            color: var(--accent-foreground);
        }

        i {
            color: var(--muted-foreground);
        }

        svg {
            color: var(--muted-foreground);
        }

        &:hover,
        &.active {
            i {
                color: var(--secondary-foreground);
            }

            svg {
                color: var(--secondary-foreground);
            }
        }

        &.kt-btn-primary {
            border-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--primary) 10%,
                        transparent);
            }

            background-color: var(--primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--primary) 10%,
                        transparent);
            }

            color: var(--primary);

            &:hover {
                @media (hover: hover) {
                    background-color: var(--primary);
                }
            }

            &:hover {
                @media (hover: hover) {
                    color: var(--primary-foreground);
                }
            }

            &.active {
                border-color: var(--primary);
            }

            &.active {
                background-color: var(--primary);
            }

            &.active {
                color: var(--primary-foreground);
            }

            i {
                color: var(--primary);
            }

            svg {
                color: var(--primary);
            }

            &:hover,
            &.active {
                i {
                    color: var(--primary-foreground);
                }

                svg {
                    color: var(--primary-foreground);
                }
            }
        }

        &.kt-btn-destructive {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }

            background-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }

            color: var(--destructive);

            &:hover {
                @media (hover: hover) {
                    background-color: var(--destructive);
                }
            }

            &:hover {
                @media (hover: hover) {
                    color: var(--destructive-foreground);
                }
            }

            &.active {
                border-color: var(--destructive);
            }

            &.active {
                background-color: var(--destructive);
            }

            &.active {
                color: var(--destructive-foreground);
            }

            i {
                color: var(--destructive);
            }

            svg {
                color: var(--destructive);
            }

            &:hover,
            &.active {
                i {
                    color: var(--destructive-foreground);
                }

                svg {
                    color: var(--destructive-foreground);
                }
            }
        }
    }

    .kt-btn-ghost {
        background-color: transparent;
        color: var(--accent-foreground);
        --tw-shadow: 0 0 #0000;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }

        &.active {
            background-color: var(--accent);
        }

        &.active {
            color: var(--accent-foreground);
        }

        &:not(.kt-btn-primary):not(.kt-btn-destructive) {
            i {
                color: var(--muted-foreground);
            }

            svg {
                color: var(--muted-foreground);
            }

            &:hover,
            &.active {
                i {
                    color: var(--secondary-foreground);
                }

                svg {
                    color: var(--secondary-foreground);
                }
            }
        }

        &.kt-btn-primary {
            color: var(--primary);

            &:hover {
                @media (hover: hover) {
                    background-color: var(--primary);
                }
            }

            &:hover {
                @media (hover: hover) {
                    color: var(--primary-foreground);
                }
            }

            &.active {
                background-color: var(--primary);
            }

            &.active {
                color: var(--primary-foreground);
            }
        }

        &.kt-btn-destructive {
            color: var(--destructive);

            &:hover {
                @media (hover: hover) {
                    background-color: var(--destructive);
                }
            }

            &:hover {
                @media (hover: hover) {
                    color: var(--destructive-foreground);
                }
            }

            &.active {
                background-color: var(--destructive);
            }

            &.active {
                color: var(--destructive-foreground);
            }
        }
    }

    .kt-btn-dim {
        background-color: transparent;
        color: var(--muted-foreground);
        --tw-shadow: 0 0 #0000;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--foreground);
            }
        }

        &.active {
            background-color: transparent;
        }

        &.active {
            color: var(--foreground);
        }

        i {
            color: var(--muted-foreground);
        }

        svg {
            color: var(--muted-foreground);
        }

        &:hover,
        &.active {
            i {
                color: var(--secondary-foreground);
            }

            svg {
                color: var(--secondary-foreground);
            }
        }
    }

    .kt-btn {
        height: calc(var(--spacing) * 8.5);
        gap: calc(var(--spacing) * 1.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 3);
        font-size: 0.8125rem;
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }

        i {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        &.kt-btn-icon {
            width: calc(var(--spacing) * 8.5);
            height: calc(var(--spacing) * 8.5);
            padding: calc(var(--spacing) * 0);
        }
    }

    .kt-btn-lg {
        height: calc(var(--spacing) * 10);
        gap: calc(var(--spacing) * 1.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 4);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }

        i {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        &.kt-btn-icon {
            width: calc(var(--spacing) * 10);
            height: calc(var(--spacing) * 10);
            padding: calc(var(--spacing) * 0);
        }
    }

    .kt-btn-sm {
        height: calc(var(--spacing) * 7);
        gap: calc(var(--spacing) * 1.25);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }

        i {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        &.kt-btn-icon {
            width: calc(var(--spacing) * 7);
            height: calc(var(--spacing) * 7);
            padding: calc(var(--spacing) * 0);
        }
    }
}

@layer components {
    .kt-label {
        display: inline-flex;
        align-items: center;
        gap: calc(var(--spacing) * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-leading: 1;
        line-height: 1;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--foreground);

        .kt-switch:disabled+&,
        .kt-checkbox:disabled+&,
        .kt-radio:disabled+& {
            cursor: not-allowed;
            opacity: 50%;
        }
    }

    .kt-label-secondary {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
    }
}

@layer components {
    .kt-card {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        border-radius: calc(var(--radius) + 4px);
        color: var(--card-foreground);
    }

    .kt-card {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--card);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }
    }

    .kt-card-header {
        display: flex;
        min-height: calc(var(--spacing) * 14);
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;
        gap: calc(var(--spacing) * 2.5);
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 5);
    }

    .kt-card-footer {
        display: flex;
        align-items: center;
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 5);
        padding-block: calc(var(--spacing) * 4);
    }

    .kt-card-content {
        flex-grow: 1;
        padding-inline: calc(var(--spacing) * 5);
        padding-block: calc(var(--spacing) * 5);
    }

    .kt-card-table {
        display: grid;
        flex-grow: 1;

        .kt-table-border {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }

        .kt-table {

            th,
            td {
                &:first-child {
                    padding-inline-start: calc(var(--spacing) * 5);
                }

                &:last-child {
                    padding-inline-end: calc(var(--spacing) * 5);
                }
            }
        }
    }

    .kt-card-grid {

        & .kt-card-header,
        & .kt-card-footer {
            padding-inline: calc(var(--spacing) * 5);
        }

        .kt-card-content {
            padding: 0;

            .kt-table {
                border: 0;

                th:first-child,
                td:first-child {
                    padding-inline-start: calc(var(--spacing) * 5);

                    &.kt-table-cell-center {
                        padding-inline-end: calc(var(--spacing) * 5);
                    }
                }

                th:last-child,
                td:last-child {
                    padding-inline-end: calc(var(--spacing) * 5);

                    &.table-cell-center {
                        padding-inline-start: calc(var(--spacing) * 5);
                    }
                }
            }
        }
    }

    .kt-card-heading {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .kt-card-toolbar {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 2.5);
    }

    .kt-card-title {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-leading: 1;
        line-height: 1;
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }

    .kt-card-description {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--muted-foreground);
    }

    .kt-card-group {
        flex-grow: 1;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 5);
        padding-block: calc(var(--spacing) * 5);

        &:last-child {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 0px;
        }

        &+.kt-card-footer {
            border-top-style: var(--tw-border-style);
            border-top-width: 0px;
        }
    }

    .kt-card-accent {
        background-color: var(--muted);
        padding: calc(var(--spacing) * 1);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        .kt-card-header {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 0px;
        }

        .kt-card-content {
            border-top-left-radius: calc(var(--radius) + 4px);
            border-top-right-radius: calc(var(--radius) + 4px);
            background-color: var(--card);

            &:last-child {
                border-bottom-right-radius: calc(var(--radius) + 4px);
                border-bottom-left-radius: calc(var(--radius) + 4px);
            }
        }

        .kt-card-table {
            border-radius: calc(var(--radius) + 4px);
            background-color: var(--card);

            &:last-child {
                border-bottom-right-radius: calc(var(--radius) + 4px);
                border-bottom-left-radius: calc(var(--radius) + 4px);
            }
        }

        .kt-card-footer {
            margin-top: 2px;
            border-bottom-right-radius: calc(var(--radius) + 4px);
            border-bottom-left-radius: calc(var(--radius) + 4px);
            border-top-style: var(--tw-border-style);
            border-top-width: 0px;
            background-color: var(--card);
        }
    }

    .kt-card-border {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
    }

    .kt-card-rounded-t {
        border-top-left-radius: calc(var(--radius) + 4px);
        border-top-right-radius: calc(var(--radius) + 4px);
    }

    .kt-card-rounded-b {
        border-bottom-right-radius: calc(var(--radius) + 4px);
        border-bottom-left-radius: calc(var(--radius) + 4px);
    }
}

@layer components {
    .kt-checkbox {
        cursor: pointer;
        appearance: none;
        background-position: center;
        background-repeat: no-repeat;
        flex-shrink: 0;
        border-radius: calc(var(--radius) - 4px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--background);
        --tw-ring-offset-color: var(--background);

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled {
            opacity: 50%;
        }

        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }
    }

    .kt-checkbox {
        &:checked {
            border-color: var(--primary);
        }

        &:checked {
            background-color: var(--primary);
        }

        &:checked {
            color: var(--primary-foreground);
        }

        &:indeterminate {
            border-color: var(--primary);
        }

        &:indeterminate {
            background-color: var(--primary);
        }

        &:indeterminate {
            color: var(--primary-foreground);
        }
    }

    .kt-checkbox-mono {
        &:checked {
            border-color: var(--mono);
        }

        &:checked {
            background-color: var(--mono);
        }

        &:checked {
            color: var(--mono-foreground);
        }

        &:indeterminate {
            border-color: var(--mono);
        }

        &:indeterminate {
            background-color: var(--mono);
        }

        &:indeterminate {
            color: var(--mono-foreground);
        }
    }

    .kt-checkbox {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);

        &:checked,
        &[aria-checked="true"] {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='9' viewBox='0 0 12 9' fill='none'%3E%3Cpath d='M10.3667 0.541643L4.80007 6.10831L1.56674 2.87498C1.41061 2.71977 1.1994 2.63265 0.979241 2.63265C0.759086 2.63265 0.547876 2.71977 0.391741 2.87498C0.236532 3.03111 0.149414 3.24232 0.149414 3.46248C0.149414 3.68263 0.236532 3.89384 0.391741 4.04998L4.21674 7.87498C4.37288 8.03019 4.58409 8.1173 4.80424 8.1173C5.0244 8.1173 5.23561 8.03019 5.39174 7.87498L11.5417 1.72498C11.6198 1.64751 11.6818 1.55534 11.7241 1.45379C11.7665 1.35224 11.7882 1.24332 11.7882 1.13331C11.7882 1.0233 11.7665 0.914379 11.7241 0.81283C11.6818 0.711281 11.6198 0.619113 11.5417 0.541643C11.3856 0.386434 11.1744 0.299316 10.9542 0.299316C10.7341 0.299316 10.5229 0.386434 10.3667 0.541643Z' fill='white'/%3E%3C/svg%3E");
        }

        &:indeterminate {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 10h8'/%3E%3C/svg%3E");
        }
    }

    .kt-checkbox {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
    }

    .kt-checkbox-sm {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);

        &:checked,
        &[aria-checked="true"] {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='7' viewBox='0 0 10 7' fill='none'%3E%3Cpath d='M8.4932 0.233321L4.03986 4.68665L1.4532 2.09999C1.32829 1.97582 1.15932 1.90613 0.983198 1.90613C0.807074 1.90613 0.638106 1.97582 0.513198 2.09999C0.38903 2.2249 0.319336 2.39386 0.319336 2.56999C0.319336 2.74611 0.38903 2.91508 0.513198 3.03999L3.5732 6.09999C3.69811 6.22415 3.86707 6.29385 4.0432 6.29385C4.21932 6.29385 4.38829 6.22415 4.5132 6.09999L9.4332 1.17999C9.49568 1.11801 9.54528 1.04428 9.57912 0.963038C9.61297 0.881799 9.6304 0.794662 9.6304 0.706655C9.6304 0.618647 9.61297 0.53151 9.57912 0.45027C9.54528 0.369031 9.49568 0.295296 9.4332 0.233321C9.30829 0.109154 9.13932 0.0394592 8.9632 0.0394592C8.78707 0.0394592 8.61811 0.109154 8.4932 0.233321Z' fill='white'/%3E%3C/svg%3E");
        }

        &:indeterminate {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 10h8'/%3E%3C/svg%3E");
        }
    }

    .kt-checkbox-lg {
        width: calc(var(--spacing) * 5.5);
        height: calc(var(--spacing) * 5.5);

        &:checked,
        &[aria-checked="true"] {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='10' viewBox='0 0 14 10' fill='none'%3E%3Cpath d='M11.8035 1.19582L5.68018 7.31915L2.12351 3.76249C1.95176 3.59176 1.71943 3.49593 1.47726 3.49593C1.23509 3.49593 1.00276 3.59176 0.831013 3.76249C0.660283 3.93424 0.564453 4.16657 0.564453 4.40874C0.564453 4.65091 0.660283 4.88324 0.831013 5.05499L5.03851 9.26249C5.21026 9.43322 5.44259 9.52905 5.68476 9.52905C5.92693 9.52905 6.15926 9.43322 6.33101 9.26249L13.096 2.49749C13.1819 2.41227 13.2501 2.31089 13.2967 2.19918C13.3432 2.08748 13.3672 1.96766 13.3672 1.84665C13.3672 1.72564 13.3432 1.60583 13.2967 1.49413C13.2501 1.38242 13.1819 1.28104 13.096 1.19582C12.9243 1.02509 12.6919 0.92926 12.4498 0.92926C12.2076 0.92926 11.9753 1.02509 11.8035 1.19582Z' fill='white'/%3E%3C/svg%3E");
        }

        &:indeterminate {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 10h8'/%3E%3C/svg%3E");
        }
    }
}

@layer components {
    .dark .kt-checkbox {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 20%,
                        transparent);
            }
        }
    }
}

@layer components {
    .kt-datatable-toolbar {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: calc(var(--spacing) * 3);
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 4);
        padding-block: calc(var(--spacing) * 3);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--muted-foreground);

        @media (width >=40rem) {
            flex-direction: row;
        }

        @media (width >=40rem) {
            justify-content: space-between;
        }
    }

    .kt-datatable-pagination {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 1);

        .kt-datatable-pagination-button {
            display: inline-flex;
            height: calc(var(--spacing) * 7);
            min-width: calc(var(--spacing) * 7);
            cursor: pointer;
            align-items: center;
            justify-content: center;
            border-radius: calc(var(--radius) - 2px);
            background-color: transparent;
            padding-inline: calc(var(--spacing) * 0.5);
            color: var(--muted-foreground);

            &.active,
            &:hover:not(:disabled) {
                background-color: var(--accent);
                color: var(--accent-foreground);
            }

            &.kt-datatable-pagination-prev {
                color: var(--foreground);
            }

            &.kt-datatable-pagination-next {
                color: var(--foreground);
            }

            &:disabled {
                cursor: default;
                color: var(--muted-foreground);
            }
        }
    }

    .kt-datatable-length {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 2);
        white-space: nowrap;
    }

    .kt-datatable-info {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 4);
    }

    .kt-datatable-loading {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 2);
        border-radius: calc(var(--radius) - 2px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--card);
        padding-inline: calc(var(--spacing) * 4);
        padding-block: calc(var(--spacing) * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-leading: 1;
        line-height: 1;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--card-foreground);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }
    }

    .kt-datatable-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
    }

    [data-kt-datatable] {
        position: relative;
    }

    [data-kt-datatable].loading table {
        opacity: 0.6;
    }
}

@layer components;

@layer components {
    .kt-drawer {
        position: fixed;
        inset: calc(var(--spacing) * 0);
        z-index: 10;
        flex-direction: column;
        background-color: var(--popover);
        color: var(--popover-foreground);
        --tw-shadow:
            0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        transition-property:
            color,
            background-color,
            border-color,
            outline-color,
            text-decoration-color,
            fill,
            stroke,
            --tw-gradient-from,
            --tw-gradient-via,
            --tw-gradient-to,
            opacity,
            box-shadow,
            transform,
            translate,
            scale,
            rotate,
            filter,
            -webkit-backdrop-filter,
            backdrop-filter,
            display,
            visibility,
            content-visibility,
            overlay,
            pointer-events;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
        --tw-duration: 300ms;
        transition-duration: 300ms;
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
        --tw-outline-style: none;
        outline-style: none;
    }

    .kt-drawer-backdrop {
        position: fixed;
        inset: calc(var(--spacing) * 0);
        background-color: color-mix(in srgb, #000 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-black) 30%,
                    transparent);
        }

        backdrop-filter: blur(4px);
        transition-property: all;
        transition-timing-function: var(--tw-ease,
            var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
            var(--default-transition-duration));
        --tw-duration: 300ms;
        transition-duration: 300ms;
    }

    .kt-drawer-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding: calc(var(--spacing) * 5);
    }

    .kt-drawer-title {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        color: var(--mono);
    }

    .kt-drawer-close {
        margin-inline-end: calc(var(--spacing) * -2.5);
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
        flex-shrink: 0;
        cursor: pointer;

        i {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
            opacity: 70%;
        }

        >svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            opacity: 70%;
        }

        &:focus,
        &:hover {
            i {
                opacity: 100%;
            }

            >svg {
                opacity: 100%;
            }
        }
    }

    .kt-drawer-content {
        flex-grow: 1;
        overflow-y: auto;
        padding: calc(var(--spacing) * 5);
    }

    .kt-drawer-footer {
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
        border-color: var(--border);
        padding: calc(var(--spacing) * 5);
    }

    .kt-drawer-start {
        inset-inline-end: auto;
        max-width: 90%;
        --tw-translate-x: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);

        &[data-kt-drawer-initialized].open {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        [data-kt-drawer-initialized].open & {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .kt-drawer-end {
        inset-inline-start: auto;
        max-width: 90%;
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);

        &[data-kt-drawer-initialized].open {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        [data-kt-drawer-initialized].open & {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .kt-drawer-top {
        inset-inline-start: calc(var(--spacing) * 0);
        inset-inline-end: calc(var(--spacing) * 0);
        top: auto;
        bottom: calc(var(--spacing) * 0);
        max-height: 90%;
        --tw-translate-y: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);

        &[data-kt-drawer-initialized].open {
            --tw-translate-y: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        [data-kt-drawer-initialized].open & {
            --tw-translate-y: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .kt-drawer-bottom {
        inset-inline-start: calc(var(--spacing) * 0);
        inset-inline-end: calc(var(--spacing) * 0);
        top: calc(var(--spacing) * 0);
        bottom: auto;
        max-height: 90%;
        --tw-translate-y: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);

        &[data-kt-drawer-initialized].open {
            --tw-translate-y: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        [data-kt-drawer-initialized].open & {
            --tw-translate-y: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .kt-drawer.open .kt-drawer-start {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .kt-drawer.open .kt-drawer-end {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .kt-drawer.open .kt-drawer-top {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .kt-drawer.open .kt-drawer-bottom {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
}

@layer components {
    .kt-dropdown {
        border-radius: calc(var(--radius) - 2px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        color: var(--popover-foreground);
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        &:not(.open) {
            display: none;
        }
    }

    .kt-dropdown-header {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 4);
        padding-block: calc(var(--spacing) * 3);
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .kt-dropdown-body {
        padding-inline: calc(var(--spacing) * 4);
        padding-block: calc(var(--spacing) * 3);
    }
}

@layer components {
    .kt-dropdown-menu {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }

        border-radius: calc(var(--radius) - 2px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        padding: calc(var(--spacing) * 2);
        color: var(--popover-foreground);
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow),
        var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow),
        var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        &:not(.open) {
            display: none;
        }
    }

    .kt-dropdown-menu-sub {
        width: 100%;

        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .kt-dropdown-menu-toggle {
        display: flex;
        width: 100%;
        cursor: pointer;
        align-items: center;
        column-gap: calc(var(--spacing) * 2.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
        text-align: start;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);

        &:disabled {
            pointer-events: none;
        }

        &:disabled {
            opacity: 50%;
        }

        color: var(--foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle]& {
            background-color: var(--accent);
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle] & {
            background-color: var(--accent);
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle]& {
            color: var(--accent-foreground);
        }

        [data-kt-dropdown-initialized].open>[data-kt-dropdown-toggle] & {
            color: var(--accent-foreground);
        }

        .kt-dropdown-menu-indicator {
            margin-inline-start: auto;
            display: inline-flex;
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
            flex-shrink: 0;
            align-items: center;
            color: var(--muted-foreground);
        }

        i {
            flex-shrink: 0;
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            color: var(--muted-foreground);
        }

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            flex-shrink: 0;
            color: var(--muted-foreground);
        }
    }

    .kt-dropdown-menu-link {
        display: flex;
        width: 100%;
        cursor: pointer;
        align-items: center;
        column-gap: calc(var(--spacing) * 2.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
        text-align: start;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);

        &:disabled {
            pointer-events: none;
        }

        &:disabled {
            opacity: 50%;
        }

        color: var(--foreground);

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }

        [data-kt-dropdown-initialized] .selected {
            background-color: var(--accent);
        }

        [data-kt-dropdown-initialized] .selected & {
            background-color: var(--accent);
        }

        [data-kt-dropdown-initialized] &.selected {
            background-color: var(--accent);
        }

        [data-kt-dropdown-initialized] .selected {
            color: var(--accent-foreground);
        }

        [data-kt-dropdown-initialized] .selected & {
            color: var(--accent-foreground);
        }

        [data-kt-dropdown-initialized] &.selected {
            color: var(--accent-foreground);
        }

        i {
            flex-shrink: 0;
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            color: var(--muted-foreground);
        }

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            flex-shrink: 0;
            color: var(--muted-foreground);
        }
    }

    .kt-dropdown-menu-separator {
        margin-inline: calc(var(--spacing) * -2);
        margin-block: calc(var(--spacing) * 2.5);
        height: 1px;
        background-color: var(--border);

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: 180deg;
        }

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
        }
    }
}

@layer components {
    .kt-image-input {
        position: relative;
        display: inline-flex;
        width: calc(var(--spacing) * 20);
        height: calc(var(--spacing) * 20);
        cursor: pointer;
        align-items: center;
        justify-content: center;

        input[type="file"] {
            position: absolute;
            width: calc(var(--spacing) * 0);
            height: calc(var(--spacing) * 0);
            appearance: none;
            opacity: 0%;
        }
    }

    .kt-image-input-remove {
        position: absolute;
        inset-inline-end: calc(var(--spacing) * 0.25);
        top: calc(var(--spacing) * 0.25);
        z-index: 1;
        display: flex;
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border-radius: calc(infinity * 1px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--background);
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);

        i {
            font-size: 11px;
            color: var(--muted-foreground);
        }

        svg {
            width: calc(var(--spacing) * 3.25);
            height: calc(var(--spacing) * 3.25);
            color: var(--muted-foreground);
        }

        &:hover {
            i {
                color: var(--foreground);
            }

            svg {
                color: var(--foreground);
            }
        }
    }

    .kt-image-input-placeholder {
        position: relative;
        width: 100%;
        height: 100%;
        overflow: hidden;
        border-radius: calc(infinity * 1px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-size: cover;
        background-repeat: no-repeat;

        [data-kt-image-input-initialized].empty & {
            border-color: var(--border);
        }
    }

    .kt-image-input-preview {
        position: relative;
        width: 100%;
        height: 100%;
        overflow: hidden;
        border-radius: calc(infinity * 1px);
        background-size: cover;
        background-repeat: no-repeat;
    }
}

@layer components {
    .kt-input {
        display: block;
        width: 100%;
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--background);
        color: var(--foreground);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        outline-style: var(--tw-outline-style);
        outline-width: 0px;
        transition-property: color,
        box-shadow;
        transition-timing-function: var(--tw-ease,
            var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
            var(--default-transition-duration));

        &::placeholder {
            color: var(--muted-foreground);
        }

        &:focus-visible {
            border-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled {
            opacity: 60%;
        }

        &[readonly] {
            cursor: not-allowed;
        }

        &[readonly] {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 80%,
                        transparent);
            }
        }

        &[readonly] {
            color: var(--secondary-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--secondary-foreground) 80%,
                        transparent);
            }
        }

        &::file-selector-button {
            height: 100%;
        }

        &[type="file"] {
            padding-block: calc(var(--spacing) * 0);
        }

        &::file-selector-button {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }

        &::file-selector-button {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 1px;
        }

        &::file-selector-button {
            --tw-border-style: solid;
            border-style: solid;
        }

        &::file-selector-button {
            border-color: var(--input);
        }

        &::file-selector-button {
            background-color: transparent;
        }

        &::file-selector-button {
            padding: calc(var(--spacing) * 0);
        }

        &::file-selector-button {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        &::file-selector-button {
            color: var(--foreground);
        }

        &::file-selector-button {
            font-style: normal;
        }

        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }
    }

    .kt-input {
        height: calc(var(--spacing) * 8.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 3);
        font-size: 0.8125rem;
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);

        &::file-selector-button {
            margin-inline-end: calc(var(--spacing) * 3);
        }

        &::file-selector-button {
            padding-inline-end: calc(var(--spacing) * 3);
        }
    }

    .kt-input-lg {
        height: calc(var(--spacing) * 10);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 4);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        &::file-selector-button {
            margin-inline-end: calc(var(--spacing) * 4);
        }

        &::file-selector-button {
            padding-inline-end: calc(var(--spacing) * 4);
        }
    }

    .kt-input-sm {
        height: calc(var(--spacing) * 7);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        &::file-selector-button {
            margin-inline-end: calc(var(--spacing) * 2.5);
        }

        &::file-selector-button {
            padding-inline-end: calc(var(--spacing) * 2.5);
        }
    }
}

@layer components {
    .kt-input:not(input) {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 1.5);

        &:has(input:focus-visible) {
            border-color: var(--ring);
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }

            --tw-outline-style: none;
            outline-style: none;
        }

        input {
            display: flex;
            height: auto;
            width: 100%;
            border-style: var(--tw-border-style);
            border-width: 0px;
            background-color: transparent;
            padding: calc(var(--spacing) * 0);
            color: var(--foreground);
            --tw-shadow: 0 0 #0000;
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            transition-property: color;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
            --tw-outline-style: none;
            outline-style: none;

            &::placeholder {
                color: var(--muted-foreground);
            }

            &:focus-visible {
                --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
                box-shadow:
                    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                    var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                    var(--tw-shadow);
            }

            &:disabled {
                cursor: not-allowed;
            }

            &:disabled {
                opacity: 50%;
            }

            font-size: inherit;
            list-style: inherit;
        }

        i {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            color: var(--muted-foreground);
        }

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            color: var(--muted-foreground);
        }

        &.kt-input-sm {
            gap: calc(var(--spacing) * 1.25);

            i {
                font-size: var(--text-sm);
                line-height: var(--tw-leading, var(--text-sm--line-height));
            }

            svg {
                width: calc(var(--spacing) * 3.5);
                height: calc(var(--spacing) * 3.5);
                color: var(--muted-foreground);
            }
        }

        &.kt-input-lg {
            gap: calc(var(--spacing) * 1.5);

            i {
                font-size: var(--text-lg);
                line-height: var(--tw-leading, var(--text-lg--line-height));
            }

            svg {
                width: calc(var(--spacing) * 4);
                height: calc(var(--spacing) * 4);
                color: var(--muted-foreground);
            }
        }
    }
}

@layer components {
    .kt-input-addon {
        display: flex;
        flex-shrink: 0;
        align-items: center;
        justify-content: center;
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--muted);
        color: var(--secondary-foreground);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        height: calc(var(--spacing) * 8.5);
        min-width: calc(var(--spacing) * 8.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 3);
        font-size: 0.8125rem;
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);

        i {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }

        svg {
            width: calc(var(--spacing) * 4.5);
            height: calc(var(--spacing) * 4.5);
        }

        &.kt-input-addon-sm {
            height: calc(var(--spacing) * 7);
            min-width: calc(var(--spacing) * 7);
            border-radius: calc(var(--radius) - 2px);
            padding-inline: calc(var(--spacing) * 2.5);
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));

            i {
                font-size: var(--text-base);
                line-height: var(--tw-leading, var(--text-base--line-height));
            }

            svg {
                width: calc(var(--spacing) * 3.5);
                height: calc(var(--spacing) * 3.5);
            }
        }

        &.kt-input-addon-lg {
            height: calc(var(--spacing) * 10);
            min-width: calc(var(--spacing) * 10);
            border-radius: calc(var(--radius) - 2px);
            padding-inline: calc(var(--spacing) * 4);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));

            i {
                font-size: var(--text-lg);
                line-height: var(--tw-leading, var(--text-lg--line-height));
            }

            svg {
                width: calc(var(--spacing) * 4.5);
                height: calc(var(--spacing) * 4.5);
            }
        }

        &.kt-input-addon-icon {
            padding-inline: calc(var(--spacing) * 0);
        }
    }
}

@layer components {
    .kt-input-ghost {
        border-style: var(--tw-border-style);
        border-width: 0px;
        background-color: var(--background);
        padding: calc(var(--spacing) * 0);
        --tw-shadow: 0 0 #0000;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);

        &:focus-visible {
            border-style: var(--tw-border-style);
            border-width: 0px;
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }
}

@layer components {
    .dark .kt-input {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 20%,
                        transparent);
            }
        }
    }
}

@layer components {
    .kt-input-group {
        position: relative;
        display: flex;
        align-items: stretch;

        .kt-input {
            z-index: 1;
            flex-grow: 1;
        }

        .kt-input-addon:has(+ .kt-input) {
            border-start-end-radius: 0 !important;
            border-end-end-radius: 0 !important;
            border-inline-end-style: var(--tw-border-style) !important;
            border-inline-end-width: 0px !important;
        }

        .kt-input+.kt-input-addon {
            border-start-start-radius: 0 !important;
            border-end-start-radius: 0 !important;
            border-inline-start-style: var(--tw-border-style) !important;
            border-inline-start-width: 0px !important;
        }

        .kt-input-addon:has(+ .kt-btn) {
            border-start-end-radius: 0 !important;
            border-end-end-radius: 0 !important;
        }

        .kt-input+.kt-btn {
            border-start-start-radius: 0 !important;
            border-end-start-radius: 0 !important;
        }

        .kt-input+.kt-btn.kt-btn-outline {
            border-inline-start-style: var(--tw-border-style) !important;
            border-inline-start-width: 0px !important;
        }

        .kt-btn+.kt-input,
        .kt-input-addon+.kt-input {
            border-start-start-radius: 0 !important;
            border-end-start-radius: 0 !important;
        }

        .kt-input:has(+ .kt-btn),
        .kt-input:has(+ .kt-input-addon) {
            border-start-end-radius: 0 !important;
            border-end-end-radius: 0 !important;
        }
    }
}

@layer components {
    .kt-modal {
        position: fixed;
        inset: calc(var(--spacing) * 0);
        overflow: auto;
        padding: calc(var(--spacing) * 4);

        &:not(.open) {
            display: none;
        }
    }

    .kt-modal-backdrop {
        position: fixed;
        inset: calc(var(--spacing) * 0);
        background-color: color-mix(in srgb, #000 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab,
                    var(--color-black) 30%,
                    transparent);
        }

        backdrop-filter: blur(4px);
        transition-property: all;
        transition-timing-function: var(--tw-ease,
            var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
            var(--default-transition-duration));
        --tw-duration: 300ms;
        transition-duration: 300ms;
    }

    .kt-modal-close {
        margin-inline-end: calc(var(--spacing) * -2.5);
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
        flex-shrink: 0;
        cursor: pointer;

        i {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
            opacity: 70%;
        }

        >svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            opacity: 70%;
        }

        &:focus,
        &:hover {
            i {
                opacity: 100%;
            }

            >svg {
                opacity: 100%;
            }
        }
    }

    .kt-modal-dialog {
        position: fixed;
        inset-inline-start: calc(1 / 2 * 100%);
        top: calc(1 / 2 * 100%);
        display: none;
        --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
        --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
        overflow: auto;
        padding: calc(var(--spacing) * 4);
    }

    .kt-modal-content {
        position: relative;
        margin-inline: auto;
        display: flex;
        flex-direction: column;
        border-radius: var(--radius);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        color: var(--popover-foreground);
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }

    .kt-modal-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: calc(var(--spacing) * 2);
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 5);
        padding-block: calc(var(--spacing) * 4);
    }

    .kt-modal-title {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        color: var(--mono);
    }

    .kt-modal-body {
        overflow-y: auto;
        padding-inline: calc(var(--spacing) * 5);
        padding-block: calc(var(--spacing) * 4);
    }

    .kt-modal-footer {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: calc(var(--spacing) * 2);
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 5);
        padding-block: calc(var(--spacing) * 4);
    }

    .kt-modal-center:not(.kt-modal-fit) {
        .kt-modal-content {
            top: calc(1 / 2 * 100%);
            --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .kt-modal-fit {
        overflow: visible;
        padding: calc(var(--spacing) * 0);

        &.kt-modal-center {
            inset-inline-start: calc(1 / 2 * 100%);
            top: calc(1 / 2 * 100%);
            --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
            --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }
}

@layer components {
    .kt-radio {
        cursor: pointer;
        appearance: none;
        background-position: center;
        background-repeat: no-repeat;
        flex-shrink: 0;
        border-radius: calc(infinity * 1px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--background);
        --tw-ring-offset-color: var(--background);

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled {
            opacity: 50%;
        }

        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }

        &:is(.dark *) {
            &[aria-invalid="true"] {
                border-color: var(--destructive);
            }
        }

        &:is(.dark *) {
            &[aria-invalid="true"] {
                --tw-ring-color: var(--destructive);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab,
                            var(--destructive) 20%,
                            transparent);
                }
            }
        }
    }

    .kt-radio {
        &:checked {
            border-color: var(--primary);
        }

        &:checked {
            background-color: var(--primary);
        }

        &:checked {
            color: var(--primary-foreground);
        }

        &:indeterminate {
            border-color: var(--primary);
        }

        &:indeterminate {
            background-color: var(--primary);
        }

        &:indeterminate {
            color: var(--primary-foreground);
        }
    }

    .kt-radio {

        &:checked,
        &[aria-checked="true"] {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 22 22' fill='none'%3E%3Ccircle cx='10.9995' cy='11' r='5.86667' fill='white'/%3E%3C/svg%3E");
        }
    }

    .kt-radio {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
    }

    .kt-radio-sm {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);
    }

    .kt-radio-lg {
        width: calc(var(--spacing) * 5.5);
        height: calc(var(--spacing) * 5.5);
    }

    .kt-radio-mono {
        &:checked {
            border-color: var(--mono);
        }

        &:checked {
            background-color: var(--mono);
        }

        &:checked {
            color: var(--mono-foreground);
        }

        &:indeterminate {
            border-color: var(--mono);
        }

        &:indeterminate {
            background-color: var(--mono);
        }

        &:indeterminate {
            color: var(--mono-foreground);
        }
    }
}

@layer components {
    .dark .kt-radio {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 20%,
                        transparent);
            }
        }
    }
}

@layer components {
    :root {
        --kt-scrollable-scrollbar-size: 5px;
        --kt-scrollable-thumb-color: var(--color-accent);
    }

    .kt-scrollable::-webkit-scrollbar {
        width: var(--kt-scrollable-scrollbar-size);
        height: var(--kt-scrollable-scrollbar-size);
    }

    .kt-scrollable::-webkit-scrollbar-track {
        background: transparent;
    }

    .kt-scrollable::-webkit-scrollbar-thumb {
        background: var(--kt-scrollable-thumb-color);
        border-radius: var(--kt-scrollable-scrollbar-size);
    }

    @-moz-document url-prefix() {
        .kt-scrollable {
            scrollbar-width: thin;
            scrollbar-color: var(--kt-scrollable-thumb-color) transparent;
        }
    }
}

@layer components {
    .kt-select {
        display: flex;
        width: 100%;
        cursor: pointer;
        appearance: none;
        align-items: center;
        gap: calc(var(--spacing) * 2);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--background);
        padding-block: calc(var(--spacing) * 0);
        color: var(--foreground);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        transition-property: color,
        box-shadow;
        transition-timing-function: var(--tw-ease,
            var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
            var(--default-transition-duration));

        &::placeholder {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 80%,
                        transparent);
            }
        }

        &:focus-visible {
            border-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled {
            opacity: 60%;
        }

        &[readonly] {
            opacity: 70%;
        }

        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }

        background-repeat: no-repeat;
        background-size: 14px 11px;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%239f9fa9' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3E%3C/svg%3E");

        .dark & {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%239f9fa9' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3E%3C/svg%3E");
        }

        &[multiple],
        &[size]:not([size="1"]) {
            padding-inline-end: var(--btn-default-px);
            background-image: none;
        }

        &:-moz-focusring {
            color: transparent;
            text-shadow: none;
        }

        &.active {
            border-color: var(--ring);
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }

            --tw-outline-style: none;
            outline-style: none;
        }

        &.disabled {
            cursor: not-allowed;
            opacity: 60%;
        }
    }

    .kt-select-label {
        display: flex;
        align-items: center;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .kt-select-arrow {
        margin-inline-start: auto;

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            color: var(--muted-foreground);
        }
    }

    .kt-select-search {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 4);
        padding-block: calc(var(--spacing) * 1);

        .kt-input {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .kt-select-search-empty {
        padding-inline: calc(var(--spacing) * 3.5);
        padding-block: calc(var(--spacing) * 1);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--muted-foreground);
    }

    .kt-select-dropdown {
        border-radius: calc(var(--radius) - 2px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        color: var(--popover-foreground);
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }
    }

    .kt-select-select-all {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 2);
        padding-block: calc(var(--spacing) * 1);
    }

    .kt-select-select-all-button {
        width: 100%;
        cursor: pointer;
        border-radius: calc(var(--radius) - 2px);
        padding: calc(var(--spacing) * 1.5);
        text-align: start;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }
    }

    .kt-select-options {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
        }

        padding: calc(var(--spacing) * 1);
    }

    .kt-select-wrapper {
        width: 100%;

        &.disabled {
            pointer-events: none;
            opacity: 60%;
        }
    }

    .kt-select-option {
        display: flex;
        flex-grow: 1;
        cursor: pointer;
        align-items: center;
        gap: calc(var(--spacing) * 2.5);
        border-radius: calc(var(--radius) - 2px);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 1.75);
        text-align: start;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        &:hover {
            @media (hover: hover) {
                background-color: var(--accent);
            }
        }

        &:hover {
            @media (hover: hover) {
                color: var(--accent-foreground);
            }
        }

        &[aria-disabled="true"],
        &.disabled {
            pointer-events: none;
            opacity: 60%;
        }

        &.focused,
        &.hover,
        &.highlighted {
            background-color: var(--accent);
            color: var(--accent-foreground);
        }
    }

    .kt-select-option-text {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .kt-select-group {
        padding-block: calc(var(--spacing) * 1);
    }

    .kt-select-group-header {
        padding-inline: calc(var(--spacing) * 3);
        padding-block: calc(var(--spacing) * 1);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        color: var(--muted-foreground);
        text-transform: uppercase;
    }

    .kt-select-placeholder {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        text-overflow: ellipsis;
        color: var(--muted-foreground);
    }

    .kt-select-display:not([data-multiple="true"]) {
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

@layer components {
    .kt-select {
        height: calc(var(--spacing) * 8.5);
        gap: calc(var(--spacing) * 1);
        border-radius: calc(var(--radius) - 2px);
        padding-inline-start: calc(var(--spacing) * 3);
        padding-inline-end: calc(var(--spacing) * 6);
        font-size: 0.8125rem;
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);
        background-position: right 0.5rem center;

        &[data-multiple="true"] {
            height: auto;
            min-height: calc(var(--spacing) * 8.5);
            flex-wrap: wrap;
            padding-block: calc(var(--spacing) * 1.5);
            background-position: right 0.5rem top 0.675rem;
        }
    }

    .kt-select-sm {
        height: calc(var(--spacing) * 7);
        gap: calc(var(--spacing) * 1);
        border-radius: calc(var(--radius) - 2px);
        padding-inline-start: calc(var(--spacing) * 2.5);
        padding-inline-end: calc(var(--spacing) * 5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        background-position: right 0.5rem center;

        &[data-multiple="true"] {
            height: auto;
            min-height: calc(var(--spacing) * 7);
            background-position: right 0.5rem top 0.575rem;
        }
    }

    .kt-select-lg {
        height: calc(var(--spacing) * 10);
        gap: calc(var(--spacing) * 1.5);
        border-radius: calc(var(--radius) - 2px);
        padding-block: calc(var(--spacing) * 1);
        padding-inline-start: calc(var(--spacing) * 4);
        padding-inline-end: calc(var(--spacing) * 8);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        background-position: right 0.6rem center;

        &[data-multiple="true"] {
            height: auto;
            min-height: calc(var(--spacing) * 10);
            padding-block: calc(var(--spacing) * 2);
            background-position: right 0.6rem top 0.85rem;
        }
    }
}

@layer components {
    [dir="rtl"] {
        .kt-select {
            background-position: left 0.5rem center;

            &[data-multiple="true"] {
                background-position: left 0.5rem top 0.675rem;
            }
        }

        .kt-select-sm {
            background-position: left 0.5rem center;

            &[data-multiple="true"] {
                background-position: left 0.5rem top 0.575rem;
            }
        }

        .kt-select-lg {
            background-position: left 0.75rem center;

            &[data-multiple="true"] {
                background-position: left 0.75rem top 0.85rem;
            }
        }
    }
}

@layer components {
    .dark .kt-input {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 20%,
                        transparent);
            }
        }
    }
}

@layer components {
    .kt-switch {
        position: relative;
        display: inline-flex;
        flex-shrink: 0;
        cursor: pointer;
        appearance: none;
        background-color: var(--input);

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-offset-width: 2px;
            --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        }

        &:focus-visible {
            --tw-ring-offset-color: var(--background);
        }

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled {
            opacity: 50%;
        }

        &[aria-invalid="true"] {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }

        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }

        &:before {
            pointer-events: none;
            position: absolute;
            inset-inline-start: calc(var(--spacing) * 0);
            top: calc(1 / 2 * 100%);
            display: block;
            --tw-translate-x: calc(var(--spacing) * 1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
            --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
            border-radius: calc(infinity * 1px);
            background-color: var(--color-white);
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease,
                    var(--default-transition-timing-function));
            transition-duration: var(--tw-duration,
                    var(--default-transition-duration));
            --tw-content: "";
            content: var(--tw-content);
        }

        &:checked,
        &[aria-checked="true"] {
            background-color: var(--primary);
        }
    }

    .kt-switch {
        height: calc(var(--spacing) * 5);
        width: calc(var(--spacing) * 7.5);
        border-radius: calc(infinity * 1px);

        &:before {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }

        &:checked,
        &[aria-checked="true"] {
            &:before {
                --tw-translate-x: calc(var(--spacing) * 3.5);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .kt-switch-sm {
        height: calc(var(--spacing) * 4.5);
        width: calc(var(--spacing) * 6.5);
        border-radius: calc(infinity * 1px);

        &:before {
            width: calc(var(--spacing) * 2.5);
            height: calc(var(--spacing) * 2.5);
        }

        &:checked,
        &[aria-checked="true"] {
            &:before {
                --tw-translate-x: calc(var(--spacing) * 3);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .kt-switch-lg {
        height: calc(var(--spacing) * 5.5);
        width: calc(var(--spacing) * 8.5);
        border-radius: calc(infinity * 1px);

        &:before {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }

        &:checked,
        &[aria-checked="true"] {
            &:before {
                --tw-translate-x: calc(var(--spacing) * 4);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }
}

@layer components {
    [dir="rtl"] .kt-switch {
        &:before {
            --tw-translate-x: calc(var(--spacing) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        &:checked,
        &[aria-checked="true"] {
            &:before {
                --tw-translate-x: calc(var(--spacing) * -3.5);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }

        &.kt-switch-sm {

            &:checked,
            &[aria-checked="true"] {
                &:before {
                    --tw-translate-x: calc(var(--spacing) * -3);
                    translate: var(--tw-translate-x) var(--tw-translate-y);
                }
            }
        }

        &.kt-switch-lg {

            &:checked,
            &[aria-checked="true"] {
                &:before {
                    --tw-translate-x: calc(var(--spacing) * -4);
                    translate: var(--tw-translate-x) var(--tw-translate-y);
                }
            }
        }
    }
}

@layer components {
    .dark .kt-switch {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 20%,
                        transparent);
            }
        }
    }
}

@layer components {
    .kt-tabs.kt-tabs-line {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 7);
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
    }

    .kt-tabs.kt-tabs-line .kt-tab-toggle {
        display: inline-flex;
        cursor: pointer;
        align-items: center;
        gap: calc(var(--spacing) * 2);
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
        border-bottom-color: transparent;
        padding-block: calc(var(--spacing) * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--secondary-foreground);

        &:hover {
            @media (hover: hover) {
                color: var(--primary);
            }
        }

        &[data-kt-tab-toggle].active {
            border-color: var(--primary);
        }

        [data-kt-tab-toggle].active & {
            border-color: var(--primary);
        }

        [data-kt-tabs-initialized] [data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active) & {
            border-color: var(--primary);
        }

        &[data-kt-tab-toggle].active {
            color: var(--primary);
        }

        [data-kt-tab-toggle].active & {
            color: var(--primary);
        }

        [data-kt-tabs-initialized] [data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active) & {
            color: var(--primary);
        }

        svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
            flex-shrink: 0;
            color: var(--muted-foreground);

            &[data-kt-tab-toggle].active {
                color: var(--primary);
            }

            [data-kt-tab-toggle].active & {
                color: var(--primary);
            }

            [data-kt-tabs-initialized] [data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active) & {
                color: var(--primary);
            }
        }

        &:hover {
            svg {
                color: var(--primary);
            }
        }
    }
}

@layer components {
    .kt-textarea {
        width: 100%;
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: var(--background);
        color: var(--foreground);
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        transition-property: color,
        box-shadow;
        transition-timing-function: var(--tw-ease,
            var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
            var(--default-transition-duration));

        &::placeholder {
            color: var(--muted-foreground);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab,
                        var(--muted-foreground) 80%,
                        transparent);
            }
        }

        &:focus-visible {
            border-color: var(--ring);
        }

        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }

        &:focus-visible {
            --tw-ring-color: var(--ring);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--ring) 30%,
                        transparent);
            }
        }

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:disabled {
            cursor: not-allowed;
        }

        &:disabled {
            opacity: 60%;
        }

        &[readonly] {
            cursor: not-allowed;
        }

        &[readonly] {
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 80%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            border-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab,
                        var(--destructive) 60%,
                        transparent);
            }
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 10%,
                        transparent);
            }
        }
    }

    .kt-textarea {
        border-radius: calc(var(--radius) - 2px);
        padding: calc(var(--spacing) * 3);
        font-size: 0.8125rem;
        --tw-leading: var(--text-sm--line-height);
        line-height: var(--text-sm--line-height);
    }

    .kt-textarea-lg {
        border-radius: calc(var(--radius) - 2px);
        padding: calc(var(--spacing) * 4);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .kt-textarea-sm {
        border-radius: calc(var(--radius) - 2px);
        padding: calc(var(--spacing) * 2.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }
}

@layer components {
    .dark .kt-textarea {
        &[aria-invalid="true"] {
            border-color: var(--destructive);
        }

        &[aria-invalid="true"] {
            --tw-ring-color: var(--destructive);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-ring-color: color-mix(in oklab,
                        var(--destructive) 20%,
                        transparent);
            }
        }
    }
}

@layer components {
    .kt-tooltip {
        border-radius: calc(var(--radius) - 2px);
        background-color: var(--mono);
        padding: calc(var(--spacing) * 1.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        color: var(--mono-foreground);
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        &:is(.dark *) {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }

        &:is(.dark *) {
            border-color: var(--border);
        }

        &:not(.show) {
            display: none;
        }
    }

    .kt-tooltip-light {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        color: var(--popover-foreground);
    }
}

@layer components {
    .kt-popover {
        border-radius: calc(var(--radius) - 2px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--popover-foreground);
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }

        &:not(.show) {
            display: none;
        }
    }

    .kt-popover-header {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        color: var(--mono);
    }

    .kt-popover-content {
        padding-inline: calc(var(--spacing) * 2.5);
        padding-block: calc(var(--spacing) * 2);
    }
}

@layer components {
    .kt-table-wrapper {
        position: relative;
        width: 100%;
        overflow: auto;
    }

    .kt-table {
        width: 100%;
        border-collapse: collapse;
        text-align: left;
        vertical-align: bottom;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--foreground);
        caption-side: bottom;

        tr {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
            border-color: var(--border);
        }

        caption {
            margin-top: calc(var(--spacing) * 4);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            color: var(--muted-foreground);
        }

        thead {
            & tr {
                border-bottom-style: var(--tw-border-style);
                border-bottom-width: 1px;
            }

            th {
                height: calc(var(--spacing) * 10);
                background-color: var(--muted);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--muted) 40%,
                            transparent);
                }

                padding-inline: calc(var(--spacing) * 4);
                text-align: left;
                vertical-align: middle;
                --tw-font-weight: var(--font-weight-normal);
                font-weight: var(--font-weight-normal);
                color: var(--secondary-foreground);

                &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                    text-align: right;
                }

                &:has([role="checkbox"]) {
                    padding-inline-end: calc(var(--spacing) * 0);
                }
            }
        }

        tbody {
            & tr:last-child {
                border-style: var(--tw-border-style);
                border-width: 0px;
            }

            td {
                padding-inline: calc(var(--spacing) * 4);
                padding-block: calc(var(--spacing) * 3);
                vertical-align: middle;

                &:has([role="checkbox"]) {
                    padding-inline-end: calc(var(--spacing) * 0);
                }
            }
        }

        tfoot {
            border-top-style: var(--tw-border-style);
            border-top-width: 1px;
            background-color: var(--muted);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab,
                        var(--muted) 50%,
                        transparent);
            }

            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);

            &:last-child {
                &>tr {
                    border-bottom-style: var(--tw-border-style);
                    border-bottom-width: 0px;
                }
            }

            th {
                height: calc(var(--spacing) * 10);
                padding-inline: calc(var(--spacing) * 4);
                text-align: left;
                vertical-align: middle;
                --tw-font-weight: var(--font-weight-normal);
                font-weight: var(--font-weight-normal);
                color: var(--secondary-foreground);

                &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                    text-align: right;
                }

                &:has([role="checkbox"]) {
                    padding-inline-end: calc(var(--spacing) * 0);
                }
            }
        }

        td,
        th {
            input[type="checkbox"] {
                vertical-align: inherit;
            }
        }
    }

    [data-kt-datatable-table],
    .kt-table-highlight {
        tr {
            &.checked {
                background-color: var(--muted);
            }

            &:has(td):hover {
                background-color: var(--muted);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab,
                            var(--muted) 50%,
                            transparent);
                }
            }
        }
    }

    .kt-table-col {
        display: inline-flex;
        align-items: center;
        gap: 0.35rem;
        cursor: pointer;
    }

    .kt-table-col-label {
        display: inline-flex;
        align-items: center;
        flex-wrap: nowrap;
        white-space: nowrap;
        gap: 0.35rem;
    }

    .kt-table-col-sort {
        display: inline-flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 0.975rem;
        width: 0.975rem;
        gap: 0.125rem;
        line-height: 1;

        &:before {
            display: inline-block;
            content: "";
            height: 0.25rem;
            width: 0.438rem;
            background-repeat: no-repeat;
            background-position: center;
            background-size: cover;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M1.08333 4.83333C0.908333 4.83333 0.791667 4.775 0.675 4.65833C0.441667 4.425 0.441667 4.075 0.675 3.84167L3.59167 0.925C3.825 0.691667 4.175 0.691667 4.40833 0.925L7.325 3.84167C7.55833 4.075 7.55833 4.425 7.325 4.65833C7.09167 4.89167 6.74167 4.89167 6.50833 4.65833L4 2.15L1.49167 4.65833C1.375 4.775 1.25833 4.83333 1.08333 4.83333Z' fill='%2378829D'/%3E%3C/svg%3E");
        }

        &:after {
            display: inline-block;
            content: "";
            height: 0.25rem;
            width: 0.438rem;
            background-repeat: no-repeat;
            background-position: center;
            background-size: cover;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M4 4.24984C3.825 4.24984 3.70833 4.1915 3.59167 4.07484L0.675 1.15817C0.441667 0.924838 0.441667 0.574837 0.675 0.341504C0.908333 0.108171 1.25833 0.108171 1.49167 0.341504L4 2.84984L6.50833 0.341504C6.74167 0.108171 7.09167 0.108171 7.325 0.341504C7.55833 0.574837 7.55833 0.924838 7.325 1.15817L4.40833 4.07484C4.29167 4.1915 4.175 4.24984 4 4.24984Z' fill='%2378829D'/%3E%3C/svg%3E");
        }

        [aria-sort="asc"] & {
            &:before {
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M1.08333 4.83333C0.908333 4.83333 0.791667 4.775 0.675 4.65833C0.441667 4.425 0.441667 4.075 0.675 3.84167L3.59167 0.925C3.825 0.691667 4.175 0.691667 4.40833 0.925L7.325 3.84167C7.55833 4.075 7.55833 4.425 7.325 4.65833C7.09167 4.89167 6.74167 4.89167 6.50833 4.65833L4 2.15L1.49167 4.65833C1.375 4.775 1.25833 4.83333 1.08333 4.83333Z' fill='%234B5675'/%3E%3C/svg%3E");
            }

            &:after {
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M4 4.24984C3.825 4.24984 3.70833 4.1915 3.59167 4.07484L0.675 1.15817C0.441667 0.924838 0.441667 0.574837 0.675 0.341504C0.908333 0.108171 1.25833 0.108171 1.49167 0.341504L4 2.84984L6.50833 0.341504C6.74167 0.108171 7.09167 0.108171 7.325 0.341504C7.55833 0.574837 7.55833 0.924838 7.325 1.15817L4.40833 4.07484C4.29167 4.1915 4.175 4.24984 4 4.24984Z' fill='%23C9CEDA'/%3E%3C/svg%3E");
            }
        }

        [aria-sort="desc"] & {
            &:before {
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M1.08333 4.83333C0.908333 4.83333 0.791667 4.775 0.675 4.65833C0.441667 4.425 0.441667 4.075 0.675 3.84167L3.59167 0.925C3.825 0.691667 4.175 0.691667 4.40833 0.925L7.325 3.84167C7.55833 4.075 7.55833 4.425 7.325 4.65833C7.09167 4.89167 6.74167 4.89167 6.50833 4.65833L4 2.15L1.49167 4.65833C1.375 4.775 1.25833 4.83333 1.08333 4.83333Z' fill='%23C9CEDA'/%3E%3C/svg%3E");
            }

            &:after {
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M4 4.24984C3.825 4.24984 3.70833 4.1915 3.59167 4.07484L0.675 1.15817C0.441667 0.924838 0.441667 0.574837 0.675 0.341504C0.908333 0.108171 1.25833 0.108171 1.49167 0.341504L4 2.84984L6.50833 0.341504C6.74167 0.108171 7.09167 0.108171 7.325 0.341504C7.55833 0.574837 7.55833 0.924838 7.325 1.15817L4.40833 4.07484C4.29167 4.1915 4.175 4.24984 4 4.24984Z' fill='%234B5675'/%3E%3C/svg%3E");
            }
        }
    }
}

@layer components {
    .kt-table-border {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);

        & td,
        & th {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 1px;
            border-color: var(--border);

            &:last-child {
                border-inline-end-style: var(--tw-border-style);
                border-inline-end-width: 0px;
            }
        }
    }

    .kt-table-border-s {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 1px;
        border-color: var(--border);
    }

    .kt-table-border-e {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
        border-color: var(--border);
    }

    .kt-table-border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
        border-color: var(--border);
    }

    .kt-table-border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--border);
    }
}

@layer components {
    [dir="rtl"] .kt-table {
        text-align: right;
    }
}

@layer components {
    .kt-toggle-group {
        display: inline-flex;
        align-items: center;
        background-color: var(--background);
        --tw-leading: 1;
        line-height: 1;
    }

    .kt-toggle-group {
        .kt-btn {
            flex-grow: 1;
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 0px;
            border-color: var(--border);
            background-color: transparent;
            color: var(--accent-foreground);

            &:last-child {
                border-inline-end-style: var(--tw-border-style);
                border-inline-end-width: 1px;
                border-color: var(--border);
            }

            &:not(:first-child) {
                border-start-start-radius: 0;
                border-end-start-radius: 0;
            }

            &:not(:last-child) {
                border-start-end-radius: 0;
                border-end-end-radius: 0;
            }

            &:not(:first-child):not(:last-child) {
                border-radius: 0;
            }

            svg,
            i {
                color: var(--muted-foreground);
            }

            input[type="checkbox"],
            input[type="radio"] {
                display: none;
            }

            &:hover,
            &:focus,
            &:active,
            &:has(input:checked),
            &.active {
                background-color: var(--accent);
                color: var(--accent-foreground);

                svg,
                i {
                    color: var(--accent-foreground);
                }
            }
        }
    }
}

@layer components {
    .kt-separator {
        height: 1px;
        width: 100%;
        flex-shrink: 0;
        background-color: var(--border);
    }

    .kt-separator-vertical {
        height: 100%;
        width: 1px;
    }
}

@layer components {
    .kt-progress {
        position: relative;
        height: calc(var(--spacing) * 1);
        width: 100%;
        overflow: hidden;
        border-radius: calc(infinity * 1px);
        background-color: var(--secondary);
    }

    .kt-progress-indicator {
        height: 100%;
        width: 100%;
        flex: 1;
        transform: translateX(calc(100 - var(--progress-value)));
        border-radius: calc(infinity * 1px);
        background-color: var(--primary);
        transition-property: all;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));
    }

    .kt-progress-primary {
        .kt-progress-indicator {
            background-color: var(--primary);
        }
    }

    .kt-progress-success {
        .kt-progress-indicator {
            background-color: var(--color-green-500);
        }
    }

    .kt-progress-warning {
        .kt-progress-indicator {
            background-color: var(--color-yellow-500);
        }
    }

    .kt-progress-info {
        .kt-progress-indicator {
            background-color: var(--color-violet-500);
        }
    }

    .kt-progress-destructive {
        .kt-progress-indicator {
            background-color: var(--destructive);
        }
    }

    .kt-progress-mono {
        .kt-progress-indicator {
            background-color: var(--mono);
        }
    }
}

@layer components {
    .kt-pagination {
        display: flex;
        align-items: center;
        gap: calc(var(--spacing) * 1);
    }

    .kt-pagination-item {
        display: flex;
        flex-shrink: 0;
        flex-direction: row;
        align-items: center;
        gap: calc(var(--spacing) * 1);

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            color: var(--muted-foreground);
        }
    }

    .kt-pagination-ellipsis {
        display: flex;
        height: calc(var(--spacing) * 9);
        width: calc(var(--spacing) * 9);
        align-items: center;
        justify-content: center;

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
            color: var(--muted-foreground);
        }
    }
}

@layer components {
    .kt-skeleton {
        animation: var(--animate-pulse);
        border-radius: calc(var(--radius) - 2px);
        background-color: var(--accent);
    }
}

@layer components {
    .kt-kbd {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: calc(var(--radius) - 2px);
        font-family: var(--font-mono);
    }

    .kt-kbd {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--accent);
        color: var(--accent-foreground);
    }

    .kt-kbd-outline {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--input);
        background-color: transparent;
        color: var(--accent-foreground);
    }

    .kt-kbd {
        height: calc(var(--spacing) * 7);
        min-width: calc(var(--spacing) * 7);
        padding-inline: calc(var(--spacing) * 1.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        & svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .kt-kbd-xs {
        height: calc(var(--spacing) * 5);
        min-width: calc(var(--spacing) * 5);
        padding-inline: calc(var(--spacing) * 1);
        font-size: 0.6875rem;
        --tw-leading: 0.75rem;
        line-height: 0.75rem;

        & svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }
    }

    .kt-kbd-sm {
        height: calc(var(--spacing) * 6);
        min-width: calc(var(--spacing) * 6);
        padding-inline: calc(var(--spacing) * 1);
        font-size: 0.75rem;
        --tw-leading: 0.75rem;
        line-height: 0.75rem;

        & svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
        }
    }
}

@layer components {
    .kt-breadcrumb {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: calc(var(--spacing) * 1.5);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        overflow-wrap: break-word;
        color: var(--muted-foreground);
    }

    .kt-breadcrumb-item {
        display: inline-flex;
        align-items: center;
        gap: calc(var(--spacing) * 1.5);
    }

    .kt-breadcrumb-link {
        transition-property:
            color, background-color, border-color, outline-color,
            text-decoration-color, fill, stroke, --tw-gradient-from,
            --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease,
                var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,
                var(--default-transition-duration));

        &:hover {
            @media (hover: hover) {
                color: var(--foreground);
            }
        }

        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .kt-breadcrumb-page {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--foreground);
    }

    .kt-breadcrumb-separator {
        svg {
            width: calc(var(--spacing) * 3.5);
            height: calc(var(--spacing) * 3.5);
        }
    }

    .kt-breadcrumb-ellipsis {
        svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }
}

@layer components {
    .kt-toast-container {
        position: fixed;
        z-index: 9999;
    }

    .kt-toast {
        pointer-events: auto;
        position: fixed;
        z-index: 9999;
        width: calc(var(--spacing) * 76);
        max-width: 95%;
        overflow: hidden;
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        opacity: 0;
        animation: kt-toast-in 0.28s cubic-bezier(0.4, 0, 0.2, 1) forwards;
        transition:
            top 0.28s cubic-bezier(0.4, 0, 0.2, 1),
            opacity 0.28s cubic-bezier(0.4, 0, 0.2, 1);

        &.kt-toast-top-end {
            inset-inline-end: calc(var(--spacing) * 0);
            top: calc(var(--spacing) * 0);
            bottom: auto;
        }

        &.kt-toast-top-center {
            inset-inline-start: calc(1 / 2 * 100%);
            top: calc(var(--spacing) * 0);
            bottom: auto;
            --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        &.kt-toast-top-start {
            inset-inline-start: calc(var(--spacing) * 0);
            top: calc(var(--spacing) * 0);
            bottom: auto;
        }

        &.kt-toast-bottom-end {
            inset-inline-end: calc(var(--spacing) * 0);
            top: auto;
            bottom: calc(var(--spacing) * 0);
        }

        &.kt-toast-bottom-center {
            inset-inline-start: calc(1 / 2 * 100%);
            top: auto;
            bottom: calc(var(--spacing) * 0);
            --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        &.kt-toast-bottom-start {
            inset-inline-start: calc(var(--spacing) * 0);
            top: auto;
            bottom: calc(var(--spacing) * 0);
        }
    }

    .kt-toast-progress {
        position: fixed;
        inset-inline-start: calc(var(--spacing) * 0);
        bottom: calc(var(--spacing) * 0);
        height: 3px;
        width: 100%;
        background-color: var(--primary);
        transform-origin: left;
        animation: kt-toast-progress-line linear forwards;
    }
}

@layer components {
    [dir="rtl"] .kt-toast-progress {
        transform-origin: right;
    }
}

@layer components {
    @keyframes kt-toast-in {
        from {
            opacity: 0;
            transform: translateY(-24px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes kt-toast-out {
        from {
            opacity: 1;
        }

        to {
            opacity: 0;
        }
    }

    @keyframes kt-toast-progress-line {
        from {
            transform: scaleX(1);
        }

        to {
            transform: scaleX(0);
        }
    }
}

.appearance-none {
    background-image: none !important;
    box-shadow: none;
    background-color: transparent;
    border: 0;
    width: 0;
    height: 0;
}

@layer components {

    .apexcharts-text,
    .apexcharts-title-text,
    .apexcharts-legend-text {
        font-family: inherit !important;
    }

    .apexcharts-title-text {
        font-weight: var(--font-weight-normal);
    }

    .apexcharts-pie-label {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .apexcharts-toolbar {
        text-align: start !important;
    }

    .apexcharts-menu {
        border: 1px solid var(--color-border) !important;
        box-shadow: var(--box-shadow-sm) !important;
        background-color: var(--color-background) !important;
        border-radius: 0.625rem !important;
        padding: 0.5rem 0 !important;
        overflow: hidden;
        min-width: 10rem !important;
    }

    .apexcharts-menu .apexcharts-menu-item {
        padding: 0.5rem 0.5rem !important;
    }

    .apexcharts-menu .apexcharts-menu-item:hover {
        background-color: var(--gray-100) !important;
    }

    .apexcharts-tooltip {
        border: 1px solid var(--color-border) !important;
        box-shadow: var(--box-shadow-sm) !important;
        background-color: var(--color-background) !important;
        border-radius: 0.625rem !important;
        color: var(--color-secondary-foreground) !important;
    }

    .apexcharts-tooltip .apexcharts-tooltip-title {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--foreground);
        padding: 0.25rem 0.5rem !important;
        background-color: transparent !important;
        border-bottom: 1px solid var(--color-border) !important;
    }

    .apexcharts-xaxistooltip {
        border: 1px solid var(--color-border) !important;
        box-shadow: var(--box-shadow-sm) !important;
        background-color: var(--color-background) !important;
        border-radius: 0.625rem;
        color: var(--color-mono);
    }

    .apexcharts-xaxistooltip:before {
        border-bottom: 0 !important;
    }

    .apexcharts-legend {
        display: flex;
        flex-direction: column;
        gap: calc(var(--spacing) * 2);
    }

    .apexcharts-legend .apexcharts-legend-series {
        gap: calc(var(--spacing) * 1);
        display: flex;
        align-items: center;
    }

    .apexcharts-legend .apexcharts-legend-series .apexcharts-legend-text {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--muted-foreground);
    }

    .apexcharts-card-rounded .apexcharts-canvas svg {
        border-bottom-left-radius: var(--radius-xl);
        border-bottom-right-radius: var(--radius-xl);
    }

    .apexcharts-rounded-sm .apexcharts-canvas svg {
        border-radius: var(--radius-sm);
    }

    .apexcharts-rounded .apexcharts-canvas svg {
        border-radius: var(--radius-md);
    }

    .apexcharts-rounded-lg .apexcharts-canvas svg {
        border-radius: var(--radius-lg);
    }

    .apexcharts-rounded-xl .apexcharts-canvas svg {
        border-radius: var(--radius-xl);
    }
}

@layer components {
    .kt-container-fixed {
        width: 100%;
        flex-grow: 1;
        padding-inline: calc(var(--spacing) * 6);

        @media (width >=80rem) {
            margin-inline: auto;
        }

        @media (width >=80rem) {
            max-width: var(--breakpoint-xl);
        }

        @media (width >=80rem) {
            padding-inline: calc(var(--spacing) * 7.5);
        }
    }
}

@layer components {
    .kt-container-fluid {
        width: 100%;
        flex-grow: 1;
        padding-inline: calc(var(--spacing) * 6);

        @media (width >=80rem) {
            padding-inline: calc(var(--spacing) * 7.5);
        }
    }
}

@layer components {
    .leaflet-container {

        & .leaflet-pane,
        & .leaflet-top,
        & .leaflet-bottom,
        & .leaflet-control {
            z-index: 1 !important;
        }

        & .leaflet-popup-content-wrapper {
            border-radius: var(--radius-md);
            text-align: center;
            background-color: var(--color-popover);

            & .leaflet-popup-content {
                font-family: inherit;
                font-size: var(--text-xs);
                line-height: var(--tw-leading, var(--text-xs--line-height));
            }
        }
    }
}

@layer components {
    .kt-menu {
        display: flex;
    }

    .kt-menu-item,
    .kt-menu-link {
        padding: 0;
        margin: 0;
    }

    .kt-menu-item {
        display: flex;
        flex-direction: column;
    }

    .kt-menu-link,
    .kt-menu-label,
    .kt-menu-toggle {
        cursor: pointer;
        display: flex;
        align-items: center;
        flex-grow: 1;
    }

    .kt-menu-title {
        display: flex;
        align-items: center;
        line-height: 1;
        flex-grow: 1;
    }

    .kt-menu-icon,
    .kt-menu-bullet,
    .kt-menu-badge,
    .kt-menu-arrow {
        display: flex;
        align-items: center;
        flex-shrink: 0;
    }

    .kt-menu-dropdown,
    .kt-menu-accordion {
        padding: 0;
        margin: 0;
        display: none;
        align-items: stretch;
        flex-direction: column;
    }

    .kt-menu-dropdown {

        .show.kt-menu-item-dropdown>&,
        .base-popper-root>.kt-menu-container>&,
        &.kt-menu.show,
        &.show[data-popper-placement] {
            display: flex;
            will-change: transform;
        }
    }

    .kt-menu-accordion {
        display: none;
        transition: height 0.3s ease;

        .show:not(.kt-menu-dropdown)>&,
        .transitioning:not(.kt-menu-dropdown)>&,
        &.show {
            display: flex;
        }
    }
}

@layer components {
    .kt-menu-dropdown {
        gap: calc(var(--spacing) * 0.25);
        border-radius: calc(var(--radius) - 2px);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--border);
        background-color: var(--popover);
        color: var(--popover-foreground);
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        --tw-shadow-color: rgba(0, 0, 0, 0.05);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab,
                    rgba(0, 0, 0, 0.05) var(--tw-shadow-alpha),
                    transparent);
        }
    }
}

@layer components {
    .kt-menu-default {
        gap: calc(var(--spacing) * 0.5);
        padding-block: calc(var(--spacing) * 2);

        & .kt-menu-link,
        & .kt-menu-label {
            margin-inline: calc(var(--spacing) * 2);
            border-radius: calc(var(--radius) - 2px);
            padding-inline: calc(var(--spacing) * 2);
            padding-block: calc(var(--spacing) * 2);
        }

        & .kt-menu-title {
            font-size: var(--text-2sm);
            line-height: var(--tw-leading, var(--text-2sm--line-height));
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        & .kt-menu-icon {
            margin-inline-end: calc(var(--spacing) * 2.5);

            & i {
                font-size: var(--text-lg);
                line-height: var(--tw-leading, var(--text-lg--line-height));
            }
        }

        & .kt-menu-bullet {
            margin-inline-end: calc(var(--spacing) * 2.5);
        }

        & .kt-menu-arrow {
            margin-inline-start: calc(var(--spacing) * 2);

            & i {
                font-size: var(--text-xs);
                line-height: var(--tw-leading, var(--text-xs--line-height));
            }
        }

        & .kt-menu-badge {
            margin-inline-start: calc(var(--spacing) * 2.5);
        }

        & .kt-menu-separator {
            margin-block: calc(var(--spacing) * 2);
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
            border-color: var(--border);
        }

        & .kt-menu-accordion:not(.kt-menu-no-indent) {

            & .kt-menu-item>.kt-menu-link,
            & .kt-menu-item>.kt-menu-label {
                margin-inline-start: calc(var(--spacing) * 5);
            }

            & .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-link,
            & .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-label {
                margin-inline-start: calc(var(--spacing) * 8);
            }

            & .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-link,
            & .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-label {
                margin-inline-start: calc(var(--spacing) * 11);
            }

            & .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-link,
            & .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-accordion .kt-menu-item>.kt-menu-label {
                margin-inline-start: calc(var(--spacing) * 14);
            }
        }
    }

    .kt-menu-fit {
        padding-block: calc(var(--spacing) * 0);

        & .kt-menu-link,
        & .kt-menu-label {
            margin-inline: calc(var(--spacing) * 0);
        }
    }

    .kt-menu-space {
        padding-block: calc(var(--spacing) * 2);

        & .kt-menu-link,
        & .kt-menu-label {
            margin-inline: calc(var(--spacing) * 2.5);
        }
    }
}

@layer components {
    .kt-menu-default {
        & .kt-menu-item {
            & .kt-menu-title {
                color: var(--foreground);
            }

            & .kt-menu-icon i {
                color: var(--muted-foreground);
            }

            & .kt-menu-arrow i {
                color: var(--muted-foreground);
            }

            & .kt-menu-link:hover,
            & .kt-menu-label:hover {
                & .kt-menu-title {
                    color: var(--mono);
                }

                & .kt-menu-icon i {
                    color: var(--primary);
                }
            }

            &.active,
            &.show,
            &.here,
            &.focus {

                &>.kt-menu-link,
                &>.kt-menu-label {
                    & .kt-menu-title {
                        color: var(--mono);
                    }

                    & .kt-menu-icon i {
                        color: var(--primary);
                    }
                }
            }

            &.active,
            &.here {

                &>.kt-menu-link,
                &>.kt-menu-label {
                    background-color: var(--accent);
                }
            }

            &>.kt-menu-link:hover,
            &>.kt-menu-label:hover {
                background-color: var(--accent);
            }

            &.disabled {

                &>.kt-menu-link,
                &>.kt-menu-label {
                    opacity: 50%;
                }
            }
        }
    }
}

@layer components {
    .range {
        width: 100%;
        height: 0.5rem;
        padding: 0;
        appearance: none;

        &:focus {
            outline: 0;
        }

        &::-moz-focus-outer {
            border: 0;
        }

        &::-webkit-slider-thumb {
            border-radius: calc(infinity * 1px);
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--primary);
            --tw-shadow:
                0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
                0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            width: 1.5rem;
            height: 1.5rem;
            margin-top: -0.5rem;
            appearance: none;
            transition:
                background-color 0.15s ease-in-out,
                border-color 0.15s ease-in-out,
                box-shadow 0.15s ease-in-out;

            &:active {
                background-color: var(--primary);
            }
        }

        &::-moz-range-thumb {
            border-radius: calc(infinity * 1px);
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--border);
            background-color: var(--primary);
            --tw-shadow:
                0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
                0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
            width: 1.5rem;
            height: 1.5rem;
            margin-top: -0.5rem;
            appearance: none;
            transition:
                background-color 0.15s ease-in-out,
                border-color 0.15s ease-in-out,
                box-shadow 0.15s ease-in-out;

            &:active {
                background-color: var(--primary);
            }
        }

        &::-moz-range-track {
            background-color: var(--input);
            width: 100%;
            height: 0.5rem;
            color: transparent;
            cursor: pointer;
            border-color: transparent;
            border-radius: 0.188rem;
        }

        &::-webkit-slider-runnable-track {
            background-color: var(--input);
            width: 100%;
            height: 0.5rem;
            color: transparent;
            cursor: pointer;
            border-color: transparent;
            border-radius: 0.188rem;
        }

        &:disabled {
            pointer-events: none;

            &::-webkit-slider-thumb {
                background-color: var(--accent);
            }

            &::-moz-range-thumb {
                background-color: var(--accent);
            }
        }
    }
}

@layer components {
    .kt-rating {
        display: inline-flex;
        align-items: stretch;

        & input {
            appearance: none;
            position: absolute;
            inset-inline-start: 9999px;

            &[disabled] {
                display: none;
            }
        }
    }

    .kt-rating-on {
        color: var(--color-yellow-400);
    }

    .kt-rating-off {
        color: var(--muted-foreground);
    }

    .kt-rating-label {
        display: inline-flex !important;
        align-items: center;

        & .kt-rating-on {
            display: none !important;
        }

        & .kt-rating-off {
            display: inline-flex !important;
        }
    }

    .kt-rating:hover label.kt-rating-label,
    label.kt-rating-label,
    label.kt-rating-label.checked,
    div.kt-rating-label.checked {
        & .kt-rating-on {
            display: inline-flex !important;
        }

        & .kt-rating-off {
            display: none !important;
        }
    }

    label.kt-rating-label:hover~label.kt-rating-label,
    .kt-rating-input:checked~.kt-rating-label {
        & .kt-rating-on {
            display: none !important;
        }

        & .kt-rating-off {
            display: inline-flex !important;
        }
    }

    .kt-rating-label.indeterminate {
        position: relative;

        & .kt-rating-on {
            display: inline-flex !important;
            position: absolute;
            z-index: 1;
            overflow: hidden;
            inset-inline-start: 0;
        }

        & .kt-rating-off {
            display: inline-flex !important;
        }
    }

    label.kt-rating-label {
        cursor: pointer;
    }
}

@layer components {

    .kt-scrollable,
    .kt-scrollable-y,
    .kt-scrollable-x,
    .kt-scrollable-hover,
    .kt-scrollable-y-hover,
    .kt-scrollable-x-hover,
    .kt-scrollable-auto,
    .kt-scrollable-y-auto,
    .kt-scrollable-x-auto {
        scrollbar-width: thin;
        scrollbar-color: transparent transparent;
        position: relative;

        &::-webkit-scrollbar {
            width: 0.35rem;
            height: 0.35rem;
        }

        &::-webkit-scrollbar-track {
            background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
            border-radius: 1.25rem;
        }

        &::-webkit-scrollbar-corner {
            background-color: transparent;
        }
    }

    .kt-scrollable,
    .kt-scrollable-hover {
        overflow: scroll;
    }

    .kt-scrollable-y,
    .kt-scrollable-y-hover {
        overflow-y: scroll;
    }

    .kt-scrollable-x,
    .kt-scrollable-x-hover {
        overflow-x: scroll;
    }

    .kt-scrollable-auto {
        overflow: auto;
    }

    .kt-scrollable-y-auto {
        overflow-y: auto;
    }

    .kt-scrollable-x-auto {
        overflow-x: auto;
    }

    .kt-scrollable,
    .kt-scrollable-y,
    .kt-scrollable-x,
    .kt-scrollable-auto,
    .kt-scrollable-y-auto,
    .kt-scrollable-x-auto,
    .kt-scrollable-hover:hover,
    .kt-scrollable-y-hover:hover,
    .kt-scrollable-x-hover:hover {
        scrollbar-color: var(--scrollbar-thumb-color, var(--color-input)) transparent;

        &::-webkit-scrollbar-thumb {
            background-color: var(--scrollbar-thumb-color, var(--color-input));
        }

        &::-webkit-scrollbar-corner {
            background-color: transparent;
        }
    }

    @supports (-webkit-hyphens: none) {

        .kt-scrollable,
        .kt-scrollable-hover {
            overflow: auto;
        }

        .kt-scrollable-y,
        .kt-scrollable-y-hover {
            overflow-y: auto;
        }

        .kt-scrollable-x,
        .kt-scrollable-x-hover {
            overflow-x: auto;
        }
    }

    @media (max-width: var(--screen-lg)) {

        .kt-scrollable,
        .kt-scrollable-hover {
            overflow: auto;
        }

        .kt-scrollable-y,
        .kt-scrollable-y-hover {
            overflow-y: auto;
        }

        .kt-scrollable-x,
        .kt-scrollable-x-hover {
            overflow-x: auto;
        }
    }
}

@layer components {
    .demo1 {
        --sidebar-transition-duration: 0.3s;
        --sidebar-transition-timing: ease;
        --sidebar-width: 280px;
        --sidebar-width-collapse: 80px;
        --sidebar-default-width: 280px;
        --header-height: 70px;
    }

    @media (max-width: 64rem) {
        .demo1 {
            --sidebar-width: 280px;
            --header-height: 60px;
        }
    }

    .demo1 .kt-header {
        height: var(--header-height);
    }

    .demo1 .kt-sidebar {
        width: var(--sidebar-width);
    }

    .demo1.kt-header-fixed .kt-wrapper {
        padding-top: var(--header-height);
    }

    @media (min-width: 64rem) {
        .demo1 .kt-sidebar {
            width: var(--sidebar-width);
            transition: width var(--sidebar-transition-duration) var(--sidebar-transition-timing);
        }

        .demo1 .kt-sidebar .kt-sidebar-header {
            height: var(--header-height);
        }

        .demo1 .kt-sidebar .kt-sidebar-wrapper {
            width: var(--sidebar-default-width);
        }

        .demo1 .kt-sidebar .kt-sidebar-logo {
            width: var(--sidebar-default-width);
        }

        .demo1 .kt-sidebar .small-logo {
            display: none;
        }

        .demo1.kt-sidebar-fixed .kt-wrapper {
            padding-inline-start: var(--sidebar-width) !important;
        }

        .demo1.kt-sidebar-fixed.kt-header-fixed .kt-header {
            inset-inline-start: var(--sidebar-width) !important;
        }

        .demo1.kt-sidebar-fixed.kt-header-fixed .kt-wrapper {
            padding-top: var(--header-height);
        }

        .demo1.kt-sidebar-collapse {
            --sidebar-width: var(--sidebar-width-collapse);
        }

        .demo1.kt-sidebar-collapse .kt-sidebar {
            transition: width var(--sidebar-transition-duration) var(--sidebar-transition-timing);
        }

        .demo1.kt-sidebar-collapse .kt-sidebar.animating {
            pointer-events: none;
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:hover:not(.animating) {
            width: var(--sidebar-default-width);
            transition: width var(--sidebar-transition-duration) var(--sidebar-transition-timing);
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .default-logo {
            display: none;
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .small-logo {
            display: flex;
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-link .kt-menu-title,
        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-link .kt-menu-arrow,
        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-link .kt-menu-badge,
        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-label .kt-menu-title,
        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-label .kt-menu-arrow,
        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-label .kt-menu-badge {
            display: none;
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-accordion {
            display: none;
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-heading {
            visibility: hidden;
            position: relative;
        }

        .demo1.kt-sidebar-collapse .kt-sidebar:not(:hover) .kt-menu>.kt-menu-item>.kt-menu-heading::before {
            content: "...";
            color: currentColor;
            font-size: inherit;
            position: absolute;
            visibility: visible;
            display: inline-block;
            bottom: 50%;
            inset-inline-start: 0;
            margin-inline-start: 0.225rem;
            transform: translateX(100%);
        }

        .demo1.kt-sidebar-collapse .kt-sidebar .kt-sidebar-content {
            overflow: hidden;
        }
    }

    .demo1 .kt-wrapper {
        transition: padding-inline-start var(--sidebar-transition-duration) var(--sidebar-transition-timing);
    }

    .demo1 .kt-header {
        transition: inset-inline-start var(--sidebar-transition-duration) var(--sidebar-transition-timing);
    }
}

@property --tw-border-spacing-x {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-spacing-y {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false;
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}

@property --tw-tracking {
    syntax: "*";
    inherits: false;
}

@property --tw-ordinal {
    syntax: "*";
    inherits: false;
}

@property --tw-slashed-zero {
    syntax: "*";
    inherits: false;
}

@property --tw-numeric-figure {
    syntax: "*";
    inherits: false;
}

@property --tw-numeric-spacing {
    syntax: "*";
    inherits: false;
}

@property --tw-numeric-fraction {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-duration {
    syntax: "*";
    inherits: false;
}

@property --tw-ease {
    syntax: "*";
    inherits: false;
}

@property --tw-content {
    syntax: "*";
    initial-value: "";
    inherits: false;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes pulse {
    50% {
        opacity: 0.5;
    }
}

@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {

        *,
        ::before,
        ::after,
        ::backdrop {
            --tw-border-spacing-x: 0;
            --tw-border-spacing-y: 0;
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-divide-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-ordinal: initial;
            --tw-slashed-zero: initial;
            --tw-numeric-figure: initial;
            --tw-numeric-spacing: initial;
            --tw-numeric-fraction: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-content: "";
        }
    }
}
